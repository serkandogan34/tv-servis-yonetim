import { Hono } from 'hono'
import { cors } from 'hono/cors'
import { serveStatic } from 'hono/cloudflare-workers'
import { generateBayiToken, verifyBayiAuth, hashPassword, comparePassword, generateSessionToken } from './utils/auth'
import { createPayTRPaymentRequest, verifyPayTRCallback, getPayTRConfig, PayTRPaymentRequest } from './utils/paytr'
import { generateAdminToken, verifyAdminToken, hashAdminPassword, verifyAdminPassword, requireAdminAuth, AdminUser } from './utils/adminAuth'
import { SystemLogger, createErrorResponse, createSuccessResponse } from './utils/logger'
import { DatabaseHelper } from './utils/database'
import { errorHandler, BusinessError, AuthenticationError, ValidationError } from './middleware/errorHandler'
import { validateInput, rateLimit, securityHeaders, requestLogger, ValidationRules } from './middleware/validation'
import { PerformanceMonitor, performanceMonitoring } from './utils/monitoring'
import { NotificationService } from './utils/notifications'

// Type definitions for Cloudflare bindings
type Bindings = {
  DB: D1Database
  N8N_WEBHOOK_URL?: string
}

const app = new Hono<{ Bindings: Bindings }>()

// Helper function to get tracking configuration
async function getTrackingConfig(DB: D1Database) {
  const defaultConfig = {
    ga4_measurement_id: 'G-XXXXXXXXXX',
    ga4_enabled: 'false',
    facebook_pixel_id: 'YOUR_PIXEL_ID_HERE',
    facebook_pixel_enabled: 'false',
    gtm_container_id: 'GTM-XXXXXXX',
    gtm_enabled: 'false'
  }
  
  try {
    const { results: configs } = await DB.prepare(`
      SELECT config_key, config_value, is_active 
      FROM tracking_config 
      WHERE config_category IN ('analytics', 'facebook', 'gtm') 
        AND config_key IN ('ga4_measurement_id', 'ga4_enabled', 'facebook_pixel_id', 'facebook_pixel_enabled', 'gtm_container_id', 'gtm_enabled')
    `).all()
    
    configs.forEach(config => {
      if (config.is_active === 1 || config.config_key.endsWith('_enabled')) {
        defaultConfig[config.config_key] = config.config_value
      }
    })
  } catch (error) {
    console.error('Error fetching tracking config:', error)
    // Return fallback values on error
  }
  
  return defaultConfig
}

// Helper function to generate tracking scripts
function generateTrackingScripts(trackingConfig: any, pageTitle: string, pageType: string) {
  return `
    <!-- Google Analytics 4 (GA4) Tracking Code -->
    ${trackingConfig.ga4_enabled === 'true' ? `
    <script async src="https://www.googletagmanager.com/gtag/js?id=${trackingConfig.ga4_measurement_id}"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', '${trackingConfig.ga4_measurement_id}', {
            page_title: '${pageTitle}',
            page_location: window.location.href,
            custom_map: {'dimension1': 'user_type'},
            anonymize_ip: true,
            allow_google_signals: false,
            allow_ad_personalization_signals: false
        });
        
        // GA4 Enhanced Events for Garantor360
        gtag('event', 'page_view', {
            page_title: '${pageTitle}',
            page_location: window.location.href,
            content_group1: '${pageType}',
            user_type: 'visitor'
        });
        
        // Custom events for better tracking
        gtag('event', 'garantor360_page_view', {
            event_category: 'engagement',
            event_label: '${pageType.toLowerCase()}_load',
            page_type: '${pageType.toLowerCase()}'
        });
    </script>
    ` : '<!-- GA4 Disabled -->'}
    
    <!-- Facebook Pixel Enhanced Tracking Code -->
    ${trackingConfig.facebook_pixel_enabled === 'true' ? `
    <script>
        !function(f,b,e,v,n,t,s)
        {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
        n.callMethod.apply(n,arguments):n.queue.push(arguments)};
        if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
        n.queue=[];t=b.createElement(e);t.async=!0;
        t.src=v;s=b.getElementsByTagName(e)[0];
        s.parentNode.insertBefore(t,s)}(window, document,'script',
        'https://connect.facebook.net/en_US/fbevents.js');
        
        // Enhanced Facebook Pixel Initialization for GARANTOR360
        fbq('init', '${trackingConfig.facebook_pixel_id}', {
            em: 'auto', // Enhanced matching for better attribution
            fn: 'auto',
            ln: 'auto', 
            ph: 'auto',
            external_id: 'auto'
        });
        
        // Standard PageView Event
        fbq('track', 'PageView');
        
        // Enhanced PageView with GARANTOR360 specific data
        fbq('trackCustom', 'PageViewEnhanced', {
            page_type: '${pageType}',
            content_category: 'home_services',
            content_name: '${pageTitle}',
            source: 'website',
            business_type: 'service_provider',
            service_categories: ['tv_repair', 'appliance_repair', 'computer_repair'],
            geographic_area: 'turkey',
            user_type: 'visitor',
            platform: 'website'
        });
        
        // Initialize Conversion Funnel Tracking
        fbq('trackCustom', 'FunnelStart', {
            funnel_name: 'service_request_funnel',
            entry_point: '${pageType}',
            user_journey_stage: 'awareness',
            page_category: 'home_services'
        });
        
        // Audience Building for Lookalike and Custom Audiences
        fbq('trackCustom', 'AudienceBuilder', {
            audience_type: 'website_visitors',
            interest_category: 'home_services',
            location: 'turkey',
            device_type: navigator.userAgent.includes('Mobile') ? 'mobile' : 'desktop',
            visit_source: document.referrer || 'direct'
        });
        
        console.log('🎯 Facebook Pixel Enhanced Tracking loaded for GARANTOR360 - Pixel ID: ${trackingConfig.facebook_pixel_id}');
    </script>
    <noscript><img height="1" width="1" style="display:none"
        src="https://www.facebook.com/tr?id=${trackingConfig.facebook_pixel_id}&ev=PageView&noscript=1"
    /></noscript>
    ` : '<!-- Facebook Pixel Disabled -->'}
    
    <!-- Google Tag Manager -->
    ${trackingConfig.gtm_enabled === 'true' ? `
    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','${trackingConfig.gtm_container_id}');</script>
    ` : '<!-- GTM Disabled -->'}
  `
}

// Helper function to generate GTM noscript
function generateGTMNoscript(trackingConfig: any) {
  return trackingConfig.gtm_enabled === 'true' 
    ? `<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=${trackingConfig.gtm_container_id}" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>`
    : '<!-- GTM noscript disabled -->'
}

// Helper function to generate Schema.org structured data
function generateSchemaOrg(type: 'organization' | 'service' | 'location', data: any) {
  const baseSchema = {
    "@context": "https://schema.org",
    "@type": "LocalBusiness",
    "name": "GARANTOR360",
    "description": "Türkiye'nin en güvenli ev tamiri ve tekniker hizmet platformu. 6 ay işçilik garantisi ve ödeme güvencesi ile güvenli hizmet.",
    "url": "https://garantor360.com",
    "telephone": "+90-500-123-4567",
    "email": "info@garantor360.com",
    "foundingDate": "2024",
    "paymentAccepted": "Cash, Credit Card, Bank Transfer",
    "currenciesAccepted": "TRY",
    "openingHours": "Mo-Su 00:00-23:59",
    "logo": {
      "@type": "ImageObject", 
      "url": "https://garantor360.com/static/garantor360-logo.png"
    },
    "image": {
      "@type": "ImageObject",
      "url": "https://garantor360.com/static/garantor360-hero-image.jpg"
    },
    "address": {
      "@type": "PostalAddress",
      "addressCountry": "TR",
      "addressLocality": "İstanbul",
      "addressRegion": "Marmara",
      "postalCode": "34000"
    },
    "geo": {
      "@type": "GeoCoordinates", 
      "latitude": 41.0082,
      "longitude": 28.9784
    },
    "areaServed": [
      {
        "@type": "City",
        "name": "İstanbul"
      },
      {
        "@type": "City", 
        "name": "Ankara"
      },
      {
        "@type": "City",
        "name": "İzmir"
      }
    ]
  }

  if (type === 'organization') {
    return {
      ...baseSchema,
      "@type": "Organization",
      "sameAs": [
        "https://www.facebook.com/garantor360",
        "https://www.instagram.com/garantor360", 
        "https://www.linkedin.com/company/garantor360"
      ],
      "hasOfferCatalog": {
        "@type": "OfferCatalog",
        "name": "Ev Tamiri Hizmetleri",
        "itemListElement": [
          {
            "@type": "Offer",
            "itemOffered": {
              "@type": "Service",
              "name": "TV Tamiri",
              "description": "Tüm marka televizyon tamiri ve onarımı"
            }
          },
          {
            "@type": "Offer", 
            "itemOffered": {
              "@type": "Service",
              "name": "Beyaz Eşya Tamiri",
              "description": "Buzdolabı, çamaşır makinesi ve beyaz eşya tamiri"
            }
          },
          {
            "@type": "Offer",
            "itemOffered": {
              "@type": "Service", 
              "name": "Klima Tamiri",
              "description": "Klima montajı, tamiri ve bakım servisi"
            }
          }
        ]
      }
    }
  }

  if (type === 'service') {
    return {
      ...baseSchema,
      "name": `GARANTOR360 - ${data.serviceName}`,
      "description": data.description,
      "serviceType": data.serviceName,
      "hasOfferCatalog": {
        "@type": "OfferCatalog",
        "name": data.serviceName,
        "itemListElement": data.features?.map((feature: string) => ({
          "@type": "Offer",
          "itemOffered": {
            "@type": "Service",
            "name": feature
          }
        })) || []
      },
      "priceRange": data.priceRange || "₺300-2500",
      "offers": {
        "@type": "Offer",
        "availability": "https://schema.org/InStock",
        "priceCurrency": "TRY",
        "price": data.startingPrice || "300",
        "validFrom": new Date().toISOString(),
        "warranty": "6 months"
      }
    }
  }

  if (type === 'location') {
    return {
      ...baseSchema,
      "name": `GARANTOR360 ${data.cityName}`,
      "description": `${data.cityName} genelinde profesyonel ev tamiri hizmetleri`,
      "address": {
        "@type": "PostalAddress",
        "addressCountry": "TR", 
        "addressLocality": data.cityName,
        "addressRegion": data.region || "Türkiye"
      },
      "geo": {
        "@type": "GeoCoordinates",
        "latitude": data.latitude || 41.0082,
        "longitude": data.longitude || 28.9784
      },
      "areaServed": {
        "@type": "City",
        "name": data.cityName,
        "containsPlace": data.districts?.map((district: string) => ({
          "@type": "Place",
          "name": district
        })) || []
      },
      "employee": {
        "@type": "Person",
        "jobTitle": "Tekniker",
        "description": `${data.cityName} bölgesinde ${data.technicianCount || 50}+ uzman tekniker`
      }
    }
  }

  return baseSchema
}

// =============================================================================
// N8N AI Pipeline - Intelligent Service Request Processing
// =============================================================================

// AI-powered service request analysis
async function processServiceRequestWithAI(requestData: any) {
  const analysis = {
    urgencyLevel: 'normal',
    serviceCategory: 'general',
    estimatedDuration: '2-4 hours',
    recommendedTechnician: null,
    priorityScore: 50,
    aiConfidence: 0.85
  }

  // Simple AI logic for service categorization
  const description = (requestData.problemDescription || '').toLowerCase()
  
  // Urgency detection
  const urgentKeywords = ['acil', 'urgent', 'emergency', 'su akıyor', 'elektrik kesildi', 'gaz kokuyor', 'yangın']
  const normalKeywords = ['tamir', 'arıza', 'çalışmıyor', 'bozuk', 'ses gelmiyor']
  
  if (urgentKeywords.some(keyword => description.includes(keyword))) {
    analysis.urgencyLevel = 'urgent'
    analysis.priorityScore = 90
    analysis.estimatedDuration = '30-60 minutes'
  } else if (normalKeywords.some(keyword => description.includes(keyword))) {
    analysis.urgencyLevel = 'normal'
    analysis.priorityScore = 60
  }

  // Service category detection
  if (description.includes('tv') || description.includes('televizyon')) {
    analysis.serviceCategory = 'tv_tamiri'
  } else if (description.includes('buzdolabı') || description.includes('çamaşır') || description.includes('beyaz eşya')) {
    analysis.serviceCategory = 'beyaz_esya'
  } else if (description.includes('klima') || description.includes('soğutma')) {
    analysis.serviceCategory = 'klima_tamiri'
  } else if (description.includes('elektrik') || description.includes('priz') || description.includes('sigorta')) {
    analysis.serviceCategory = 'elektrik'
  }

  return analysis
}

// Intelligent technician routing based on location and service type
async function findBestTechnician(requestData: any, analysis: any, DB: D1Database) {
  try {
    // Map AI service categories to database uzmanlik_alani terms
    const categoryMapping: { [key: string]: string } = {
      'tv_tamiri': 'Televizyon',
      'beyaz_esya': 'Beyaz Eşya', 
      'klima_tamiri': 'Klima',
      'elektrik': 'Elektrik'
    }
    
    const searchCategory = categoryMapping[analysis.serviceCategory] || analysis.serviceCategory
    console.log(`🔍 Searching technicians for: ${analysis.serviceCategory} -> ${searchCategory}`)
    
    // Get available technicians in the area
    const technicians = await DB.prepare(`
      SELECT 
        b.id, b.firma_adi, b.rating, b.uzmanlik_alani, b.tamamlanan_is_sayisi,
        i.il_adi, COUNT(it.id) as aktif_isler
      FROM bayiler b
      JOIN iller i ON b.il_id = i.id
      LEFT JOIN is_talepleri it ON it.bayi_id = b.id AND it.durum IN ('atandi', 'devam_ediyor')
      WHERE b.aktif = 1 
        AND i.il_adi = ?
        AND (b.uzmanlik_alani LIKE ? OR b.uzmanlik_alani = 'genel')
      GROUP BY b.id
      ORDER BY b.rating DESC, aktif_isler ASC, b.tamamlanan_is_sayisi DESC
      LIMIT 5
    `).bind(requestData.customerCity, `%${searchCategory}%`).all()

    // AI-powered technician selection
    const scoredTechnicians = technicians.results?.map((tech: any) => {
      let score = tech.rating * 20 // Base score from rating
      score -= tech.aktif_isler * 5 // Penalize busy technicians
      score += tech.tamamlanan_is_sayisi * 0.1 // Bonus for experience
      
      // Service category match bonus
      if (tech.uzmanlik_alani.includes(analysis.serviceCategory)) {
        score += 15
      }
      
      return { ...tech, aiScore: score }
    }) || []

    return scoredTechnicians.sort((a, b) => b.aiScore - a.aiScore)[0] || null
  } catch (error) {
    console.error('Technician routing error:', error)
    return null
  }
}

// Multi-channel notification system
async function sendMultiChannelNotifications(requestData: any, analysis: any, technician: any) {
  const notifications = {
    whatsapp: false,
    sms: false,
    email: false,
    push: false
  }

  // WhatsApp notification (mock - would integrate with WhatsApp Business API)
  try {
    const whatsappMessage = `
🔧 *GARANTOR360 Yeni İş Talebi*

📋 *Talep:* ${requestData.requestCode}
👤 *Müşteri:* ${requestData.customerName}
📞 *Telefon:* ${requestData.customerPhone}
📍 *Konum:* ${requestData.customerCity}
🛠 *Hizmet:* ${analysis.serviceCategory}
⚡ *Öncelik:* ${analysis.urgencyLevel}
⏰ *Tahmini Süre:* ${analysis.estimatedDuration}

${technician ? `🔨 *Atanan Teknisyen:* ${technician.firma_adi}` : '🔍 *Teknisyen araştırılıyor...*'}

✅ Hemen müşteriyle iletişime geçin!
`
    
    // Mock WhatsApp send (would use real API)
    console.log('📱 WhatsApp notification sent:', whatsappMessage)
    notifications.whatsapp = true
  } catch (error) {
    console.error('WhatsApp notification failed:', error)
  }

  // Email notification to customer
  try {
    const emailSubject = `GARANTOR360 - Talebiniz Alındı: ${requestData.requestCode}`
    const emailBody = `
Sayın ${requestData.customerName},

Talebiniz başarıyla alınmıştır.

🔖 Talep Kodu: ${requestData.requestCode}
🕐 Tarih: ${new Date().toLocaleString('tr-TR')}
🛠 Hizmet Kategorisi: ${analysis.serviceCategory}
⚡ Öncelik Seviyesi: ${analysis.urgencyLevel}
📍 Hizmet Adresi: ${requestData.customerCity}

${technician ? 
  `✅ Teknisyenimiz atanmıştır: ${technician.firma_adi}
   📊 Değerlendirme: ${technician.rating}/5.0
   🏆 Tamamlanan İş: ${technician.tamamlanan_is_sayisi}` :
  '🔍 Size en uygun teknisyen araştırılmaktadır...'
}

Teknisyenimiz ${analysis.estimatedDuration} içinde sizinle iletişime geçecektir.

💬 Sorularınız için: 0850 123 45 67
🌐 Takip: https://garantor360.com/takip/${requestData.requestCode}

GARANTOR360 Ekibi
`
    
    // Mock email send (would use real email service)
    console.log('📧 Email notification prepared:', emailSubject)
    notifications.email = true
  } catch (error) {
    console.error('Email notification failed:', error)
  }

  return notifications
}

// Advanced N8N webhook data enrichment
function enrichRequestDataForN8N(requestData: any, analysis: any, technician: any, notifications: any) {
  return {
    // Original request data
    ...requestData,
    
    // AI Analysis results
    aiAnalysis: {
      urgencyLevel: analysis.urgencyLevel,
      serviceCategory: analysis.serviceCategory,
      priorityScore: analysis.priorityScore,
      estimatedDuration: analysis.estimatedDuration,
      confidence: analysis.aiConfidence
    },
    
    // Technician assignment
    assignedTechnician: technician ? {
      id: technician.id,
      name: technician.firma_adi,
      rating: technician.rating,
      experience: technician.tamamlanan_is_sayisi,
      specialization: technician.uzmanlik_alani,
      currentWorkload: technician.aktif_isler,
      aiScore: technician.aiScore
    } : null,
    
    // Notification status
    notificationStatus: notifications,
    
    // Workflow metadata
    workflow: {
      processedAt: new Date().toISOString(),
      processingTime: Date.now(), // Will be calculated
      workflowVersion: '2.1',
      aiEngine: 'garantor360-ai-v1',
      channel: 'website'
    },
    
    // Customer journey data
    customerJourney: {
      source: requestData.source || 'website',
      referrer: requestData.referrer || 'direct',
      sessionId: requestData.sessionId,
      previousInteractions: 0, // Would query from database
      lifetimeValue: 0
    }
  }
}

// =============================================================================
// Advanced SEO & A/B Testing System
// =============================================================================

// SEO Content Optimizer - Dynamic meta tags and content optimization
interface SEOData {
  title: string;
  description: string;
  keywords: string[];
  canonicalUrl: string;
  ogTitle?: string;
  ogDescription?: string;
  ogImage?: string;
  structuredData?: any;
}

function generateDynamicSEO(page: string, city?: string, service?: string): SEOData {
  const baseUrl = 'https://garantor360.com'
  
  const seoTemplates: Record<string, SEOData> = {
    homepage: {
      title: city 
        ? `${city} TV Tamiri ve Beyaz Eşya Servisi | GARANTOR360 - 7/24 Hızlı Hizmet`
        : 'TV Tamiri ve Beyaz Eşya Servisi | GARANTOR360 - Türkiye\'nin En Güvenilir Teknik Servisi',
      description: city
        ? `${city}'da TV tamiri, beyaz eşya servisi ve teknik destek. GARANTOR360 ile 7/24 hızlı ve güvenilir servis hizmeti alın. Ücretsiz keşif!`
        : 'TV tamiri, beyaz eşya servisi ve teknik destek. Türkiye geneli 7/24 hizmet, uzman teknisyenler ve garanti. Hemen teklif alın!',
      keywords: city 
        ? [city, 'tv tamiri', 'beyaz eşya servisi', 'teknik servis', 'garantor360']
        : ['tv tamiri', 'beyaz eşya servisi', 'teknik servis', 'türkiye', 'garantor360'],
      canonicalUrl: city ? `${baseUrl}/${city.toLowerCase()}` : baseUrl,
      ogTitle: city 
        ? `${city} TV Tamiri - GARANTOR360`
        : 'TV Tamiri ve Beyaz Eşya Servisi - GARANTOR360',
      ogDescription: city
        ? `${city}'da en hızlı TV tamiri ve beyaz eşya servisi`
        : 'Türkiye\'nin en güvenilir teknik servis platformu',
      ogImage: `${baseUrl}/static/og-image-${city?.toLowerCase() || 'default'}.jpg`
    },
    
    service: {
      title: service && city 
        ? `${city} ${service} Tamiri | Uzman Teknisyenler | GARANTOR360`
        : service 
          ? `${service} Tamiri ve Servisi | GARANTOR360 - Profesyonel Çözümler`
          : 'Teknik Servis Hizmetleri | GARANTOR360',
      description: service && city
        ? `${city}'da profesyonel ${service} tamiri. Deneyimli teknisyenler, orijinal yedek parça, 2 yıl garanti. Hemen randevu alın!`
        : service
          ? `Profesyonel ${service} tamiri ve servisi. Uzman teknisyenler, kaliteli hizmet, uygun fiyat. Türkiye geneli hizmet.`
          : 'Profesyonel teknik servis hizmetleri. TV, beyaz eşya ve elektronik cihaz tamiri.',
      keywords: [service, city, 'tamiri', 'servis', 'teknisyen', 'garantor360'].filter(Boolean),
      canonicalUrl: `${baseUrl}/servis/${service?.toLowerCase()}${city ? `/${city.toLowerCase()}` : ''}`,
      structuredData: service ? {
        "@context": "https://schema.org",
        "@type": "Service",
        "name": `${service} Tamiri`,
        "description": `Profesyonel ${service} tamiri ve bakım hizmetleri`,
        "provider": {
          "@type": "Organization",
          "name": "GARANTOR360"
        },
        "areaServed": city || "Türkiye"
      } : undefined
    },
    
    location: {
      title: city 
        ? `${city} Teknik Servis | TV ve Beyaz Eşya Tamiri | GARANTOR360`
        : 'Şehir Bazlı Teknik Servis Hizmetleri | GARANTOR360',
      description: city
        ? `${city}'da güvenilir teknik servis hizmetleri. TV tamiri, beyaz eşya servisi, klima bakımı. 7/24 destek, hızlı çözüm!`
        : 'Türkiye\'nin her şehrinde teknik servis hizmetleri. Yerel teknisyenler, hızlı müdahale.',
      keywords: [city, 'teknik servis', 'tv tamiri', 'beyaz eşya', 'klima', 'garantor360'].filter(Boolean),
      canonicalUrl: `${baseUrl}/sehir/${city?.toLowerCase()}`,
      structuredData: city ? {
        "@context": "https://schema.org",
        "@type": "LocalBusiness",
        "name": `GARANTOR360 ${city}`,
        "description": `${city} teknik servis hizmetleri`,
        "address": {
          "@type": "PostalAddress",
          "addressLocality": city,
          "addressCountry": "TR"
        }
      } : undefined
    }
  }
  
  return seoTemplates[page] || seoTemplates.homepage
}

// A/B Testing System
interface ABTest {
  id: string;
  name: string;
  variants: {
    id: string;
    name: string;
    traffic: number; // percentage
    config: any;
  }[];
  status: 'active' | 'paused' | 'completed';
  startDate: string;
  endDate?: string;
  metrics: {
    conversions: number;
    views: number;
    conversionRate: number;
  }[];
}

const activeABTests: ABTest[] = [
  {
    id: 'homepage-hero-v2',
    name: 'Anasayfa Hero Section Optimization',
    variants: [
      {
        id: 'control',
        name: 'Mevcut Tasarım',
        traffic: 50,
        config: {
          headline: 'Türkiye\'nin En Güvenilir Teknik Servisi',
          buttonText: 'Hemen Teklif Al',
          buttonColor: 'bg-blue-600'
        }
      },
      {
        id: 'variant-a',
        name: 'Aciliyet Vurgulu',
        traffic: 50,
        config: {
          headline: '7/24 Acil Teknik Servis - 15 Dakikada Çözüm!',
          buttonText: 'Acil Arıza Bildir',
          buttonColor: 'bg-red-600'
        }
      }
    ],
    status: 'active',
    startDate: '2024-01-15',
    metrics: [
      { conversions: 45, views: 1200, conversionRate: 3.75 },
      { conversions: 67, views: 1180, conversionRate: 5.68 }
    ]
  },
  
  {
    id: 'service-form-v1', 
    name: 'Servis Talep Formu A/B Test',
    variants: [
      {
        id: 'control',
        name: 'Standart Form',
        traffic: 40,
        config: {
          fields: ['name', 'phone', 'service', 'description'],
          submitText: 'Talep Gönder'
        }
      },
      {
        id: 'variant-b',
        name: 'Kısaltılmış Form',
        traffic: 60,
        config: {
          fields: ['phone', 'problem'],
          submitText: 'Hemen Ara'
        }
      }
    ],
    status: 'active',
    startDate: '2024-01-20',
    metrics: [
      { conversions: 28, views: 890, conversionRate: 3.15 },
      { conversions: 47, views: 1340, conversionRate: 3.51 }
    ]
  }
]

function getABTestVariant(testId: string, userId?: string): any {
  const test = activeABTests.find(t => t.id === testId && t.status === 'active')
  if (!test) return null
  
  // Simple hash-based variant selection for consistent user experience
  const hash = userId ? simpleHash(userId) : Math.random()
  const percentage = (hash % 100) + 1
  
  let currentPercentage = 0
  for (const variant of test.variants) {
    currentPercentage += variant.traffic
    if (percentage <= currentPercentage) {
      return variant
    }
  }
  
  return test.variants[0] // fallback to control
}

function simpleHash(str: string): number {
  let hash = 0
  for (let i = 0; i < str.length; i++) {
    const char = str.charCodeAt(i)
    hash = ((hash << 5) - hash) + char
    hash = hash & hash // Convert to 32-bit integer
  }
  return Math.abs(hash)
}

// Performance Tracking & Core Web Vitals
interface PerformanceMetric {
  url: string;
  timestamp: string;
  metrics: {
    fcp?: number; // First Contentful Paint
    lcp?: number; // Largest Contentful Paint
    fid?: number; // First Input Delay
    cls?: number; // Cumulative Layout Shift
    ttfb?: number; // Time to First Byte
  };
  userAgent: string;
  connection?: string;
  deviceType: 'mobile' | 'desktop' | 'tablet';
}

async function trackPerformanceMetrics(data: PerformanceMetric, DB: D1Database) {
  try {
    await DB.prepare(`
      INSERT INTO performance_metrics (
        url, timestamp, fcp, lcp, fid, cls, ttfb, 
        user_agent, connection, device_type
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      data.url, data.timestamp,
      data.metrics.fcp || null, data.metrics.lcp || null,
      data.metrics.fid || null, data.metrics.cls || null,
      data.metrics.ttfb || null,
      data.userAgent, data.connection || null, data.deviceType
    ).run()
    
    console.log('📊 Performance metrics tracked:', data.url)
  } catch (error) {
    console.error('Performance tracking error:', error)
  }
}

// Conversion Tracking & Funnel Analysis
interface ConversionEvent {
  sessionId: string;
  userId?: string;
  event: string;
  page: string;
  timestamp: string;
  properties?: any;
  value?: number;
}

async function trackConversion(event: ConversionEvent, DB: D1Database) {
  try {
    await DB.prepare(`
      INSERT INTO conversion_events (
        session_id, user_id, event_name, page_url, 
        timestamp, properties, event_value
      ) VALUES (?, ?, ?, ?, ?, ?, ?)
    `).bind(
      event.sessionId, event.userId || null, event.event,
      event.page, event.timestamp,
      JSON.stringify(event.properties || {}), event.value || null
    ).run()
    
    console.log('🎯 Conversion tracked:', event.event, event.page)
  } catch (error) {
    console.error('Conversion tracking error:', error)
  }
}

// SEO Performance Analysis
async function analyzeSEOPerformance(DB: D1Database) {
  try {
    const metrics = await DB.prepare(`
      SELECT 
        url,
        AVG(lcp) as avg_lcp,
        AVG(fcp) as avg_fcp,
        AVG(cls) as avg_cls,
        COUNT(*) as page_views,
        device_type
      FROM performance_metrics 
      WHERE timestamp > datetime('now', '-7 days')
      GROUP BY url, device_type
      ORDER BY page_views DESC
      LIMIT 20
    `).all()
    
    const conversions = await DB.prepare(`
      SELECT 
        page_url,
        event_name,
        COUNT(*) as event_count,
        AVG(event_value) as avg_value
      FROM conversion_events
      WHERE timestamp > datetime('now', '-7 days')
      GROUP BY page_url, event_name
      ORDER BY event_count DESC
      LIMIT 10
    `).all()
    
    return {
      performanceMetrics: metrics.results || [],
      conversionMetrics: conversions.results || [],
      generatedAt: new Date().toISOString()
    }
  } catch (error) {
    console.error('SEO analysis error:', error)
    return { performanceMetrics: [], conversionMetrics: [], error: error.message }
  }
}

// Global middleware
app.use('*', errorHandler())
app.use('*', securityHeaders())
app.use('*', requestLogger())
app.use('*', performanceMonitoring())

// Enable CORS for API routes
app.use('/api/*', cors())

// Rate limiting for API routes
app.use('/api/*', rateLimit(50, 60000)) // 50 requests per minute

// Serve static files from public directory
app.use('/static/*', serveStatic({ root: './public' }))

// =============================================================================
// API Routes - TV Servis Yonetim Sistemi
// =============================================================================

// SEO & A/B Testing API Endpoints
app.get('/api/seo/meta/:page', async (c) => {
  try {
    const page = c.req.param('page')
    const city = c.req.query('city')
    const service = c.req.query('service')
    
    const seoData = generateDynamicSEO(page, city, service)
    
    return c.json({
      success: true,
      seo: seoData,
      timestamp: new Date().toISOString()
    })
  } catch (error) {
    return c.json({ success: false, error: 'SEO meta generation failed' }, 500)
  }
})

app.get('/api/ab-test/:testId', async (c) => {
  try {
    const testId = c.req.param('testId')
    const userId = c.req.query('userId') || c.req.header('X-User-ID')
    
    const variant = getABTestVariant(testId, userId)
    
    if (!variant) {
      return c.json({ success: false, error: 'Test not found or inactive' }, 404)
    }
    
    return c.json({
      success: true,
      test: { id: testId },
      variant: variant,
      timestamp: new Date().toISOString()
    })
  } catch (error) {
    return c.json({ success: false, error: 'A/B test variant retrieval failed' }, 500)
  }
})

app.post('/api/seo/track-performance', async (c) => {
  const { DB } = c.env
  
  try {
    const performanceData: PerformanceMetric = await c.req.json()
    
    // Validate required fields
    if (!performanceData.url || !performanceData.metrics) {
      return c.json({ 
        success: false, 
        error: 'URL and metrics are required' 
      }, 400)
    }
    
    // Add server timestamp
    performanceData.timestamp = new Date().toISOString()
    
    // Detect device type from user agent
    const userAgent = c.req.header('User-Agent') || ''
    if (userAgent.includes('Mobile')) {
      performanceData.deviceType = 'mobile'
    } else if (userAgent.includes('Tablet')) {
      performanceData.deviceType = 'tablet'
    } else {
      performanceData.deviceType = 'desktop'
    }
    
    performanceData.userAgent = userAgent
    
    await trackPerformanceMetrics(performanceData, DB)
    
    return c.json({
      success: true,
      message: 'Performance metrics tracked',
      deviceType: performanceData.deviceType
    })
  } catch (error) {
    console.error('Performance tracking error:', error)
    return c.json({ success: false, error: 'Performance tracking failed' }, 500)
  }
})

app.post('/api/conversion/track', async (c) => {
  const { DB } = c.env
  
  try {
    const conversionData: ConversionEvent = await c.req.json()
    
    // Validate required fields
    if (!conversionData.sessionId || !conversionData.event || !conversionData.page) {
      return c.json({ 
        success: false, 
        error: 'SessionId, event, and page are required' 
      }, 400)
    }
    
    // Add server timestamp
    conversionData.timestamp = new Date().toISOString()
    
    await trackConversion(conversionData, DB)
    
    return c.json({
      success: true,
      message: 'Conversion tracked',
      event: conversionData.event
    })
  } catch (error) {
    console.error('Conversion tracking error:', error)
    return c.json({ success: false, error: 'Conversion tracking failed' }, 500)
  }
})

app.get('/api/seo/analytics', async (c) => {
  const { DB } = c.env
  
  try {
    const seoAnalytics = await analyzeSEOPerformance(DB)
    
    // Calculate additional insights
    const insights = {
      totalPageViews: seoAnalytics.performanceMetrics.reduce((sum: number, metric: any) => sum + (metric.page_views || 0), 0),
      avgLCP: seoAnalytics.performanceMetrics.reduce((sum: number, metric: any) => sum + (metric.avg_lcp || 0), 0) / seoAnalytics.performanceMetrics.length || 0,
      topPages: seoAnalytics.performanceMetrics.slice(0, 5),
      topConversions: seoAnalytics.conversionMetrics.slice(0, 3),
      recommendations: generateSEORecommendations(seoAnalytics.performanceMetrics)
    }
    
    return c.json({
      success: true,
      analytics: seoAnalytics,
      insights: insights,
      timestamp: new Date().toISOString()
    })
  } catch (error) {
    console.error('SEO analytics error:', error)
    return c.json({ success: false, error: 'SEO analytics retrieval failed' }, 500)
  }
})

// Helper function for SEO recommendations
function generateSEORecommendations(metrics: any[]): string[] {
  const recommendations: string[] = []
  
  metrics.forEach((metric: any) => {
    if (metric.avg_lcp > 2500) {
      recommendations.push(`${metric.url}: LCP yavaş (${metric.avg_lcp}ms) - görselleri optimize edin`)
    }
    if (metric.avg_cls > 0.1) {
      recommendations.push(`${metric.url}: Layout shift yüksek (${metric.avg_cls}) - CSS layout'unu düzeltin`)
    }
    if (metric.avg_fcp > 1800) {
      recommendations.push(`${metric.url}: FCP yavaş (${metric.avg_fcp}ms) - CSS ve JS optimize edin`)
    }
  })
  
  return recommendations.slice(0, 5) // Top 5 recommendations
}

// AI Chat API Endpoint (placeholder for future AI integration)
app.post('/api/ai-chat', async (c) => {
  try {
    const { message, sessionId } = await c.req.json()
    
    if (!message) {
      return c.json({ error: 'Mesaj gerekli' }, 400)
    }
    
    // TODO: Buraya gercek yapay zeka servisinizi entegre edeceksiniz
    // Ornek: OpenAI, Google Gemini, Azure AI, vb.
    
    // Simdilik basit cevap sistemini kullaniyoruz
    const responses = {
      'televizyon': 'Televizyon tamiri genellikle 1-2 saat surer. LED panel sorunu ise parca temininden sonra ayni gun tamamlanabilir. Ucretsiz kesif icin hemen talep formu doldurabilirsiniz.',
      'fiyat': 'Fiyatlarimiz is turune gore degisir. Televizyon tamiri 600-2000TL, camasir makinesi 800-1800TL araliginda. Kesin fiyat ucretsiz kesiften sonra belirlenir.',
      'odeme': 'Odeme is tamamlandiktan ve onayinizdan sonra yapilir. Nakit, kart veya havale seceneklerimiz var. Is oncesi sadece parca bedeli alinabilir.',
      'garanti': 'Tum islerimizde 6 ay iscilik garantisi veriyoruz. Ayni sorun tekrarlarsa ucretsiz cozum sagliyoruz.',
      'sure': 'Ortalama yanit suremiz 15 dakikadir. Acil durumlar icin telefon ile direkt ulasabilirsiniz: 0 500 123 45 67'
    }
    
    const lowerMessage = message.toLowerCase()
    let response = 'Sorununuz icin size yardimci olmak istiyorum.\n\n📞 Hemen arayabilirsiniz: 0 500 123 45 67\n💬 WhatsApp: wa.me/905001234567\n📝 Veya hizmet talep formu doldurabilirsiniz.\n\nBaska sorulariniz varsa cekinmeden sorun!'
    
    for (const [key, resp] of Object.entries(responses)) {
      if (lowerMessage.includes(key)) {
        response = resp
        break
      }
    }
    
    return c.json({
      success: true,
      response,
      sessionId: sessionId || 'session_' + Date.now()
    })
    
  } catch (error) {
    console.error('AI Chat error:', error)
    return c.json({ 
      error: 'Yapay zeka servisi gecici olarak kullanilamiyor' 
    }, 500)
  }
})

// Smart Recommendation API Endpoint
app.post('/api/smart-recommendation', async (c) => {
  try {
    const { problemDescription, urgencyLevel, serviceLocation } = await c.req.json()
    
    if (!problemDescription) {
      return c.json({ error: 'Problem aciklamasi gerekli' }, 400)
    }
    
    // Service categories matching (this would be powered by real AI in production)
    const serviceCategories = {
      'ev_elektrigi': {
        keywords: ['elektrik', 'priz', 'sigorta', 'kablo', 'ampul', 'lamba', 'salter', 'kacak', 'kesinti', 'voltaj'],
        name: 'Ev Elektrigi',
        priceRange: 'TL150-800',
        urgency: { emergency: '30dk', urgent: '1-2 saat', normal: '2-4 saat' }
      },
      'beyaz_esya': {
        keywords: ['buzdolabi', 'camasir makinesi', 'bulasik makinesi', 'firin', 'ocak', 'mikrodalga', 'klima', 'sogutmuyor', 'calismiyor'],
        name: 'Beyaz Esya Tamiri',
        priceRange: 'TL200-1200',
        urgency: { emergency: '1 saat', urgent: '2-4 saat', normal: '4-8 saat' }
      },
      'su_tesisati': {
        keywords: ['musluk', 'tikaniklik', 'su kacagi', 'boru', 'sifon', 'klozet', 'rezervuar', 'damla', 'akiyor', 'tikali'],
        name: 'Su Tesisati',
        priceRange: 'TL100-600',
        urgency: { emergency: '30dk', urgent: '1 saat', normal: '2-3 saat' }
      }
    }
    
    const text = problemDescription.toLowerCase()
    let bestMatch = null
    let bestScore = 0
    
    // Simple keyword matching (in production, use real AI/ML)
    for (const [categoryId, category] of Object.entries(serviceCategories)) {
      let score = 0
      for (const keyword of category.keywords) {
        if (text.includes(keyword.toLowerCase())) {
          score += keyword.length
        }
      }
      
      if (score > bestScore) {
        bestScore = score
        bestMatch = { id: categoryId, ...category, confidence: Math.min(score * 10, 95) }
      }
    }
    
    return c.json({
      success: true,
      recommendation: bestMatch,
      whatsappMessage: bestMatch ? 
        `Merhaba! ${bestMatch.name} konusunda yardim istiyorum. Problem: ${problemDescription}` :
        `Merhaba! Su konuda yardim istiyorum: ${problemDescription}`,
      estimatedCost: bestMatch ? bestMatch.priceRange : 'TL100-1000',
      responseTime: bestMatch ? bestMatch.urgency[urgencyLevel] : '1-3 saat'
    })
    
  } catch (error) {
    console.error('Smart recommendation error:', error)
    return c.json({ 
      error: 'Oneri sistemi gecici olarak kullanilamiyor' 
    }, 500)
  }
})

// Customer Service Request - n8n AI-Enhanced Webhook Integration
app.post('/api/service-request', async (c) => {
  const { DB } = c.env
  
  try {
    // Form verilerini al
    const requestData = await c.req.json()
    
    // Gerekli alanlari kontrol et
    const { customerName, customerPhone, customerCity, serviceCategory, problemDescription } = requestData
    
    if (!customerName || !customerPhone || !serviceCategory || !problemDescription) {
      return c.json({ 
        success: false, 
        error: 'Gerekli alanlar eksik' 
      }, 400)
    }
    
    // Timestamp ve benzersiz talep kodu olustur
    const timestamp = new Date().toISOString()
    const requestCode = `GRT-${Date.now()}`
    
    // 🤖 AI-Enhanced Processing
    console.log('🔍 Processing service request with AI analysis...')
    const enrichedRequestData = { ...requestData, requestCode, timestamp }
    
    // AI analysis for intelligent categorization and urgency detection
    const aiAnalysis = await processServiceRequestWithAI(enrichedRequestData)
    console.log('🧠 AI Analysis completed:', aiAnalysis)
    
    // Intelligent technician routing
    const recommendedTechnician = await findBestTechnician(enrichedRequestData, aiAnalysis, DB)
    console.log('🔨 Technician routing completed:', recommendedTechnician?.firma_adi || 'No technician available')
    
    // Multi-channel notifications
    const notificationResults = await sendMultiChannelNotifications(enrichedRequestData, aiAnalysis, recommendedTechnician)
    console.log('📱 Notifications sent:', notificationResults)
    
    // n8n webhook icin AI-zenginleştirilmiş data hazirla
    const webhookData = {
      // Basic request info
      requestCode,
      timestamp,
      
      // Customer information
      customer: {
        name: customerName,
        phone: customerPhone,
        city: customerCity || '',
        district: requestData.customerDistrict || ''
      },
      
      // Service details
      service: {
        category: serviceCategory,
        description: problemDescription,
        urgency: requestData.urgency || 'normal'
      },
      
      // 🚀 AI-Enhanced Fields (COMPLETE)
      aiEnhancement: {
        analysis: aiAnalysis,
        urgencyLevel: aiAnalysis?.urgencyLevel || 'normal',
        serviceCategory: aiAnalysis?.serviceCategory || serviceCategory,
        priorityScore: aiAnalysis?.priorityScore || 50,
        estimatedDuration: aiAnalysis?.estimatedDuration || '2-4 saat',
        confidence: aiAnalysis?.aiConfidence || 0.8,
        processedAt: timestamp,
        aiVersion: 'v2.5.0'
      },
      
      // Technician assignment (COMPLETE)
      assignedTechnician: recommendedTechnician ? {
        id: recommendedTechnician.id,
        name: recommendedTechnician.firma_adi,
        rating: recommendedTechnician.rating,
        experience: recommendedTechnician.tamamlanan_is_sayisi,
        specialization: recommendedTechnician.uzmanlik_alani,
        currentWorkload: recommendedTechnician.aktif_isler,
        aiScore: recommendedTechnician.aiScore,
        location: recommendedTechnician.il_adi
      } : null,
      
      // Notification status (COMPLETE)
      notifications: notificationResults,
      
      // Workflow metadata (NEW)
      workflow: {
        processedAt: timestamp,
        processingTime: Date.now(),
        workflowVersion: '2.5.0',
        aiEngine: 'garantor360-ai-v2.5',
        channel: 'website',
        platform: 'cloudflare-workers',
        environment: 'production'
      },
      
      // Customer journey data (NEW)
      customerJourney: {
        source: requestData.source || 'website',
        referrer: requestData.referrer || 'direct',
        sessionId: requestData.sessionId || `session-${Date.now()}`,
        previousInteractions: 0,
        lifetimeValue: 0,
        entryPoint: 'service_form',
        userAgent: requestData.userAgent || 'unknown'
      },
      
      // Contact preferences
      contactPreference: requestData.contactPreference || ['phone'],
      
      // Source identification
      source: 'garantor360_website_ai',
      platform: 'garantor360-v2.5.0'
    }
    
    // n8n webhook URL'si (Cloudflare environment variable)
    // Development: .dev.vars dosyasindan, Production: wrangler secrets'dan
    const n8nWebhookUrl = c.env.N8N_WEBHOOK_URL || null
    let webhookSuccess = false
    let webhookResponseText = null
    
    if (n8nWebhookUrl) {
      try {
        // n8n'e webhook gonder
        const webhookResponse = await fetch(n8nWebhookUrl, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(webhookData)
        })
        
        if (!webhookResponse.ok) {
          throw new Error(`Webhook failed: ${webhookResponse.status}`)
        }
        
        const webhookResult = await webhookResponse.text()
        console.log('n8n webhook sent successfully:', requestCode, webhookResult)
        webhookSuccess = true
        webhookResponseText = webhookResult
      } catch (webhookError) {
        console.error('n8n webhook error:', webhookError)
        webhookSuccess = false
        webhookResponseText = webhookError.message
        // Webhook hatasi olsa bile local kaydi yapip kullaniciya basarili donus verebiliriz
      }
    } else {
      console.log('n8n webhook URL not configured, skipping webhook call')
      webhookSuccess = false
      webhookResponseText = 'N8N webhook URL not configured'
    }
    
    // Local database'e AI-zenginleştirilmiş veri ile kaydet
    try {
      await DB.prepare(`
        INSERT INTO service_requests (
          request_code, customer_name, customer_phone, customer_city, 
          customer_district, service_category, problem_description, 
          urgency, contact_preference, created_at, status, n8n_sent, n8n_response,
          ai_analysis, assigned_technician_id, ai_confidence, priority_score
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
      `).bind(
        requestCode, customerName, customerPhone, customerCity,
        requestData.customerDistrict || '', aiAnalysis.serviceCategory, problemDescription,
        aiAnalysis.urgencyLevel, JSON.stringify(requestData.contactPreference || ['phone']),
        timestamp, 'ai_processed', webhookSuccess ? 1 : 0, webhookResponseText || null,
        JSON.stringify(aiAnalysis), recommendedTechnician?.id || null, 
        aiAnalysis.aiConfidence, aiAnalysis.priorityScore
      ).run()
      
      console.log('💾 Service request saved to database with AI analysis')
    } catch (dbError) {
      console.error('Database save error:', dbError)
      // DB hatası olsa bile AI analizi ve webhook çalıştığı için başarılı sayabiliriz
      // Yeni kolonlar mevcut değilse göz ardı et, eski format ile kaydet
      try {
        await DB.prepare(`
          INSERT INTO service_requests (
            request_code, customer_name, customer_phone, customer_city, 
            customer_district, service_category, problem_description, 
            urgency, contact_preference, created_at, status, n8n_sent, n8n_response
          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        `).bind(
          requestCode, customerName, customerPhone, customerCity,
          requestData.customerDistrict || '', aiAnalysis.serviceCategory, problemDescription,
          aiAnalysis.urgencyLevel, JSON.stringify(requestData.contactPreference || ['phone']),
          timestamp, 'ai_processed', webhookSuccess ? 1 : 0, webhookResponseText || null
        ).run()
        
        console.log('💾 Service request saved to database (fallback format)')
      } catch (fallbackError) {
        console.error('Fallback database save also failed:', fallbackError)
      }
    }
    
    return c.json({
      success: true,
      message: 'Talebiniz başarıyla alındı ve AI sistemi tarafından analiz edildi',
      requestCode,
      data: {
        estimatedResponse: aiAnalysis.urgencyLevel === 'urgent' ? '5-10 dakika içinde' : '15 dakika içinde',
        urgencyLevel: aiAnalysis.urgencyLevel,
        serviceCategory: aiAnalysis.serviceCategory,
        estimatedDuration: aiAnalysis.estimatedDuration,
        assignedTechnician: recommendedTechnician ? {
          name: recommendedTechnician.firma_adi,
          rating: recommendedTechnician.rating,
          specialty: recommendedTechnician.uzmanlik_alani
        } : null,
        nextSteps: aiAnalysis.urgencyLevel === 'urgent' ? [
          '🚨 ACİL talep olarak işleme alındı',
          'En yakın teknisyenimiz derhal haberdar edildi',
          '⏰ 5 dakika içinde size ulaşılacak',
          recommendedTechnician ? `✅ ${recommendedTechnician.firma_adi} atandı` : '🔍 En yakın teknisyen aranıyor'
        ] : [
          '✅ Talebiniz AI sistemi ile analiz edildi',
          `🔧 ${aiAnalysis.serviceCategory} kategorisinde işleme alındı`,
          recommendedTechnician ? `🔨 ${recommendedTechnician.firma_adi} teknisyenimiz atandı` : '🔍 Size en uygun teknisyen belirleniyor',
          '📞 15 dakika içinde telefon veya WhatsApp ile ulaşılacak',
          '🏠 Ücretsiz keşif randevusu ayarlanacak'
        ]
      }
    })
    
  } catch (error) {
    console.error('Service request error:', error)
    return c.json({ 
      success: false, 
      error: 'Talep islenirken hata olustu' 
    }, 500)
  }
})

// Dashboard ana istatistikler
app.get('/api/dashboard/stats', async (c) => {
  const { DB } = c.env
  
  try {
    // Toplam is sayilari
    const totalJobs = await DB.prepare('SELECT COUNT(*) as count FROM is_talepleri').first()
    const activeJobs = await DB.prepare('SELECT COUNT(*) as count FROM is_talepleri WHERE durum IN ("yeni", "atandi", "devam_ediyor")').first()
    const completedJobs = await DB.prepare('SELECT COUNT(*) as count FROM is_talepleri WHERE durum = "tamamlandi"').first()
    const totalDealers = await DB.prepare('SELECT COUNT(*) as count FROM bayiler WHERE aktif = 1').first()
    
    // Son 7 gunun isleri
    const recentJobs = await DB.prepare(`
      SELECT DATE(created_at) as tarih, COUNT(*) as sayi
      FROM is_talepleri 
      WHERE created_at >= datetime('now', '-7 days')
      GROUP BY DATE(created_at)
      ORDER BY tarih DESC
    `).all()
    
    // Il bazinda is dagilimi
    const jobsByCity = await DB.prepare(`
      SELECT i.il_adi, COUNT(it.id) as sayi
      FROM is_talepleri it
      JOIN musteriler m ON it.musteri_id = m.id
      JOIN iller i ON m.il_id = i.id
      GROUP BY i.il_adi
      ORDER BY sayi DESC
      LIMIT 10
    `).all()
    
    return c.json({
      totalJobs: totalJobs?.count || 0,
      activeJobs: activeJobs?.count || 0,
      completedJobs: completedJobs?.count || 0,
      totalDealers: totalDealers?.count || 0,
      recentJobs: recentJobs.results || [],
      jobsByCity: jobsByCity.results || []
    })
  } catch (error) {
    console.error('Dashboard stats error:', error)
    return c.json({ error: 'Veriler alinamadi' }, 500)
  }
})

// Aktif isleri listele
app.get('/api/jobs/active', async (c) => {
  const { DB } = c.env
  
  try {
    const jobs = await DB.prepare(`
      SELECT 
        it.id, it.talep_kodu, it.aciklama, it.durum, it.oncelik,
        it.tv_marka, it.tv_model, it.created_at,
        m.ad_soyad as musteri_adi, m.telefon, m.adres,
        i.il_adi, ilc.ilce_adi,
        st.tur_adi as servis_turu,
        b.firma_adi as bayi_adi
      FROM is_talepleri it
      JOIN musteriler m ON it.musteri_id = m.id
      JOIN iller i ON m.il_id = i.id
      LEFT JOIN ilceler ilc ON m.ilce_id = ilc.id
      JOIN servis_turleri st ON it.servis_turu_id = st.id
      LEFT JOIN bayiler b ON it.bayi_id = b.id
      WHERE it.durum IN ('yeni', 'atandi', 'devam_ediyor')
      ORDER BY 
        CASE it.oncelik 
          WHEN 'yuksek' THEN 1
          WHEN 'normal' THEN 2 
          WHEN 'dusuk' THEN 3
        END,
        it.created_at DESC
    `).all()
    
    return c.json(jobs.results || [])
  } catch (error) {
    console.error('Active jobs error:', error)
    return c.json({ error: 'Isler listelenemedi' }, 500)
  }
})

// Bayileri listele (il bazinda)
app.get('/api/dealers', async (c) => {
  const ilId = c.req.query('il_id')
  const { DB } = c.env
  
  try {
    let query = `
      SELECT 
        b.id, b.bayi_kodu, b.firma_adi, b.yetkili_adi, 
        b.telefon, b.email, b.adres, b.uzmanlik_alani,
        b.rating, b.tamamlanan_is_sayisi,
        i.il_adi, ilc.ilce_adi
      FROM bayiler b
      JOIN iller i ON b.il_id = i.id
      LEFT JOIN ilceler ilc ON b.ilce_id = ilc.id
      WHERE b.aktif = 1
    `
    
    const params = []
    if (ilId) {
      query += ' AND b.il_id = ?'
      params.push(ilId)
    }
    
    query += ' ORDER BY b.rating DESC, b.tamamlanan_is_sayisi DESC'
    
    const dealers = await DB.prepare(query).bind(...params).all()
    return c.json(dealers.results || [])
  } catch (error) {
    console.error('Dealers error:', error)
    return c.json({ error: 'Bayiler listelenemedi' }, 500)
  }
})

// Illeri listele
app.get('/api/cities', async (c) => {
  const { DB } = c.env
  
  try {
    const cities = await DB.prepare(`
      SELECT id, il_kodu, il_adi, bolge
      FROM iller 
      WHERE aktif = 1
      ORDER BY il_adi
    `).all()
    
    return c.json(cities.results || [])
  } catch (error) {
    console.error('Cities error:', error)
    return c.json({ error: 'Iller listelenemedi' }, 500)
  }
})

// Is atamasi yap
app.post('/api/jobs/:id/assign', async (c) => {
  const { DB } = c.env
  const jobId = c.req.param('id')
  const { bayiId, notlar } = await c.req.json()
  
  try {
    // Isi bayiye ata
    await DB.prepare(`
      UPDATE is_talepleri 
      SET bayi_id = ?, durum = 'atandi', atama_tarihi = datetime('now'), notlar = ?, updated_at = datetime('now')
      WHERE id = ?
    `).bind(bayiId, notlar || '', jobId).run()
    
    // Gecmise kaydet
    await DB.prepare(`
      INSERT INTO is_gecmisi (is_talep_id, eski_durum, yeni_durum, aciklama, degistiren)
      VALUES (?, 'yeni', 'atandi', ?, 'sistem')
    `).bind(jobId, `Bayi ID ${bayiId} atandı`).run()
    
    return c.json({ success: true, message: 'Is basariyla atandi' })
  } catch (error) {
    console.error('Job assignment error:', error)
    return c.json({ error: 'Is atanamadi' }, 500)
  }
})

// N8N Webhook endpoint - WhatsApp verileri
app.post('/api/webhook/whatsapp', async (c) => {
  const { DB } = c.env
  const data = await c.req.json()
  
  try {
    // Webhook verisini logla
    await DB.prepare(`
      INSERT INTO n8n_webhooks (webhook_type, payload, processed)
      VALUES ('whatsapp', ?, 0)
    `).bind(JSON.stringify(data)).run()
    
    // Burada WhatsApp verisini parse edip is talebi olusturacaksiniz
    // Simdilik sadece log aliyoruz
    
    return c.json({ 
      success: true, 
      message: 'WhatsApp verisi alindi ve islenmek uzere kaydedildi' 
    })
  } catch (error) {
    console.error('WhatsApp webhook error:', error)
    return c.json({ error: 'Webhook islenemedi' }, 500)
  }
})

// N8N Webhook endpoint - Form verileri  
app.post('/api/webhook/form', async (c) => {
  const { DB } = c.env
  const data = await c.req.json()
  
  try {
    // Webhook verisini logla
    await DB.prepare(`
      INSERT INTO n8n_webhooks (webhook_type, payload, processed)
      VALUES ('form', ?, 0)
    `).bind(JSON.stringify(data)).run()
    
    // Form verisini parse edip is talebi olustur
    // Bu ornek implementasyon - gercek form yapiniza gore uyarlayin
    
    return c.json({ 
      success: true, 
      message: 'Form verisi alindi ve islenmek uzere kaydedildi' 
    })
  } catch (error) {
    console.error('Form webhook error:', error)
    return c.json({ error: 'Webhook islenemedi' }, 500)
  }
})

// Test endpoint - Reset job for testing (gelistirme icin)
app.post('/api/test/reset-job/:id', async (c) => {
  const { DB } = c.env
  const jobId = c.req.param('id')
  
  try {
    // Isi reset et
    await DB.prepare(`
      UPDATE is_talepleri 
      SET satin_alan_bayi_id = NULL, 
          satin_alma_tarihi = NULL, 
          satin_alma_fiyati = NULL,
          durum = 'yeni',
          goruntuleme_durumu = 'kisitli'
      WHERE id = ?
    `).bind(jobId).run()
    
    return c.json({ success: true, message: `Is ${jobId} reset edildi` })
  } catch (error) {
    console.error('Reset job error:', error)
    return c.json({ error: 'Reset basarisiz' }, 500)
  }
})

// =============================================================================
// Bayi API Routes - Authentication ve Is Yonetimi
// =============================================================================

// Bayi login endpoint
app.post('/api/bayi/login', 
  validateInput(ValidationRules.bayiLogin),
  async (c) => {
    const { DB } = c.env
    const { email, password } = c.get('validatedBody')
    const dbHelper = new DatabaseHelper(DB)
    
    try {
      SystemLogger.info('Auth', 'Bayi login attempt', { email })
    
      // Bayiyi veritabaninda ara  
      const bayi = await PerformanceMonitor.monitorDatabaseQuery('getBayiByEmail', async () => {
        return await DB.prepare(`
          SELECT id, login_email, password_hash, firma_adi, yetkili_adi, 
                 telefon, il_id, aktif_login, kredi_bakiye
          FROM bayiler 
          WHERE login_email = ? AND aktif = 1
        `).bind(email.toLowerCase()).first()
      })
      
      if (!bayi) {
        SystemLogger.warn('Auth', 'Bayi not found', { email })
        throw new AuthenticationError('Gecersiz email veya sifre')
      }
      
      if (!bayi.aktif_login) {
        SystemLogger.warn('Auth', 'Bayi account deactivated', { email })
        throw new AuthenticationError('Hesabiniz deaktif edilmis')
      }
    
    // Gecici: Hard-coded sifre kontrolu (debug icin)
    if (password === '123456') {
      // Basarili login
      const token = 'test-bayi-token-123'
      return c.json({
        success: true,
        message: 'Giris basarili', 
        token,
        bayi: {
          id: bayi.id,
          firma_adi: bayi.firma_adi,
          email: bayi.login_email,
          kredi_bakiye: bayi.kredi_bakiye
        }
      })
    } else {
      SystemLogger.warn('Auth', 'Invalid password', { email })
      throw new AuthenticationError('Gecersiz email veya sifre')
    }
    
    // JWT token olustur
    const token = generateBayiToken({
      id: bayi.id,
      login_email: bayi.login_email,
      firma_adi: bayi.firma_adi,
      il_id: bayi.il_id
    })
    
    // Session olustur
    const sessionToken = generateSessionToken()
    const expiresAt = new Date()
    expiresAt.setHours(expiresAt.getHours() + 24)
    
    await DB.prepare(`
      INSERT INTO bayi_sessions (bayi_id, session_token, expires_at, ip_adres)
      VALUES (?, ?, ?, ?)
    `).bind(bayi.id, sessionToken, expiresAt.toISOString(), c.req.header('cf-connecting-ip') || 'unknown').run()
    
    // Son giris tarihini guncelle
    await DB.prepare(`
      UPDATE bayiler SET son_giris = datetime('now') WHERE id = ?
    `).bind(bayi.id).run()
    
    return c.json({
      success: true,
      token,
      bayi: {
        id: bayi.id,
        email: bayi.login_email,
        firma_adi: bayi.firma_adi,
        yetkili_adi: bayi.yetkili_adi,
        telefon: bayi.telefon,
        il_id: bayi.il_id,
        kredi_bakiye: bayi.kredi_bakiye
      }
    })
  } catch (error) {
    console.error('Bayi login error:', error)
    if (error instanceof AuthenticationError) {
      return c.json({ error: error.message }, 401)
    }
    return c.json({ error: 'Giris islemi basarisiz' }, 500)
  }
})

// Bayi logout endpoint
app.post('/api/bayi/logout', async (c) => {
  const { DB } = c.env
  const authHeader = c.req.header('Authorization')
  
  try {
    const bayiAuth = await verifyBayiAuth(authHeader, DB)
    if (!bayiAuth) {
      return c.json({ error: 'Gecersiz token' }, 401)
    }
    
    // Session'lari deaktif et
    await DB.prepare(`
      UPDATE bayi_sessions SET aktif = 0 WHERE bayi_id = ?
    `).bind(bayiAuth.bayiId).run()
    
    return c.json({ success: true, message: 'Basariyla cikis yapildi' })
  } catch (error) {
    console.error('Bayi logout error:', error)
    return c.json({ error: 'Cikis islemi basarisiz' }, 500)
  }
})

// Bayi profil bilgileri
app.get('/api/bayi/profile', async (c) => {
  const { DB } = c.env
  const authHeader = c.req.header('Authorization')
  
  try {
    const bayiAuth = await verifyBayiAuth(authHeader, DB)
    if (!bayiAuth) {
      return c.json({ error: 'Gecersiz token' }, 401)
    }
    
    const bayi = await DB.prepare(`
      SELECT id, bayi_kodu, firma_adi, yetkili_adi, telefon, email, 
             login_email, adres, uzmanlik_alani, rating, tamamlanan_is_sayisi,
             kredi_bakiye, il_id, ilce_id, son_giris
      FROM bayiler 
      WHERE id = ? AND aktif = 1
    `).bind(bayiAuth.bayiId).first()
    
    if (!bayi) {
      return c.json({ error: 'Bayi bulunamadi' }, 404)
    }
    
    return c.json(bayi)
  } catch (error) {
    console.error('Bayi profile error:', error)
    return c.json({ error: 'Profil bilgileri alinamadi' }, 500)
  }
})

// Bayi icin il bazli isler (kisitli bilgi)
app.get('/api/bayi/jobs', async (c) => {
  const { DB } = c.env
  const authHeader = c.req.header('Authorization')
  
  try {
    const bayiAuth = await verifyBayiAuth(authHeader, DB)
    if (!bayiAuth) {
      return c.json({ error: 'Gecersiz token' }, 401)
    }
    
    // Sadece bayinin bulundugu ildeki isleri goster (kisitli bilgi)
    const jobs = await DB.prepare(`
      SELECT 
        it.id, it.talep_kodu, it.aciklama, it.durum, it.oncelik,
        it.tv_marka, it.tv_model, it.created_at, it.is_fiyati,
        st.tur_adi as servis_turu,
        i.il_adi, ilc.ilce_adi,
        -- Kisitli bilgiler (odeme yapana kadar tam bilgi yok)
        CASE 
          WHEN it.satin_alan_bayi_id = ? THEN m.ad_soyad
          ELSE 'Musteri Bilgisi Gizli'
        END as musteri_adi,
        CASE 
          WHEN it.satin_alan_bayi_id = ? THEN m.telefon
          ELSE 'Telefon Bilgisi Gizli'
        END as telefon,
        CASE 
          WHEN it.satin_alan_bayi_id = ? THEN m.adres
          ELSE CONCAT(i.il_adi, ' / ', COALESCE(ilc.ilce_adi, 'Ilce Belirtilmemis'))
        END as adres_bilgi,
        it.satin_alan_bayi_id,
        it.goruntuleme_durumu
      FROM is_talepleri it
      JOIN musteriler m ON it.musteri_id = m.id
      JOIN iller i ON m.il_id = i.id
      LEFT JOIN ilceler ilc ON m.ilce_id = ilc.id
      JOIN servis_turleri st ON it.servis_turu_id = st.id
      WHERE i.id = ? 
        AND it.durum IN ('yeni', 'atandi', 'devam_ediyor')
        AND (it.satin_alan_bayi_id IS NULL OR it.satin_alan_bayi_id = ?)
      ORDER BY 
        CASE it.oncelik 
          WHEN 'yuksek' THEN 1
          WHEN 'normal' THEN 2 
          WHEN 'dusuk' THEN 3
        END,
        it.created_at DESC
    `).bind(bayiAuth.bayiId, bayiAuth.bayiId, bayiAuth.bayiId, bayiAuth.ilId, bayiAuth.bayiId).all()
    
    return c.json(jobs.results || [])
  } catch (error) {
    console.error('Bayi jobs error:', error)
    return c.json({ error: 'Isler listelenemedi' }, 500)
  }
})

// Bayi kredi bakiyesi
app.get('/api/bayi/credits', async (c) => {
  const { DB } = c.env
  const authHeader = c.req.header('Authorization')
  
  try {
    const bayiAuth = await verifyBayiAuth(authHeader, DB)
    if (!bayiAuth) {
      return c.json({ error: 'Gecersiz token' }, 401)
    }
    
    // Guncel bakiye
    const bayi = await DB.prepare(`
      SELECT kredi_bakiye FROM bayiler WHERE id = ?
    `).bind(bayiAuth.bayiId).first()
    
    // Kredi hareketleri (son 50)
    const hareketler = await DB.prepare(`
      SELECT hareket_turu, tutar, onceki_bakiye, yeni_bakiye, 
             aciklama, created_at
      FROM kredi_hareketleri 
      WHERE bayi_id = ?
      ORDER BY created_at DESC 
      LIMIT 50
    `).bind(bayiAuth.bayiId).all()
    
    return c.json({
      kredi_bakiye: bayi?.kredi_bakiye || 0,
      hareketler: hareketler.results || []
    })
  } catch (error) {
    console.error('Bayi credits error:', error)
    return c.json({ error: 'Kredi bilgileri alinamadi' }, 500)
  }
})

// Bayi satin aldigi isler (tam bilgi)
app.get('/api/bayi/my-jobs', async (c) => {
  const { DB } = c.env
  const authHeader = c.req.header('Authorization')
  
  try {
    const bayiAuth = await verifyBayiAuth(authHeader, DB)
    if (!bayiAuth) {
      return c.json({ error: 'Gecersiz token' }, 401)
    }
    
    const myJobs = await DB.prepare(`
      SELECT 
        it.id, it.talep_kodu, it.aciklama, it.durum, it.oncelik,
        it.tv_marka, it.tv_model, it.created_at, it.satin_alma_tarihi,
        it.satin_alma_fiyati, it.sorun_aciklama,
        m.ad_soyad as musteri_adi, m.telefon, m.email, m.adres,
        i.il_adi, ilc.ilce_adi,
        st.tur_adi as servis_turu
      FROM is_talepleri it
      JOIN musteriler m ON it.musteri_id = m.id
      JOIN iller i ON m.il_id = i.id
      LEFT JOIN ilceler ilc ON m.ilce_id = ilc.id
      JOIN servis_turleri st ON it.servis_turu_id = st.id
      WHERE it.satin_alan_bayi_id = ?
      ORDER BY it.satin_alma_tarihi DESC
    `).bind(bayiAuth.bayiId).all()
    
    return c.json(myJobs.results || [])
  } catch (error) {
    console.error('Bayi my-jobs error:', error)
    return c.json({ error: 'Satin aldiginiz isler listelenemedi' }, 500)
  }
})

// Is satin alma endpoint - Kredi ile odeme
app.post('/api/bayi/buy-job/:id', async (c) => {
  const { DB } = c.env
  const authHeader = c.req.header('Authorization')
  const jobId = c.req.param('id')
  
  try {
    const bayiAuth = await verifyBayiAuth(authHeader, DB)
    if (!bayiAuth) {
      return c.json({ error: 'Gecersiz token' }, 401)
    }
    
    // Transaction baslat (SQLite'da manuel transaction yonetimi)
    console.log(`Bayi ${bayiAuth.bayiId} job ${jobId} satin almaya calisiyor...`)
    
    // 1. Is mevcut mu ve satin alinmis mi kontrol et
    const job = await DB.prepare(`
      SELECT it.id, it.talep_kodu, it.is_fiyati, it.satin_alan_bayi_id, it.durum,
             m.il_id, m.ad_soyad, m.telefon, m.adres
      FROM is_talepleri it
      JOIN musteriler m ON it.musteri_id = m.id
      WHERE it.id = ? AND it.durum IN ('yeni', 'atandi')
    `).bind(jobId).first()
    
    if (!job) {
      return c.json({ error: 'Is bulunamadi veya artik mevcut degil' }, 404)
    }
    
    // 2. Is zaten satin alinmis mi?
    if (job.satin_alan_bayi_id) {
      return c.json({ error: 'Bu is baska bir bayi tarafindan satin alindi' }, 409)
    }
    
    // 3. Is bayinin ilinde mi?
    if (job.il_id !== bayiAuth.ilId) {
      return c.json({ error: 'Bu is sizin ilinizde degil' }, 403)
    }
    
    // 4. Bayi kredi bakiyesi yeterli mi?
    const bayi = await DB.prepare(`
      SELECT id, kredi_bakiye FROM bayiler WHERE id = ?
    `).bind(bayiAuth.bayiId).first()
    
    if (!bayi || bayi.kredi_bakiye < job.is_fiyati) {
      return c.json({ 
        error: `Yetersiz kredi bakiyesi. Gerekli: ${job.is_fiyati} TL, Mevcut: ${bayi.kredi_bakiye || 0} TL` 
      }, 402)
    }
    
    // 5. Race condition check - Tekrar kontrol et (double-check locking)
    const finalCheck = await DB.prepare(`
      SELECT satin_alan_bayi_id FROM is_talepleri WHERE id = ?
    `).bind(jobId).first()
    
    if (finalCheck?.satin_alan_bayi_id) {
      return c.json({ error: 'Is bu sirada baska bir bayi tarafindan satin alindi' }, 409)
    }
    
    // 6. Isi satin al - Ilk isi guncelle
    const satinAlmaTarihi = new Date().toISOString()
    await DB.prepare(`
      UPDATE is_talepleri 
      SET satin_alan_bayi_id = ?, 
          satin_alma_tarihi = ?, 
          satin_alma_fiyati = ?,
          durum = 'atandi',
          goruntuleme_durumu = 'tam',
          updated_at = ?
      WHERE id = ? AND satin_alan_bayi_id IS NULL
    `).bind(bayiAuth.bayiId, satinAlmaTarihi, job.is_fiyati, satinAlmaTarihi, jobId).run()
    
    // 7. Kredi bakiyesini guncelle
    const yeniBakiye = bayi.kredi_bakiye - job.is_fiyati
    await DB.prepare(`
      UPDATE bayiler SET kredi_bakiye = ?, updated_at = datetime('now') WHERE id = ?
    `).bind(yeniBakiye, bayiAuth.bayiId).run()
    
    // 8. Odeme islemi kaydi olustur
    const odemeResult = await DB.prepare(`
      INSERT INTO odeme_islemleri (
        bayi_id, is_talep_id, odeme_turu, tutar, durum, created_at, updated_at
      ) VALUES (?, ?, 'kredi_kullanim', ?, 'tamamlandi', ?, ?)
    `).bind(bayiAuth.bayiId, jobId, job.is_fiyati, satinAlmaTarihi, satinAlmaTarihi).run()
    
    // 9. Kredi hareketi kaydet
    await DB.prepare(`
      INSERT INTO kredi_hareketleri (
        bayi_id, hareket_turu, tutar, onceki_bakiye, yeni_bakiye, 
        aciklama, odeme_id, is_talep_id, created_at
      ) VALUES (?, 'harcama', ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      bayiAuth.bayiId, 
      job.is_fiyati, 
      bayi.kredi_bakiye, 
      yeniBakiye,
      `Is satin alma: ${job.talep_kodu}`,
      odemeResult.meta.last_row_id,
      jobId,
      satinAlmaTarihi
    ).run()
    
    // 10. Is gecmisi kaydet
    await DB.prepare(`
      INSERT INTO is_gecmisi (is_talep_id, eski_durum, yeni_durum, aciklama, degistiren, created_at)
      VALUES (?, 'yeni', 'atandi', ?, ?, ?)
    `).bind(
      jobId, 
      `Bayi tarafindan satin alindi - ${job.is_fiyati} TL`,
      bayiAuth.firma_adi,
      satinAlmaTarihi
    ).run()
    
    console.log(`✅ Job ${jobId} basariyla satin alindi - Bayi: ${bayiAuth.bayiId}, Tutar: ${job.is_fiyati} TL`)
    
    return c.json({
      success: true,
      message: `Is basariyla satin alindi! ${job.is_fiyati} TL kredi bakiyenizden dusuldu.`,
      job: {
        id: job.id,
        talep_kodu: job.talep_kodu,
        satin_alma_fiyati: job.is_fiyati,
        musteri_bilgileri: {
          ad_soyad: job.ad_soyad,
          telefon: job.telefon,
          adres: job.adres
        }
      },
      yeni_bakiye: yeniBakiye
    })
    
  } catch (error) {
    console.error('Job satin alma hatasi:', error)
    return c.json({ 
      error: 'Is satin alma islemi basarisiz', 
      details: error.message 
    }, 500)
  }
})

// =============================================================================
// PayTR Odeme Sistemi API Routes
// =============================================================================

// PayTR kredi yukleme baslatma
app.post('/api/payment/paytr/init', async (c) => {
  const { DB } = c.env
  const authHeader = c.req.header('Authorization')
  const { amount } = await c.req.json()
  
  try {
    const bayiAuth = await verifyBayiAuth(authHeader, DB)
    if (!bayiAuth) {
      return c.json({ error: 'Gecersiz token' }, 401)
    }
    
    // Minimum tutar kontrolu
    const minAmount = 100; // Minimum 100 TL
    if (!amount || amount < minAmount) {
      return c.json({ error: `Minimum kredi yukleme tutari ${minAmount} TL` }, 400)
    }
    
    if (amount > 10000) {
      return c.json({ error: 'Maksimum kredi yukleme tutari 10.000 TL' }, 400)
    }
    
    // Bayi bilgilerini al
    const bayi = await DB.prepare(`
      SELECT id, firma_adi, yetkili_adi, telefon, login_email
      FROM bayiler WHERE id = ?
    `).bind(bayiAuth.bayiId).first()
    
    if (!bayi) {
      return c.json({ error: 'Bayi bulunamadi' }, 404)
    }
    
    // PayTR konfigurasyonu al
    const paytrConfig = await getPayTRConfig(DB)
    
    // User IP al
    const userIp = c.req.header('cf-connecting-ip') || 
                   c.req.header('x-forwarded-for') || 
                   c.req.header('x-real-ip') || 
                   '127.0.0.1'
    
    // PayTR payment request olustur
    const paymentRequest = createPayTRPaymentRequest(paytrConfig, {
      bayiId: bayi.id,
      email: bayi.login_email,
      amount: amount,
      bayiName: bayi.firma_adi,
      bayiPhone: bayi.telefon,
      userIp: userIp
    })
    
    // Odeme islemi kaydi olustur (beklemede durumunda)
    const odemeResult = await DB.prepare(`
      INSERT INTO odeme_islemleri (
        bayi_id, odeme_turu, tutar, durum, paytr_merchant_oid, created_at
      ) VALUES (?, 'kredi_karti', ?, 'beklemede', ?, datetime('now'))
    `).bind(bayi.id, amount, paymentRequest.merchant_oid).run()
    
    console.log(`PayTR odeme baslatildi - Bayi: ${bayi.id}, Tutar: ${amount} TL, OID: ${paymentRequest.merchant_oid}`)
    
    return c.json({
      success: true,
      payment_url: 'https://www.paytr.com/odeme/guvenli/' + (paymentRequest.paytr_token || 'test'),
      merchant_oid: paymentRequest.merchant_oid,
      amount: amount,
      paytr_request: paymentRequest, // Test icin - production'da kaldirilacak
      message: `${amount} TL kredi yukleme islemi baslatildi`
    })
    
  } catch (error) {
    console.error('PayTR init error:', error)
    return c.json({ 
      error: 'Odeme islemi baslatilamadi', 
      details: error.message 
    }, 500)
  }
})

// PayTR callback endpoint (POST)
app.post('/api/payment/paytr/callback', async (c) => {
  const { DB } = c.env
  
  try {
    const formData = await c.req.formData()
    const params = {
      merchant_oid: formData.get('merchant_oid') as string,
      status: formData.get('status') as string,
      total_amount: formData.get('total_amount') as string,
      hash: formData.get('hash') as string
    }
    
    console.log('PayTR callback alindi:', params)
    
    if (!params.merchant_oid || !params.status || !params.hash) {
      console.error('PayTR callback eksik parametreler')
      return c.text('ERR', 400)
    }
    
    // PayTR konfigurasyonu al
    const paytrConfig = await getPayTRConfig(DB)
    
    // Hash dogrulama
    const isValidHash = verifyPayTRCallback(paytrConfig, params)
    if (!isValidHash) {
      console.error('PayTR callback hash dogrulanamadi')
      return c.text('ERR', 400)
    }
    
    // Odeme islemini bul
    const odeme = await DB.prepare(`
      SELECT id, bayi_id, tutar, durum FROM odeme_islemleri 
      WHERE paytr_merchant_oid = ?
    `).bind(params.merchant_oid).first()
    
    if (!odeme) {
      console.error('PayTR callback - odeme bulunamadi:', params.merchant_oid)
      return c.text('ERR', 404)
    }
    
    if (odeme.durum !== 'beklemede') {
      console.log('PayTR callback - odeme zaten islenmis:', params.merchant_oid)
      return c.text('OK')
    }
    
    // Odeme basarili mi?
    if (params.status === 'success') {
      // Bayi kredi bakiyesini guncelle
      const oncekiBakiye = await DB.prepare(`
        SELECT kredi_bakiye FROM bayiler WHERE id = ?
      `).bind(odeme.bayi_id).first()
      
      const yeniBakiye = (oncekiBakiye?.kredi_bakiye || 0) + odeme.tutar
      
      await DB.prepare(`
        UPDATE bayiler SET kredi_bakiye = ?, updated_at = datetime('now') WHERE id = ?
      `).bind(yeniBakiye, odeme.bayi_id).run()
      
      // Odeme islemini tamamlandi olarak isaretle
      await DB.prepare(`
        UPDATE odeme_islemleri SET 
          durum = 'tamamlandi', 
          paytr_payment_id = ?, 
          updated_at = datetime('now') 
        WHERE id = ?
      `).bind(params.total_amount, odeme.id).run()
      
      // Kredi hareketi kaydet
      await DB.prepare(`
        INSERT INTO kredi_hareketleri (
          bayi_id, hareket_turu, tutar, onceki_bakiye, yeni_bakiye, 
          aciklama, odeme_id, created_at
        ) VALUES (?, 'yukleme', ?, ?, ?, ?, ?, datetime('now'))
      `).bind(
        odeme.bayi_id,
        odeme.tutar,
        oncekiBakiye?.kredi_bakiye || 0,
        yeniBakiye,
        `PayTR ile kredi yukleme - ${params.merchant_oid}`,
        odeme.id
      ).run()
      
      console.log(`✅ PayTR odeme basarili - Bayi: ${odeme.bayi_id}, Tutar: ${odeme.tutar} TL`)
      
      return c.text('OK')
    } else {
      // Odeme basarisiz
      await DB.prepare(`
        UPDATE odeme_islemleri SET 
          durum = 'iptal', 
          updated_at = datetime('now') 
        WHERE id = ?
      `).bind(odeme.id).run()
      
      console.log(`❌ PayTR odeme basarisiz - Bayi: ${odeme.bayi_id}, OID: ${params.merchant_oid}`)
      
      return c.text('OK')
    }
    
  } catch (error) {
    console.error('PayTR callback error:', error)
    return c.text('ERR', 500)
  }
})

// PayTR basarili odeme sayfasi
app.get('/api/payment/paytr/success', (c) => {
  return c.html(`
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Ödeme Başarılı - TV Servis</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-green-50 min-h-screen flex items-center justify-center">
        <div class="bg-white rounded-lg shadow-xl p-8 max-w-md mx-4">
            <div class="text-center">
                <i class="fas fa-check-circle text-green-500 text-6xl mb-4"></i>
                <h1 class="text-2xl font-bold text-gray-800 mb-2">Odeme Basarili!</h1>
                <p class="text-gray-600 mb-6">Kredi yukleme isleminiz tamamlandi. Bakiyeniz kisa surede guncellenecektir.</p>
                <div class="space-y-3">
                    <button onclick="window.close()" class="w-full bg-green-500 hover:bg-green-700 text-white py-2 px-4 rounded">
                        <i class="fas fa-times mr-1"></i> Pencereyi Kapat
                    </button>
                    <a href="/bayi/dashboard" class="block w-full bg-blue-500 hover:bg-blue-700 text-white py-2 px-4 rounded text-center">
                        <i class="fas fa-dashboard mr-1"></i> Dashboard'a Don
                    </a>
                </div>
            </div>
        </div>
        
        <script>
            // 3 saniye sonra otomatik kapat (popup ise)
            setTimeout(() => {
                if (window.opener) {
                    window.close();
                }
            }, 3000);
        </script>
    </body>
    </html>
  `)
})

// PayTR basarisiz odeme sayfasi  
app.get('/api/payment/paytr/failed', (c) => {
  return c.html(`
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Ödeme Başarısız - TV Servis</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-red-50 min-h-screen flex items-center justify-center">
        <div class="bg-white rounded-lg shadow-xl p-8 max-w-md mx-4">
            <div class="text-center">
                <i class="fas fa-times-circle text-red-500 text-6xl mb-4"></i>
                <h1 class="text-2xl font-bold text-gray-800 mb-2">Odeme Basarisiz</h1>
                <p class="text-gray-600 mb-6">Kredi yukleme isleminiz tamamlanamadi. Lutfen tekrar deneyin.</p>
                <div class="space-y-3">
                    <button onclick="window.close()" class="w-full bg-red-500 hover:bg-red-700 text-white py-2 px-4 rounded">
                        <i class="fas fa-times mr-1"></i> Pencereyi Kapat
                    </button>
                    <a href="/bayi/dashboard" class="block w-full bg-blue-500 hover:bg-blue-700 text-white py-2 px-4 rounded text-center">
                        <i class="fas fa-dashboard mr-1"></i> Dashboard'a Don
                    </a>
                </div>
            </div>
        </div>
        
        <script>
            // 5 saniye sonra otomatik kapat (popup ise)  
            setTimeout(() => {
                if (window.opener) {
                    window.close();
                }
            }, 5000);
        </script>
    </body>
    </html>
  `)
})

// =============================================================================
// Havale Sistemi API Routes
// =============================================================================

// Havale bildirimi yapma
app.post('/api/payment/transfer/notify', async (c) => {
  const { DB } = c.env
  const authHeader = c.req.header('Authorization')
  const { amount, reference, description, transfer_date } = await c.req.json()
  
  try {
    const bayiAuth = await verifyBayiAuth(authHeader, DB)
    if (!bayiAuth) {
      return c.json({ error: 'Gecersiz token' }, 401)
    }
    
    // Validations
    if (!amount || amount < 100) {
      return c.json({ error: 'Minimum havale tutari 100 TL' }, 400)
    }
    
    if (!reference) {
      return c.json({ error: 'Havale referans numarasi gerekli' }, 400)
    }
    
    if (!transfer_date) {
      return c.json({ error: 'Havale tarihi gerekli' }, 400)
    }
    
    // Ayni referans ile daha once bildirim yapilmis mi?
    const existingTransfer = await DB.prepare(`
      SELECT id FROM odeme_islemleri 
      WHERE havale_referans = ? AND bayi_id = ?
    `).bind(reference, bayiAuth.bayiId).first()
    
    if (existingTransfer) {
      return c.json({ error: 'Bu referans numarasi ile daha once havale bildirimi yapilmis' }, 409)
    }
    
    // Havale bildirimi kaydi olustur
    const odemeResult = await DB.prepare(`
      INSERT INTO odeme_islemleri (
        bayi_id, odeme_turu, tutar, durum, havale_referans, havale_aciklama, 
        admin_onay, created_at, updated_at
      ) VALUES (?, 'havale', ?, 'beklemede', ?, ?, 0, ?, ?)
    `).bind(
      bayiAuth.bayiId, 
      amount, 
      reference, 
      description || `Havale bildirimi - ${amount} TL`,
      new Date().toISOString(),
      new Date().toISOString()
    ).run()
    
    console.log(`Havale bildirimi alindi - Bayi: ${bayiAuth.bayiId}, Tutar: ${amount} TL, Ref: ${reference}`)
    
    return c.json({
      success: true,
      message: 'Havale bildirimi basariyla alindi. Admin onayindan sonra kredi bakiyeniz guncellenecektir.',
      transfer_id: odemeResult.meta.last_row_id,
      reference: reference,
      amount: amount,
      status: 'admin_onayinda'
    })
    
  } catch (error) {
    console.error('Transfer notify error:', error)
    return c.json({ 
      error: 'Havale bildirimi kaydedilemedi', 
      details: error.message 
    }, 500)
  }
})

// Havale durumu sorgulama
app.get('/api/payment/transfer/status/:reference', async (c) => {
  const { DB } = c.env
  const authHeader = c.req.header('Authorization')
  const reference = c.req.param('reference')
  
  try {
    const bayiAuth = await verifyBayiAuth(authHeader, DB)
    if (!bayiAuth) {
      return c.json({ error: 'Gecersiz token' }, 401)
    }
    
    const transfer = await DB.prepare(`
      SELECT id, tutar, durum, havale_aciklama, admin_onay, created_at, updated_at
      FROM odeme_islemleri 
      WHERE havale_referans = ? AND bayi_id = ? AND odeme_turu = 'havale'
    `).bind(reference, bayiAuth.bayiId).first()
    
    if (!transfer) {
      return c.json({ error: 'Havale kaydi bulunamadi' }, 404)
    }
    
    const statusMap = {
      'beklemede': 'Admin onayi bekleniyor',
      'tamamlandi': 'Onaylandi ve kredi yuklendi',
      'iptal': 'Reddedildi'
    };
    
    return c.json({
      reference: reference,
      amount: transfer.tutar,
      status: transfer.durum,
      status_text: statusMap[transfer.durum] || transfer.durum,
      admin_approved: transfer.admin_onay === 1,
      description: transfer.havale_aciklama,
      created_at: transfer.created_at,
      updated_at: transfer.updated_at
    })
    
  } catch (error) {
    console.error('Transfer status error:', error)
    return c.json({ 
      error: 'Havale durumu sorgulanamadi' 
    }, 500)
  }
})

// =============================================================================
// Admin API Routes - Payment Management & System Administration
// =============================================================================

// Admin login test endpoint
app.get('/api/admin/test', (c) => {
  return c.json({ message: 'Admin endpoint calisiyor!' })
})

// Admin test endpoint
app.get('/api/admin/test', (c) => {
  return c.json({ message: 'Admin endpoint calisiyor!' })
})

// Admin login endpoint - Minimal Test Version  
app.post('/api/admin/login', async (c) => {
  return c.json({
    success: true,
    message: 'Hard coded admin login',
    token: 'test-token-123',
    admin: { kullanici_adi: 'admin', yetki_seviyesi: 2 }
  })
})

// Admin dashboard istatistikleri
app.get('/api/admin/dashboard', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    // Bekleyen odemeler
    const pendingPayments = await DB.prepare(`
      SELECT COUNT(*) as count FROM odeme_islemleri 
      WHERE durum = 'beklemede'
    `).first()
    
    // Toplam kredi islemleri (ekleme turundeki hareketler)
    const totalCredits = await DB.prepare(`
      SELECT SUM(tutar) as total FROM kredi_hareketleri 
      WHERE hareket_turu = 'ekleme'
    `).first()
    
    // Aktif bayiler
    const activeDealers = await DB.prepare(`
      SELECT COUNT(*) as count FROM bayiler WHERE aktif = 1
    `).first()
    
    // Bu ayki odemeler
    const monthlyPayments = await DB.prepare(`
      SELECT COUNT(*) as count, SUM(tutar) as total 
      FROM odeme_islemleri 
      WHERE strftime('%Y-%m', created_at) = strftime('%Y-%m', 'now')
      AND durum = 'tamamlandi'
    `).first()
    
    return c.json({
      success: true,
      stats: {
        bekleyen_odemeler: pendingPayments?.count || 0,
        toplam_kredi: totalCredits?.total || 0,
        aktif_bayiler: activeDealers?.count || 0,
        aylik_odemeler: {
          sayi: monthlyPayments?.count || 0,
          tutar: monthlyPayments?.total || 0
        }
      }
    })
    
  } catch (error) {
    console.error('Admin dashboard error:', error)
    return c.json({ error: 'Dashboard verileri alinamadi' }, 500)
  }
})

// Bekleyen bank transferlerini listele
app.get('/api/admin/payments/pending', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const pendingTransfers = await DB.prepare(`
      SELECT 
        o.id,
        o.bayi_id,
        o.tutar,
        o.havale_referans as referans_no,
        o.havale_aciklama as aciklama,
        o.created_at,
        b.firma_adi,
        (SELECT i.il_adi FROM iller i WHERE i.id = b.il_id) as il_adi,
        b.email,
        b.telefon
      FROM odeme_islemleri o
      JOIN bayiler b ON o.bayi_id = b.id
      WHERE o.durum = 'beklemede' AND o.odeme_turu = 'havale'
      ORDER BY o.created_at DESC
    `).all()
    
    return c.json({
      success: true,
      transfers: pendingTransfers.results || []
    })
    
  } catch (error) {
    console.error('Pending payments error:', error)
    return c.json({ error: 'Bekleyen odemeler listelenemedi' }, 500)
  }
})

// Transfer onaylama/reddetme
app.post('/api/admin/payments/:id/approve', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  const paymentId = c.req.param('id')
  const { action, aciklama } = await c.req.json() // action: 'approve' veya 'reject'
  const adminInfo = c.get('admin')
  
  try {
    // Odeme islemini bul
    const payment = await DB.prepare(`
      SELECT * FROM odeme_islemleri WHERE id = ? AND durum = 'beklemede'
    `).bind(paymentId).first()
    
    if (!payment) {
      return c.json({ error: 'Odeme islemi bulunamadi' }, 404)
    }
    
    let newStatus: string
    let logDescription: string
    
    if (action === 'approve') {
      newStatus = 'tamamlandi'
      logDescription = `Transfer onaylandi${aciklama ? ': ' + aciklama : ''}`
      
      // Mevcut bakiyeyi al
      const bayi = await DB.prepare(`
        SELECT kredi_bakiye FROM bayiler WHERE id = ?
      `).bind(payment.bayi_id).first()
      
      const oncekiBakiye = bayi?.kredi_bakiye || 0
      const yeniBakiye = oncekiBakiye + payment.tutar
      
      // Bayinin kredi bakiyesini guncelle
      await DB.prepare(`
        UPDATE bayiler 
        SET kredi_bakiye = ?
        WHERE id = ?
      `).bind(yeniBakiye, payment.bayi_id).run()
      
      // Kredi hareketi kaydet
      await DB.prepare(`
        INSERT INTO kredi_hareketleri (bayi_id, hareket_turu, tutar, onceki_bakiye, yeni_bakiye, aciklama, odeme_id)
        VALUES (?, ?, ?, ?, ?, ?, ?)
      `).bind(
        payment.bayi_id, 
        'ekleme',
        payment.tutar,
        oncekiBakiye,
        yeniBakiye,
        `Admin onayi: ${payment.havale_referans || 'No ref'}`,
        payment.id
      ).run()
      
    } else if (action === 'reject') {
      newStatus = 'iptal_edildi'
      logDescription = `Transfer reddedildi${aciklama ? ': ' + aciklama : ''}`
    } else {
      return c.json({ error: 'Gecersiz islem' }, 400)
    }
    
    // Odeme durumunu guncelle
    await DB.prepare(`
      UPDATE odeme_islemleri 
      SET durum = ?, admin_onay = ?, updated_at = datetime('now')
      WHERE id = ?
    `).bind(newStatus, action === 'approve' ? 1 : 0, paymentId).run()
    
    // Log kaydi olustur
    await DB.prepare(`
      INSERT INTO odeme_onay_loglari (odeme_id, admin_id, onceki_durum, yeni_durum, aciklama)
      VALUES (?, ?, 'beklemede', ?, ?)
    `).bind(paymentId, adminInfo.adminId, newStatus, logDescription).run()
    
    // Send email notification
    try {
      const bayi = await DB.prepare(`SELECT * FROM bayiler WHERE id = ?`).bind(payment.bayi_id).first()
      
      if (action === 'approve') {
        await NotificationService.notifyPaymentApproval(bayi, payment, aciklama)
        SystemLogger.info('Notification', 'Payment approval notification sent', { paymentId, bayiId: payment.bayi_id })
      } else {
        await NotificationService.notifyPaymentRejection(bayi, payment, aciklama || 'Red nedeni belirtilmedi')
        SystemLogger.info('Notification', 'Payment rejection notification sent', { paymentId, bayiId: payment.bayi_id })
      }
    } catch (notificationError) {
      SystemLogger.error('Notification', 'Failed to send notification', { error: notificationError.message })
      // Don't fail the approval process if notification fails
    }
    
    return c.json(createSuccessResponse({
      paymentId: paymentId,
      action: action,
      amount: payment.tutar,
      newStatus: newStatus
    }, action === 'approve' ? 'Transfer basariyla onaylandi' : 'Transfer basariyla reddedildi'))
    
  } catch (error) {
    console.error('Payment approval error:', error)
    return c.json({ error: 'Islem gerceklestirilemedi' }, 500)
  }
})

// Odeme gecmisi ve raporlama
app.get('/api/admin/payments/history', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  const { page = '1', limit = '20', durum = 'all', bayi_id = '' } = c.req.query()
  
  try {
    let whereClause = '1=1'
    const bindings: any[] = []
    
    if (durum !== 'all') {
      whereClause += ' AND o.durum = ?'
      bindings.push(durum)
    }
    
    if (bayi_id) {
      whereClause += ' AND o.bayi_id = ?'
      bindings.push(parseInt(bayi_id))
    }
    
    const offset = (parseInt(page) - 1) * parseInt(limit)
    bindings.push(parseInt(limit), offset)
    
    const payments = await DB.prepare(`
      SELECT 
        o.id,
        o.bayi_id,
        o.tutar,
        o.odeme_turu as odeme_yontemi,
        o.durum,
        o.havale_referans as referans_no,
        o.havale_aciklama as aciklama,
        o.admin_onay,
        o.created_at,
        o.updated_at as islem_tarihi,
        b.firma_adi,
        (SELECT i.il_adi FROM iller i WHERE i.id = b.il_id) as il_adi
      FROM odeme_islemleri o
      JOIN bayiler b ON o.bayi_id = b.id
      WHERE ${whereClause}
      ORDER BY o.created_at DESC
      LIMIT ? OFFSET ?
    `).bind(...bindings).all()
    
    // Toplam kayit sayisi
    const totalCount = await DB.prepare(`
      SELECT COUNT(*) as count FROM odeme_islemleri o WHERE ${whereClause}
    `).bind(...bindings.slice(0, -2)).first()
    
    return c.json({
      success: true,
      payments: payments.results || [],
      pagination: {
        page: parseInt(page),
        limit: parseInt(limit),
        total: totalCount?.count || 0,
        totalPages: Math.ceil((totalCount?.count || 0) / parseInt(limit))
      }
    })
    
  } catch (error) {
    console.error('Payment history error:', error)
    return c.json({ error: 'Odeme gecmisi alinamadi' }, 500)
  }
})

// =============================================================================
// System Monitoring & Health Check Routes
// =============================================================================

// =============================================================================
// Digital Tracking & Analytics API Routes
// =============================================================================

// Digital tracking overview statistics
app.get('/api/admin/analytics/overview', requireAdminAuth(), async (c) => {
  try {
    // In production, these would come from real analytics APIs
    // Google Analytics 4, Facebook Pixel, etc.
    
    const mockAnalytics = {
      dailyStats: {
        visitors: Math.floor(Math.random() * 500) + 800,
        pageViews: Math.floor(Math.random() * 2000) + 3000,
        conversionRate: (Math.random() * 3 + 6).toFixed(1),
        avgSessionDuration: Math.floor(Math.random() * 300) + 180, // seconds
        bounceRate: (Math.random() * 20 + 35).toFixed(1)
      },
      trafficSources: {
        organic: 45.2,
        social: 18.7,
        direct: 15.3,
        referral: 12.8,
        email: 5.1,
        other: 2.9
      },
      topPages: [
        { path: '/', views: 1247, conversionRate: 8.4 },
        { path: '/hizmetler/tv-tamiri', views: 892, conversionRate: 12.1 },
        { path: '/hizmetler/beyaz-esya', views: 654, conversionRate: 9.7 },
        { path: '/bayi', views: 423, conversionRate: 15.3 }
      ],
      seoKeywords: [
        { keyword: 'TV tamiri İstanbul', position: 3, clicks: 1247, ctr: 8.4, change: 2 },
        { keyword: 'Beyaz eşya tamiri', position: 7, clicks: 892, ctr: 6.2, change: -1 },
        { keyword: 'Elektrik arıza servisi', position: 5, clicks: 654, ctr: 7.1, change: 3 }
      ]
    }
    
    return c.json({
      success: true,
      data: mockAnalytics,
      timestamp: new Date().toISOString()
    })
    
  } catch (error) {
    console.error('Analytics overview error:', error)
    return c.json({ error: 'Analytics verileri alınamadı' }, 500)
  }
})

// Setup Google Analytics 4
app.post('/api/admin/analytics/ga4-setup', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { measurementId, enabled = true } = await c.req.json()
    
    if (!measurementId || !measurementId.startsWith('G-')) {
      return c.json({ error: 'Geçersiz Measurement ID (G-XXXXXXXXXX formatında olmalı)' }, 400)
    }
    
    // Database'e kaydet
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, is_active = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(measurementId, enabled ? 1 : 0, 'ga4_measurement_id').run()
    
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(enabled ? 'true' : 'false', 'ga4_enabled').run()
    
    SystemLogger.info('Analytics', 'GA4 configuration saved to database', { 
      measurementId, 
      enabled,
      timestamp: new Date().toISOString() 
    })
    
    return c.json({
      success: true,
      message: 'Google Analytics 4 yapılandırması başarıyla kaydedildi',
      data: {
        measurementId,
        enabled,
        status: 'configured'
      }
    })
    
  } catch (error) {
    console.error('GA4 setup database error:', error)
    return c.json({ error: 'GA4 kurulumu veritabanı hatası' }, 500)
  }
})

// Setup Facebook Pixel
app.post('/api/admin/analytics/facebook-pixel-setup', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { pixelId, enabled = true } = await c.req.json()
    
    if (!pixelId || pixelId.length < 10) {
      return c.json({ error: 'Geçersiz Facebook Pixel ID (en az 10 karakter olmalı)' }, 400)
    }
    
    // Database'e kaydet
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, is_active = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(pixelId, enabled ? 1 : 0, 'facebook_pixel_id').run()
    
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(enabled ? 'true' : 'false', 'facebook_pixel_enabled').run()
    
    SystemLogger.info('Analytics', 'Facebook Pixel configuration saved to database', { 
      pixelId, 
      enabled,
      timestamp: new Date().toISOString() 
    })
    
    return c.json({
      success: true,
      message: 'Facebook Pixel yapılandırması başarıyla kaydedildi',
      data: {
        pixelId,
        enabled,
        status: 'configured'
      }
    })
    
  } catch (error) {
    console.error('Facebook Pixel setup database error:', error)
    return c.json({ error: 'Facebook Pixel kurulumu veritabanı hatası' }, 500)
  }
})

// Setup Google Tag Manager
app.post('/api/admin/analytics/gtm-setup', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { containerId, enabled = true } = await c.req.json()
    
    if (!containerId || !containerId.startsWith('GTM-')) {
      return c.json({ error: 'Geçersiz GTM Container ID (GTM-XXXXXXX formatında olmalı)' }, 400)
    }
    
    // Database'e kaydet
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, is_active = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(containerId, enabled ? 1 : 0, 'gtm_container_id').run()
    
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(enabled ? 'true' : 'false', 'gtm_enabled').run()
    
    SystemLogger.info('Analytics', 'GTM configuration saved to database', { 
      containerId, 
      enabled,
      timestamp: new Date().toISOString() 
    })
    
    return c.json({
      success: true,
      message: 'Google Tag Manager yapılandırması başarıyla kaydedildi',
      data: {
        containerId,
        enabled,
        status: 'configured'
      }
    })
    
  } catch (error) {
    console.error('GTM setup database error:', error)
    return c.json({ error: 'GTM kurulumu veritabanı hatası' }, 500)
  }
})

// Get tracking configuration
app.get('/api/admin/analytics/tracking-config', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    // Tüm tracking configuration'ları getir
    const { results: configs } = await DB.prepare(`
      SELECT config_key, config_value, config_category, is_active, updated_at 
      FROM tracking_config 
      ORDER BY config_category, config_key
    `).all()
    
    // Kategoriye göre grupla
    const configByCategory = {}
    configs.forEach(config => {
      if (!configByCategory[config.config_category]) {
        configByCategory[config.config_category] = {}
      }
      configByCategory[config.config_category][config.config_key] = {
        value: config.config_value,
        active: config.is_active === 1,
        updated_at: config.updated_at
      }
    })
    
    return c.json({
      success: true,
      data: configByCategory,
      total_configs: configs.length
    })
    
  } catch (error) {
    console.error('Get tracking config error:', error)
    return c.json({ error: 'Tracking konfigürasyon okuma hatası' }, 500)
  }
})

// Get current tracking IDs for frontend injection
app.get('/api/tracking-config', async (c) => {
  const { DB } = c.env
  
  try {
    // Sadece aktif tracking ID'lerini getir (public endpoint)
    const { results: activeConfigs } = await DB.prepare(`
      SELECT config_key, config_value 
      FROM tracking_config 
      WHERE is_active = 1 AND config_category IN ('analytics', 'facebook', 'gtm')
    `).all()
    
    const trackingIds = {}
    activeConfigs.forEach(config => {
      trackingIds[config.config_key] = config.config_value
    })
    
    return c.json({
      success: true,
      trackingIds,
      cache_ttl: 300 // 5 dakika cache
    })
    
  } catch (error) {
    console.error('Get public tracking config error:', error)
    // Fallback olarak default değerler döndür
    return c.json({
      success: true,
      trackingIds: {
        ga4_measurement_id: 'G-XXXXXXXXXX',
        facebook_pixel_id: 'YOUR_PIXEL_ID_HERE',
        gtm_container_id: 'GTM-XXXXXXX'
      }
    })
  }
})

// Webhook & API Configuration Management
app.post('/api/admin/webhooks/n8n-setup', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { webhookUrl, enabled = true } = await c.req.json()
    
    if (!webhookUrl || !webhookUrl.startsWith('http')) {
      return c.json({ error: 'Geçersiz webhook URL (https:// ile başlamalı)' }, 400)
    }
    
    // Webhook URL test et
    try {
      const testResponse = await fetch(webhookUrl, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ test: true, timestamp: new Date().toISOString() })
      })
      
      if (!testResponse.ok) {
        return c.json({ 
          error: `Webhook test başarısız: ${testResponse.status} ${testResponse.statusText}` 
        }, 400)
      }
    } catch (testError) {
      return c.json({ 
        error: `Webhook bağlantı hatası: ${testError.message}` 
      }, 400)
    }
    
    // Database'e kaydet
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, is_active = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(webhookUrl, enabled ? 1 : 0, 'n8n_webhook_url').run()
    
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(enabled ? 'true' : 'false', 'n8n_webhook_enabled').run()
    
    SystemLogger.info('Webhooks', 'N8N webhook configuration saved', { 
      webhookUrl, 
      enabled,
      tested: true,
      timestamp: new Date().toISOString() 
    })
    
    return c.json({
      success: true,
      message: 'N8N webhook yapılandırması başarıyla kaydedildi ve test edildi',
      data: {
        webhookUrl,
        enabled,
        status: 'configured_and_tested'
      }
    })
    
  } catch (error) {
    console.error('N8N webhook setup error:', error)
    return c.json({ error: 'N8N webhook kurulumu hatası' }, 500)
  }
})

// OpenAI API Key Setup
app.post('/api/admin/ai/openai-setup', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { apiKey, model = 'gpt-4', enabled = true } = await c.req.json()
    
    if (!apiKey || !apiKey.startsWith('sk-')) {
      return c.json({ error: 'Geçersiz OpenAI API Key (sk- ile başlamalı)' }, 400)
    }
    
    // API Key test et
    try {
      const testResponse = await fetch('https://api.openai.com/v1/models', {
        headers: {
          'Authorization': `Bearer ${apiKey}`,
          'Content-Type': 'application/json'
        }
      })
      
      if (!testResponse.ok) {
        return c.json({ 
          error: `OpenAI API Key geçersiz: ${testResponse.status} ${testResponse.statusText}` 
        }, 400)
      }
    } catch (testError) {
      return c.json({ 
        error: `OpenAI API bağlantı hatası: ${testError.message}` 
      }, 400)
    }
    
    // Database'e kaydet (güvenlik için sadece son 8 karakteri göster)
    const maskedKey = `sk-...${apiKey.slice(-8)}`
    
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, is_active = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(apiKey, enabled ? 1 : 0, 'openai_api_key').run()
    
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(enabled ? 'true' : 'false', 'openai_enabled').run()
    
    SystemLogger.info('AI', 'OpenAI API Key configured', { 
      maskedKey, 
      model,
      enabled,
      tested: true,
      timestamp: new Date().toISOString() 
    })
    
    return c.json({
      success: true,
      message: 'OpenAI API Key başarıyla kaydedildi ve test edildi',
      data: {
        apiKey: maskedKey,
        model,
        enabled,
        status: 'configured_and_tested'
      }
    })
    
  } catch (error) {
    console.error('OpenAI setup error:', error)
    return c.json({ error: 'OpenAI API kurulumu hatası' }, 500)
  }
})

// Email Service (SendGrid) Setup
app.post('/api/admin/email/sendgrid-setup', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { apiKey, fromEmail, enabled = true } = await c.req.json()
    
    if (!apiKey || !apiKey.startsWith('SG.')) {
      return c.json({ error: 'Geçersiz SendGrid API Key (SG. ile başlamalı)' }, 400)
    }
    
    if (!fromEmail || !fromEmail.includes('@')) {
      return c.json({ error: 'Geçersiz gönderen email adresi' }, 400)
    }
    
    // SendGrid API test et
    try {
      const testResponse = await fetch('https://api.sendgrid.com/v3/user/profile', {
        headers: {
          'Authorization': `Bearer ${apiKey}`,
          'Content-Type': 'application/json'
        }
      })
      
      if (!testResponse.ok) {
        return c.json({ 
          error: `SendGrid API Key geçersiz: ${testResponse.status}` 
        }, 400)
      }
    } catch (testError) {
      return c.json({ 
        error: `SendGrid API bağlantı hatası: ${testError.message}` 
      }, 400)
    }
    
    // Database'e kaydet
    const maskedKey = `SG.${apiKey.substring(3, 10)}...${apiKey.slice(-8)}`
    
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, is_active = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(apiKey, enabled ? 1 : 0, 'sendgrid_api_key').run()
    
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(enabled ? 'true' : 'false', 'sendgrid_enabled').run()
    
    SystemLogger.info('Email', 'SendGrid API Key configured', { 
      maskedKey, 
      fromEmail,
      enabled,
      tested: true,
      timestamp: new Date().toISOString() 
    })
    
    return c.json({
      success: true,
      message: 'SendGrid email servisi başarıyla yapılandırıldı',
      data: {
        apiKey: maskedKey,
        fromEmail,
        enabled,
        status: 'configured_and_tested'
      }
    })
    
  } catch (error) {
    console.error('SendGrid setup error:', error)
    return c.json({ error: 'SendGrid kurulumu hatası' }, 500)
  }
})

// Payment Gateway (PayTR) Setup
app.post('/api/admin/payment/paytr-setup', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { merchantId, merchantKey, merchantSalt, enabled = true } = await c.req.json()
    
    if (!merchantId || !merchantKey || !merchantSalt) {
      return c.json({ error: 'PayTR Merchant ID, Key ve Salt alanları gerekli' }, 400)
    }
    
    // Database'e kaydet
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, is_active = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(merchantId, enabled ? 1 : 0, 'paytr_merchant_id').run()
    
    await DB.prepare(`
      UPDATE tracking_config 
      SET config_value = ?, updated_at = CURRENT_TIMESTAMP 
      WHERE config_key = ?
    `).bind(enabled ? 'true' : 'false', 'paytr_enabled').run()
    
    SystemLogger.info('Payment', 'PayTR configuration saved', { 
      merchantId, 
      enabled,
      timestamp: new Date().toISOString() 
    })
    
    return c.json({
      success: true,
      message: 'PayTR ödeme gateway yapılandırması kaydedildi',
      data: {
        merchantId,
        enabled,
        status: 'configured'
      }
    })
    
  } catch (error) {
    console.error('PayTR setup error:', error)
    return c.json({ error: 'PayTR kurulumu hatası' }, 500)
  }
})

// GA4 Event Tracking API Endpoint
app.post('/api/analytics/track-event', async (c) => {
  const { DB } = c.env
  
  try {
    const { eventType, eventData, userAgent, timestamp } = await c.req.json()
    
    if (!eventType) {
      return c.json({ error: 'Event type gerekli' }, 400)
    }
    
    // Analytics events tablosuna kaydet
    const result = await DB.prepare(`
      INSERT INTO analytics_events (
        event_type, 
        event_data, 
        user_agent, 
        ip_address, 
        timestamp,
        created_at
      ) VALUES (?, ?, ?, ?, ?, ?)
    `).bind(
      eventType,
      JSON.stringify(eventData),
      userAgent || c.req.header('User-Agent') || 'Unknown',
      c.req.header('CF-Connecting-IP') || c.req.header('X-Forwarded-For') || 'Unknown',
      timestamp || new Date().toISOString(),
      new Date().toISOString()
    ).run()
    
    return c.json({
      success: true,
      eventId: result.meta.last_row_id,
      message: 'Event tracked successfully'
    })
    
  } catch (error) {
    console.error('Event tracking error:', error)
    return c.json({ error: 'Event tracking failed' }, 500)
  }
})

// GA4 Analytics Dashboard Data API
app.get('/api/admin/analytics/events', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    // Son 24 saat içindeki event'leri getir
    const { results: recentEvents } = await DB.prepare(`
      SELECT 
        event_type,
        COUNT(*) as event_count,
        DATE(created_at) as event_date
      FROM analytics_events 
      WHERE created_at >= datetime('now', '-24 hours')
      GROUP BY event_type, DATE(created_at)
      ORDER BY created_at DESC
    `).all()
    
    // Event type breakdown
    const { results: eventBreakdown } = await DB.prepare(`
      SELECT 
        event_type,
        COUNT(*) as total_count,
        COUNT(CASE WHEN created_at >= datetime('now', '-1 hour') THEN 1 END) as last_hour,
        COUNT(CASE WHEN created_at >= datetime('now', '-24 hours') THEN 1 END) as last_24h
      FROM analytics_events 
      GROUP BY event_type
      ORDER BY total_count DESC
    `).all()
    
    return c.json({
      success: true,
      data: {
        recentEvents,
        eventBreakdown,
        totalEvents: recentEvents.reduce((sum, event) => sum + event.event_count, 0)
      }
    })
    
  } catch (error) {
    console.error('Analytics events fetch error:', error)
    return c.json({ error: 'Analytics verisi alınamadı' }, 500)
  }
})

// =============================================================================
// Facebook Pixel Enhanced Event Tracking API Endpoints
// =============================================================================

// Facebook Pixel Event Tracking API
app.post('/api/analytics/facebook-pixel-event', async (c) => {
  const { DB } = c.env
  
  try {
    const { 
      pixelEventType, 
      eventData, 
      conversionValue, 
      audienceSegment,
      funnelStage,
      userAgent, 
      timestamp 
    } = await c.req.json()
    
    if (!pixelEventType) {
      return c.json({ error: 'Pixel event type gerekli' }, 400)
    }
    
    // Facebook Pixel events tablosuna kaydet
    const result = await DB.prepare(`
      INSERT INTO facebook_pixel_events (
        pixel_event_type,
        event_data,
        conversion_value,
        currency,
        audience_segment,
        funnel_stage,
        user_agent,
        ip_address,
        page_url,
        timestamp,
        created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      pixelEventType,
      JSON.stringify(eventData || {}),
      conversionValue || 0,
      'TRY',
      audienceSegment || 'general',
      funnelStage || 'awareness',
      userAgent || c.req.header('User-Agent') || 'Unknown',
      c.req.header('CF-Connecting-IP') || c.req.header('X-Forwarded-For') || 'Unknown',
      eventData?.page_url || c.req.header('Referer') || 'Unknown',
      timestamp || new Date().toISOString(),
      new Date().toISOString()
    ).run()
    
    return c.json({
      success: true,
      pixelEventId: result.meta.last_row_id,
      message: 'Facebook Pixel event tracked successfully'
    })
    
  } catch (error) {
    console.error('Facebook Pixel event tracking error:', error)
    return c.json({ error: 'Facebook Pixel event tracking failed' }, 500)
  }
})

// Facebook Pixel Conversion Value Optimization API
app.post('/api/analytics/facebook-conversion-value', async (c) => {
  const { DB } = c.env
  
  try {
    const { 
      conversionType, 
      conversionValue, 
      serviceCategory,
      customerSegment,
      optimizationTarget,
      attributionWindow 
    } = await c.req.json()
    
    if (!conversionType || !conversionValue) {
      return c.json({ error: 'Conversion type ve value gerekli' }, 400)
    }
    
    // Conversion value optimization tablosuna kaydet
    const result = await DB.prepare(`
      INSERT INTO fb_conversion_values (
        conversion_type,
        conversion_value,
        currency,
        service_category,
        customer_segment,
        optimization_target,
        attribution_window,
        conversion_timestamp,
        created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      conversionType,
      conversionValue,
      'TRY',
      serviceCategory || 'unknown',
      customerSegment || 'general',
      optimizationTarget || 'conversions',
      attributionWindow || '7_days',
      new Date().toISOString(),
      new Date().toISOString()
    ).run()
    
    return c.json({
      success: true,
      conversionId: result.meta.last_row_id,
      message: 'Conversion value optimization tracked'
    })
    
  } catch (error) {
    console.error('Conversion value tracking error:', error)
    return c.json({ error: 'Conversion value tracking failed' }, 500)
  }
})

// Facebook Pixel Audience Segmentation API
app.post('/api/analytics/facebook-audience', async (c) => {
  const { DB } = c.env
  
  try {
    const { 
      segmentType, 
      segmentCriteria,
      engagementScore,
      retargetingPriority,
      audienceData
    } = await c.req.json()
    
    if (!segmentType) {
      return c.json({ error: 'Segment type gerekli' }, 400)
    }
    
    // Audience segmentation tablosuna kaydet
    const result = await DB.prepare(`
      INSERT INTO fb_audience_segments (
        segment_type,
        segment_criteria,
        engagement_score,
        retargeting_priority,
        audience_data,
        user_agent,
        ip_address,
        created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      segmentType,
      segmentCriteria || 'behavioral',
      engagementScore || 0,
      retargetingPriority || 'medium',
      JSON.stringify(audienceData || {}),
      c.req.header('User-Agent') || 'Unknown',
      c.req.header('CF-Connecting-IP') || 'Unknown',
      new Date().toISOString()
    ).run()
    
    return c.json({
      success: true,
      audienceId: result.meta.last_row_id,
      message: 'Audience segmentation tracked'
    })
    
  } catch (error) {
    console.error('Audience segmentation error:', error)
    return c.json({ error: 'Audience segmentation failed' }, 500)
  }
})

// Facebook Pixel Analytics Dashboard API
app.get('/api/admin/analytics/facebook-pixel', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    // Facebook Pixel events özet
    const { results: pixelEventsSummary } = await DB.prepare(`
      SELECT 
        pixel_event_type,
        COUNT(*) as event_count,
        SUM(conversion_value) as total_value,
        AVG(conversion_value) as avg_value,
        funnel_stage,
        audience_segment
      FROM facebook_pixel_events 
      WHERE created_at >= datetime('now', '-7 days')
      GROUP BY pixel_event_type, funnel_stage, audience_segment
      ORDER BY event_count DESC
    `).all()
    
    // Conversion value trends
    const { results: conversionTrends } = await DB.prepare(`
      SELECT 
        conversion_type,
        DATE(conversion_timestamp) as conversion_date,
        COUNT(*) as conversion_count,
        SUM(conversion_value) as daily_value,
        AVG(conversion_value) as avg_conversion_value
      FROM fb_conversion_values 
      WHERE conversion_timestamp >= datetime('now', '-30 days')
      GROUP BY conversion_type, DATE(conversion_timestamp)
      ORDER BY conversion_date DESC
    `).all()
    
    // Audience segment analytics
    const { results: audienceAnalytics } = await DB.prepare(`
      SELECT 
        segment_type,
        retargeting_priority,
        COUNT(*) as segment_count,
        AVG(engagement_score) as avg_engagement,
        MAX(engagement_score) as max_engagement
      FROM fb_audience_segments 
      WHERE created_at >= datetime('now', '-7 days')
      GROUP BY segment_type, retargeting_priority
      ORDER BY segment_count DESC
    `).all()
    
    // Funnel progression analytics
    const { results: funnelAnalytics } = await DB.prepare(`
      SELECT 
        funnel_stage,
        COUNT(*) as stage_count,
        SUM(conversion_value) as stage_value
      FROM facebook_pixel_events 
      WHERE created_at >= datetime('now', '-7 days')
        AND funnel_stage IS NOT NULL
      GROUP BY funnel_stage
      ORDER BY 
        CASE funnel_stage
          WHEN 'awareness' THEN 1
          WHEN 'interest' THEN 2
          WHEN 'consideration' THEN 3
          WHEN 'intent' THEN 4
          WHEN 'conversion' THEN 5
          ELSE 6
        END
    `).all()
    
    return c.json({
      success: true,
      data: {
        pixelEventsSummary,
        conversionTrends,
        audienceAnalytics,
        funnelAnalytics,
        totalPixelEvents: pixelEventsSummary.reduce((sum, event) => sum + event.event_count, 0),
        totalConversionValue: conversionTrends.reduce((sum, conv) => sum + (conv.daily_value || 0), 0)
      }
    })
    
  } catch (error) {
    console.error('Facebook Pixel analytics fetch error:', error)
    return c.json({ error: 'Facebook Pixel analytics verisi alınamadı' }, 500)
  }
})

// Facebook Pixel Configuration Management API
app.post('/api/admin/facebook-pixel/config', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { 
      pixelId, 
      accessToken, 
      conversionApiEnabled,
      customEventMappings,
      audienceSettings,
      optimizationGoals 
    } = await c.req.json()
    
    if (!pixelId) {
      return c.json({ error: 'Facebook Pixel ID gerekli' }, 400)
    }
    
    // Facebook Pixel configuration kaydet
    const configs = [
      { key: 'facebook_pixel_id', value: pixelId, category: 'facebook' },
      { key: 'facebook_pixel_enabled', value: 'true', category: 'facebook' },
      { key: 'facebook_access_token', value: accessToken || '', category: 'facebook', is_sensitive: true },
      { key: 'facebook_conversion_api_enabled', value: conversionApiEnabled ? 'true' : 'false', category: 'facebook' },
      { key: 'facebook_custom_event_mappings', value: JSON.stringify(customEventMappings || {}), category: 'facebook' },
      { key: 'facebook_audience_settings', value: JSON.stringify(audienceSettings || {}), category: 'facebook' },
      { key: 'facebook_optimization_goals', value: JSON.stringify(optimizationGoals || {}), category: 'facebook' }
    ]
    
    for (const config of configs) {
      await DB.prepare(`
        INSERT OR REPLACE INTO tracking_config (
          config_key, config_value, config_category, is_active, is_sensitive, updated_at
        ) VALUES (?, ?, ?, ?, ?, ?)
      `).bind(
        config.key,
        config.value,
        config.category,
        1,
        config.is_sensitive ? 1 : 0,
        new Date().toISOString()
      ).run()
    }
    
    return c.json({
      success: true,
      message: 'Facebook Pixel configuration saved successfully',
      pixelId: pixelId
    })
    
  } catch (error) {
    console.error('Facebook Pixel config error:', error)
    return c.json({ error: 'Facebook Pixel configuration failed' }, 500)
  }
})

// =============================================================================
// Google Tag Manager Enhanced Configuration API Endpoints
// =============================================================================

// GTM Container Configuration API
app.post('/api/admin/gtm/config', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { 
      containerId, 
      containerName,
      enabled,
      tagSettings,
      triggerSettings,
      variableSettings 
    } = await c.req.json()
    
    if (!containerId) {
      return c.json({ error: 'GTM Container ID gerekli' }, 400)
    }
    
    if (!containerId.startsWith('GTM-')) {
      return c.json({ error: 'GTM Container ID GTM- ile başlamalı' }, 400)
    }
    
    // GTM configuration kaydet
    const configs = [
      { key: 'gtm_container_id', value: containerId, category: 'gtm' },
      { key: 'gtm_container_name', value: containerName || 'GARANTOR360 Container', category: 'gtm' },
      { key: 'gtm_enabled', value: enabled ? 'true' : 'false', category: 'gtm' },
      { key: 'gtm_tag_settings', value: JSON.stringify(tagSettings || {}), category: 'gtm' },
      { key: 'gtm_trigger_settings', value: JSON.stringify(triggerSettings || {}), category: 'gtm' },
      { key: 'gtm_variable_settings', value: JSON.stringify(variableSettings || {}), category: 'gtm' },
      { key: 'gtm_datalayer_config', value: JSON.stringify({
        enhanced_ecommerce: true,
        custom_events: true,
        user_journey_tracking: true,
        engagement_tracking: true
      }), category: 'gtm' }
    ]
    
    for (const config of configs) {
      await DB.prepare(`
        INSERT OR REPLACE INTO tracking_config (
          config_key, config_value, config_category, is_active, updated_at
        ) VALUES (?, ?, ?, ?, ?)
      `).bind(
        config.key,
        config.value,
        config.category,
        1,
        new Date().toISOString()
      ).run()
    }
    
    return c.json({
      success: true,
      message: 'GTM Container configuration saved successfully',
      containerId: containerId,
      containerName: containerName
    })
    
  } catch (error) {
    console.error('GTM config error:', error)
    return c.json({ error: 'GTM configuration failed' }, 500)
  }
})

// GTM Event Tracking API
app.post('/api/analytics/gtm-event', async (c) => {
  const { DB } = c.env
  
  try {
    const { 
      eventName, 
      eventData,
      dataLayerPush,
      gtmEventId,
      userAgent, 
      timestamp 
    } = await c.req.json()
    
    if (!eventName) {
      return c.json({ error: 'GTM event name gerekli' }, 400)
    }
    
    // GTM events tablosuna kaydet
    const result = await DB.prepare(`
      INSERT INTO gtm_events (
        event_name,
        event_data,
        datalayer_push,
        gtm_event_id,
        user_agent,
        ip_address,
        page_url,
        timestamp,
        created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      eventName,
      JSON.stringify(eventData || {}),
      JSON.stringify(dataLayerPush || {}),
      gtmEventId || 'gtm_' + Date.now(),
      userAgent || c.req.header('User-Agent') || 'Unknown',
      c.req.header('CF-Connecting-IP') || c.req.header('X-Forwarded-For') || 'Unknown',
      eventData?.page_url || c.req.header('Referer') || 'Unknown',
      timestamp || new Date().toISOString(),
      new Date().toISOString()
    ).run()
    
    return c.json({
      success: true,
      gtmEventId: result.meta.last_row_id,
      message: 'GTM event tracked successfully'
    })
    
  } catch (error) {
    console.error('GTM event tracking error:', error)
    return c.json({ error: 'GTM event tracking failed' }, 500)
  }
})

// GTM Analytics Dashboard API
app.get('/api/admin/analytics/gtm', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    // GTM events özet
    const { results: gtmEventsSummary } = await DB.prepare(`
      SELECT 
        event_name,
        COUNT(*) as event_count,
        DATE(created_at) as event_date,
        COUNT(DISTINCT gtm_event_id) as unique_events
      FROM gtm_events 
      WHERE created_at >= datetime('now', '-7 days')
      GROUP BY event_name, DATE(created_at)
      ORDER BY event_count DESC
    `).all()
    
    // Event category breakdown
    const { results: eventCategories } = await DB.prepare(`
      SELECT 
        CASE 
          WHEN event_name LIKE '%service%' THEN 'Service Events'
          WHEN event_name LIKE '%contact%' THEN 'Contact Events'
          WHEN event_name LIKE '%engagement%' THEN 'Engagement Events'
          WHEN event_name LIKE '%journey%' THEN 'User Journey Events'
          WHEN event_name LIKE '%conversion%' THEN 'Conversion Events'
          ELSE 'Other Events'
        END as category,
        COUNT(*) as category_count,
        COUNT(DISTINCT gtm_event_id) as unique_category_events
      FROM gtm_events 
      WHERE created_at >= datetime('now', '-7 days')
      GROUP BY category
      ORDER BY category_count DESC
    `).all()
    
    // User journey progression analytics
    const { results: journeyAnalytics } = await DB.prepare(`
      SELECT 
        JSON_EXTRACT(event_data, '$.journey_stage') as journey_stage,
        COUNT(*) as stage_count,
        AVG(JSON_EXTRACT(event_data, '$.progress_percentage')) as avg_progress,
        COUNT(DISTINCT ip_address) as unique_users
      FROM gtm_events 
      WHERE event_name = 'user_journey_progress'
        AND created_at >= datetime('now', '-7 days')
        AND JSON_EXTRACT(event_data, '$.journey_stage') IS NOT NULL
      GROUP BY journey_stage
      ORDER BY 
        CASE journey_stage
          WHEN 'awareness' THEN 1
          WHEN 'interest' THEN 2
          WHEN 'consideration' THEN 3
          WHEN 'intent' THEN 4
          WHEN 'conversion' THEN 5
          ELSE 6
        END
    `).all()
    
    // Top performing events
    const { results: topEvents } = await DB.prepare(`
      SELECT 
        event_name,
        COUNT(*) as total_events,
        COUNT(DISTINCT ip_address) as unique_users,
        AVG(JSON_EXTRACT(event_data, '$.engagement_score')) as avg_engagement_score
      FROM gtm_events 
      WHERE created_at >= datetime('now', '-7 days')
      GROUP BY event_name
      ORDER BY total_events DESC
      LIMIT 10
    `).all()
    
    return c.json({
      success: true,
      data: {
        gtmEventsSummary,
        eventCategories,
        journeyAnalytics,
        topEvents,
        totalGTMEvents: gtmEventsSummary.reduce((sum, event) => sum + event.event_count, 0),
        uniqueUsers: new Set(gtmEventsSummary.map(event => event.event_date)).size
      }
    })
    
  } catch (error) {
    console.error('GTM analytics fetch error:', error)
    return c.json({ error: 'GTM analytics verisi alınamadı' }, 500)
  }
})

// GTM Tag Management API
app.post('/api/admin/gtm/tag-management', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { 
      tagName,
      tagType,
      tagConfig,
      triggers,
      variables,
      enabled 
    } = await c.req.json()
    
    if (!tagName || !tagType) {
      return c.json({ error: 'Tag name ve type gerekli' }, 400)
    }
    
    // GTM tag configuration kaydet
    const result = await DB.prepare(`
      INSERT INTO gtm_tags (
        tag_name,
        tag_type,
        tag_config,
        triggers,
        variables,
        is_enabled,
        created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?)
    `).bind(
      tagName,
      tagType,
      JSON.stringify(tagConfig || {}),
      JSON.stringify(triggers || []),
      JSON.stringify(variables || {}),
      enabled ? 1 : 0,
      new Date().toISOString()
    ).run()
    
    return c.json({
      success: true,
      tagId: result.meta.last_row_id,
      message: 'GTM tag configuration saved successfully'
    })
    
  } catch (error) {
    console.error('GTM tag management error:', error)
    return c.json({ error: 'GTM tag management failed' }, 500)
  }
})

// =============================================================================
// KVKV Compliant Privacy & Cookie Management API Endpoints
// =============================================================================

// KVKV Cookie Consent Logging API
app.post('/api/privacy/kvkv-consent-log', async (c) => {
  const { DB } = c.env
  
  try {
    const { consentData, pageUrl, timestamp } = await c.req.json()
    
    if (!consentData || !consentData.preferences) {
      return c.json({ error: 'Consent data gerekli' }, 400)
    }
    
    // Log consent to database for KVKV compliance
    const result = await DB.prepare(`
      INSERT INTO kvkv_consent_logs (
        consent_version,
        consent_timestamp,
        preferences,
        user_agent,
        ip_address,
        page_url,
        expires_at,
        created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      consentData.version || '1.0',
      consentData.timestamp || new Date().toISOString(),
      JSON.stringify(consentData.preferences),
      consentData.userAgent || c.req.header('User-Agent') || 'Unknown',
      c.req.header('CF-Connecting-IP') || c.req.header('X-Forwarded-For') || 'Unknown',
      pageUrl || c.req.header('Referer') || 'Unknown',
      consentData.expires || new Date(Date.now() + (365 * 24 * 60 * 60 * 1000)).toISOString(),
      new Date().toISOString()
    ).run()
    
    return c.json({
      success: true,
      logId: result.meta.last_row_id,
      message: 'KVKV consent logged successfully'
    })
    
  } catch (error) {
    console.error('KVKV consent logging error:', error)
    return c.json({ error: 'KVKV consent logging failed' }, 500)
  }
})

// KVKV Data Subject Rights API (Veri Sahibi Hakları)
app.post('/api/privacy/data-subject-request', async (c) => {
  const { DB } = c.env
  
  try {
    const { 
      requestType, 
      firstName,
      lastName,
      email,
      phoneNumber,
      identityNumber,
      requestDetails,
      documentUrls 
    } = await c.req.json()
    
    if (!requestType || !firstName || !lastName || !email) {
      return c.json({ error: 'Zorunlu alanlar eksik' }, 400)
    }
    
    const validRequestTypes = [
      'data_access',        // Veri erişim talebi
      'data_correction',    // Veri düzeltme talebi
      'data_deletion',      // Veri silme talebi
      'data_portability',   // Veri taşınabilirlik
      'processing_restriction', // İşleme sınırlama
      'objection_to_processing' // İşlemeye itiraz
    ]
    
    if (!validRequestTypes.includes(requestType)) {
      return c.json({ error: 'Geçersiz talep türü' }, 400)
    }
    
    // Generate unique request ID\n    const requestId = 'DSR-' + Date.now() + '-' + Math.random().toString(36).substring(7).toUpperCase()
    
    // Log data subject request
    const result = await DB.prepare(`
      INSERT INTO kvkv_data_subject_requests (
        request_id,
        request_type,
        first_name,
        last_name,
        email,
        phone_number,
        identity_number,
        request_details,
        document_urls,
        status,
        ip_address,
        user_agent,
        created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      requestId,
      requestType,
      firstName,
      lastName,
      email,
      phoneNumber || null,
      identityNumber || null,
      requestDetails || '',
      JSON.stringify(documentUrls || []),
      'pending',
      c.req.header('CF-Connecting-IP') || 'Unknown',
      c.req.header('User-Agent') || 'Unknown',
      new Date().toISOString()
    ).run()
    
    // Send confirmation email (would be implemented with SendGrid)
    // await sendDataSubjectRequestConfirmation(email, requestId, requestType)
    
    return c.json({
      success: true,
      requestId: requestId,
      message: 'Veri sahibi talebi başarıyla kaydedildi',
      estimatedResponseTime: '30 gün içinde'
    })
    
  } catch (error) {
    console.error('Data subject request error:', error)
    return c.json({ error: 'Veri sahibi talebi işlenemedi' }, 500)
  }
})

// KVKV Privacy Policy Configuration API
app.post('/api/admin/privacy/kvkv-config', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const {
      companyName,
      contactEmail,
      dataControllerDetails,
      cookieRetentionDays,
      consentBannerSettings,
      privacyPolicyUrl,
      cookiePolicyUrl
    } = await c.req.json()
    
    if (!companyName || !contactEmail) {
      return c.json({ error: 'Şirket adı ve iletişim e-postası gerekli' }, 400)
    }
    
    // Save KVKV configuration
    const configs = [
      { key: 'kvkv_company_name', value: companyName, category: 'privacy' },
      { key: 'kvkv_contact_email', value: contactEmail, category: 'privacy' },
      { key: 'kvkv_data_controller_details', value: JSON.stringify(dataControllerDetails || {}), category: 'privacy' },
      { key: 'kvkv_cookie_retention_days', value: (cookieRetentionDays || 365).toString(), category: 'privacy' },
      { key: 'kvkv_consent_banner_settings', value: JSON.stringify(consentBannerSettings || {}), category: 'privacy' },
      { key: 'kvkv_privacy_policy_url', value: privacyPolicyUrl || '/kvkv-politikasi', category: 'privacy' },
      { key: 'kvkv_cookie_policy_url', value: cookiePolicyUrl || '/cerez-politikasi', category: 'privacy' }
    ]
    
    for (const config of configs) {
      await DB.prepare(`
        INSERT OR REPLACE INTO tracking_config (
          config_key, config_value, config_category, is_active, updated_at
        ) VALUES (?, ?, ?, ?, ?)
      `).bind(
        config.key,
        config.value,
        config.category,
        1,
        new Date().toISOString()
      ).run()
    }
    
    return c.json({
      success: true,
      message: 'KVKV configuration saved successfully'
    })
    
  } catch (error) {
    console.error('KVKV config error:', error)
    return c.json({ error: 'KVKV configuration failed' }, 500)
  }
})

// KVKV Analytics Dashboard API
app.get('/api/admin/analytics/kvkv', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    // Consent statistics
    const { results: consentStats } = await DB.prepare(`
      SELECT 
        DATE(created_at) as consent_date,
        COUNT(*) as total_consents,
        COUNT(CASE WHEN JSON_EXTRACT(preferences, '$.analytics') = 1 THEN 1 END) as analytics_accepted,
        COUNT(CASE WHEN JSON_EXTRACT(preferences, '$.marketing') = 1 THEN 1 END) as marketing_accepted,
        COUNT(CASE WHEN JSON_EXTRACT(preferences, '$.functional') = 1 THEN 1 END) as functional_accepted
      FROM kvkv_consent_logs 
      WHERE created_at >= datetime('now', '-30 days')
      GROUP BY DATE(created_at)
      ORDER BY consent_date DESC
    `).all()
    
    // Data subject requests statistics
    const { results: dsrStats } = await DB.prepare(`
      SELECT 
        request_type,
        status,
        COUNT(*) as request_count,
        DATE(created_at) as request_date
      FROM kvkv_data_subject_requests 
      WHERE created_at >= datetime('now', '-90 days')
      GROUP BY request_type, status, DATE(created_at)
      ORDER BY request_date DESC
    `).all()
    
    // Overall consent preferences
    const { results: overallConsent } = await DB.prepare(`
      SELECT 
        COUNT(*) as total_users,
        COUNT(CASE WHEN JSON_EXTRACT(preferences, '$.analytics') = 1 THEN 1 END) as analytics_percentage,
        COUNT(CASE WHEN JSON_EXTRACT(preferences, '$.marketing') = 1 THEN 1 END) as marketing_percentage,
        COUNT(CASE WHEN JSON_EXTRACT(preferences, '$.functional') = 1 THEN 1 END) as functional_percentage
      FROM kvkv_consent_logs 
      WHERE created_at >= datetime('now', '-30 days')
    `).all()
    
    return c.json({
      success: true,
      data: {
        consentStats,
        dsrStats,
        overallConsent: overallConsent[0] || {},
        totalConsents: consentStats.reduce((sum, stat) => sum + stat.total_consents, 0),
        totalDSRRequests: dsrStats.reduce((sum, stat) => sum + stat.request_count, 0)
      }
    })
    
  } catch (error) {
    console.error('KVKV analytics fetch error:', error)
    return c.json({ error: 'KVKV analytics verisi alınamadı' }, 500)
  }
})

// SEO schema markup setup
app.post('/api/admin/seo/schema-setup', requireAdminAuth(), async (c) => {
  try {
    const { businessType, services } = await c.req.json()
    
    // Generate Schema.org LocalBusiness markup
    const schemaMarkup = {
      "@context": "https://schema.org",
      "@type": "LocalBusiness",
      "name": "Garantor360",
      "description": "Türkiye'nin önde gelen TV tamiri ve beyaz eşya servis platformu",
      "url": "https://garantor360.com",
      "telephone": "+90-500-123-45-67",
      "address": {
        "@type": "PostalAddress",
        "streetAddress": "İstanbul Merkez",
        "addressLocality": "İstanbul",
        "addressCountry": "TR"
      },
      "geo": {
        "@type": "GeoCoordinates",
        "latitude": "41.0082",
        "longitude": "28.9784"
      },
      "serviceArea": {
        "@type": "GeoCircle",
        "geoMidpoint": {
          "@type": "GeoCoordinates",
          "latitude": "41.0082",
          "longitude": "28.9784"
        },
        "geoRadius": "50000"
      },
      "hasOfferCatalog": {
        "@type": "OfferCatalog",
        "name": "Servis Hizmetleri",
        "itemListElement": services.map(service => ({
          "@type": "Offer",
          "itemOffered": {
            "@type": "Service",
            "name": service
          }
        }))
      },
      "aggregateRating": {
        "@type": "AggregateRating",
        "ratingValue": "4.8",
        "reviewCount": "1247"
      }
    }
    
    SystemLogger.info('SEO', 'Schema markup generated', { businessType, services })
    
    return c.json({
      success: true,
      message: 'Schema.org markup oluşturuldu',
      schemaMarkup
    })
    
  } catch (error) {
    console.error('Schema setup error:', error)
    return c.json({ error: 'Schema kurulumu başarısız' }, 500)
  }
})

// Cookie consent setup
app.post('/api/admin/privacy/cookie-setup', requireAdminAuth(), async (c) => {
  try {
    const { gdprCompliant, turkishLaw, customization } = await c.req.json()
    
    const cookieConfig = {
      gdprCompliant,
      turkishLaw,
      customization,
      categories: [
        { name: 'necessary', required: true, description: 'Sitenin çalışması için gerekli çerezler' },
        { name: 'analytics', required: false, description: 'Site kullanım analitiği için çerezler' },
        { name: 'marketing', required: false, description: 'Pazarlama ve reklam çerezleri' }
      ]
    }
    
    SystemLogger.info('Privacy', 'Cookie consent configured', cookieConfig)
    
    return c.json({
      success: true,
      message: 'Cookie consent sistemi yapılandırıldı',
      config: cookieConfig
    })
    
  } catch (error) {
    console.error('Cookie setup error:', error)
    return c.json({ error: 'Cookie consent kurulumu başarısız' }, 500)
  }
})

// Real-time analytics data (SSE endpoint for live updates)
app.get('/api/admin/analytics/realtime', requireAdminAuth(), async (c) => {
  try {
    // Mock real-time data - in production this would connect to GA4 Real-Time API
    const realtimeData = {
      activeUsers: Math.floor(Math.random() * 50) + 10,
      currentPageViews: Math.floor(Math.random() * 20) + 5,
      topActivePages: [
        { path: '/', activeUsers: Math.floor(Math.random() * 15) + 3 },
        { path: '/hizmetler/tv-tamiri', activeUsers: Math.floor(Math.random() * 10) + 2 },
        { path: '/bayi', activeUsers: Math.floor(Math.random() * 8) + 1 }
      ],
      conversionEvents: [
        { event: 'form_submit', count: Math.floor(Math.random() * 5) },
        { event: 'contact_click', count: Math.floor(Math.random() * 8) },
        { event: 'service_request', count: Math.floor(Math.random() * 3) }
      ],
      timestamp: new Date().toISOString()
    }
    
    return c.json({
      success: true,
      data: realtimeData
    })
    
  } catch (error) {
    console.error('Real-time analytics error:', error)
    return c.json({ error: 'Gerçek zamanlı veri alınamadı' }, 500)
  }
})

// Form submission analytics tracking
app.post('/api/analytics/form-submit', async (c) => {
  const { DB } = c.env
  
  try {
    const formData = await c.req.json()
    const timestamp = new Date().toISOString()
    
    // Store form analytics data in database
    await DB.prepare(`
      INSERT INTO analytics_events (
        event_type, event_category, event_label, event_data, 
        page_location, timestamp, user_ip, user_agent
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      'form_submit',
      formData.event_category || 'form_interaction',
      formData.event_label || formData.form_type,
      JSON.stringify(formData),
      formData.page_location,
      timestamp,
      c.req.header('cf-connecting-ip') || 'unknown',
      c.req.header('user-agent') || 'unknown'
    ).run()
    
    SystemLogger.info('Analytics', 'Form submission tracked', {
      form_type: formData.form_type,
      timestamp,
      ip: c.req.header('cf-connecting-ip')
    })
    
    return c.json({
      success: true,
      message: 'Form submission tracked successfully'
    })
    
  } catch (error) {
    console.error('Form analytics error:', error)
    return c.json({
      success: false,
      error: 'Analytics tracking failed'
    }, 500)
  }
})

// System health check endpoint
app.get('/health', async (c) => {
  try {
    const { DB } = c.env
    
    // Database connectivity check
    const dbCheck = await PerformanceMonitor.monitorDatabaseQuery('healthCheck', async () => {
      return await DB.prepare('SELECT 1 as test').first()
    })
    
    // Performance metrics
    const healthData = await PerformanceMonitor.healthCheck()
    
    const response = {
      status: 'healthy',
      timestamp: new Date().toISOString(),
      version: '1.0.0',
      database: dbCheck ? 'connected' : 'disconnected',
      performance: healthData,
      uptime: 'workers_env'
    }
    
    SystemLogger.info('Health', 'Health check completed', response)
    return c.json(response)
    
  } catch (error) {
    SystemLogger.error('Health', 'Health check failed', { error: error.message })
    return c.json({
      status: 'unhealthy',
      timestamp: new Date().toISOString(),
      error: error.message
    }, 503)
  }
})

// Performance metrics endpoint (admin only)
app.get('/api/admin/metrics', requireAdminAuth(), async (c) => {
  try {
    const since = parseInt(c.req.query('since') || '0') || (Date.now() - 3600000) // Last hour
    
    const metrics = {
      summary: PerformanceMonitor.getSummary(since),
      recent: PerformanceMonitor.getMetrics(undefined, since),
      health: await PerformanceMonitor.healthCheck()
    }
    
    return c.json(createSuccessResponse(metrics, 'Performans metrikleri alindi'))
    
  } catch (error) {
    SystemLogger.error('Metrics', 'Failed to get metrics', { error: error.message })
    throw new BusinessError('Metrikler alinamadi')
  }
})

// Clean up old metrics (internal endpoint)
app.post('/api/admin/cleanup', requireAdminAuth(), async (c) => {
  try {
    PerformanceMonitor.cleanup()
    SystemLogger.info('Cleanup', 'Metrics cleanup triggered')
    
    return c.json(createSuccessResponse({}, 'Temizlik islemi tamamlandi'))
    
  } catch (error) {
    SystemLogger.error('Cleanup', 'Cleanup failed', { error: error.message })
    throw new BusinessError('Temizlik islemi basarisiz')
  }
})

// =============================================================================
// Frontend Routes
// =============================================================================

// Ana sayfa - Removed (Replaced by Dealer Vitrin at end of file)

// Admin paneli
app.get('/admin', (c) => {
  return c.html(`
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Admin Paneli - TV Servis Yönetim Sistemi</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-100">
        <!-- Login Screen -->
        <div id="admin-login" class="hidden">
            <div class="min-h-screen flex items-center justify-center">
                <div class="bg-white p-8 rounded-lg shadow-lg w-full max-w-md">
                    <div class="text-center mb-6">
                        <i class="fas fa-user-shield text-4xl text-blue-600 mb-4"></i>
                        <h1 class="text-2xl font-bold text-gray-800">Admin Paneli</h1>
                        <p class="text-gray-600">TV Servis Yonetim Sistemi</p>
                    </div>
                    
                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Kullanici Adi</label>
                            <input type="text" id="username" 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                   placeholder="Kullanici adinizi girin">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Sifre</label>
                            <input type="password" id="password"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                   placeholder="Sifrenizi girin">
                        </div>
                        
                        <button onclick="adminLogin()" 
                                class="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded-lg transition duration-200">
                            <i class="fas fa-sign-in-alt mr-2"></i>
                            Giris Yap
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Admin Dashboard -->
        <div id="admin-dashboard" class="hidden">
            <!-- Header -->
            <header class="bg-white shadow">
                <div class="flex justify-between items-center px-6 py-4">
                    <div class="flex items-center gap-3">
                        <i class="fas fa-user-shield text-2xl text-blue-600"></i>
                        <h1 class="text-xl font-semibold text-gray-800">Admin Paneli</h1>
                    </div>
                    <div class="flex items-center gap-4">
                        <div class="text-right">
                            <p class="text-sm text-gray-600">Hos geldiniz,</p>
                            <p class="font-semibold text-gray-800" id="admin-name">Admin</p>
                        </div>
                        <button onclick="adminLogout()" 
                                class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg">
                            <i class="fas fa-sign-out-alt mr-2"></i>
                            Cikis
                        </button>
                    </div>
                </div>
            </header>

            <!-- Main Layout -->
            <div class="flex">
                <!-- Sidebar -->
                <div class="w-64 bg-blue-600 min-h-screen">
                    <nav class="p-4">
                        <ul class="space-y-2">
                            <li>
                                <button onclick="showSection('dashboard')" 
                                        class="nav-item w-full text-left px-4 py-3 text-white rounded-lg hover:bg-blue-700 flex items-center gap-3 bg-blue-700">
                                    <i class="fas fa-tachometer-alt"></i>
                                    Ana Sayfa
                                </button>
                            </li>
                            <li>
                                <button onclick="showSection('system-monitoring')" 
                                        class="nav-item w-full text-left px-4 py-3 text-white rounded-lg hover:bg-blue-700 flex items-center gap-3">
                                    <i class="fas fa-chart-line"></i>
                                    Sistem Izleme
                                </button>
                            </li>
                            <li>
                                <button onclick="showSection('dealers')" 
                                        class="nav-item w-full text-left px-4 py-3 text-white rounded-lg hover:bg-blue-700 flex items-center gap-3">
                                    <i class="fas fa-users"></i>
                                    Bayiler
                                </button>
                            </li>
                            <li>
                                <button onclick="showSection('digital-tracking')" 
                                        class="nav-item w-full text-left px-4 py-3 text-white rounded-lg hover:bg-blue-700 flex items-center gap-3">
                                    <i class="fas fa-chart-bar"></i>
                                    Digital Tracking
                                </button>
                            </li>
                            <li>
                                <a href="/admin/realtime-analytics" 
                                   class="nav-item w-full text-left px-4 py-3 text-white rounded-lg hover:bg-blue-700 flex items-center gap-3 block">
                                    <i class="fas fa-chart-line"></i>
                                    Real-time Analytics
                                </a>
                            </li>
                            <li>
                                <a href="/admin/kvkv-dashboard" 
                                   class="nav-item w-full text-left px-4 py-3 text-white rounded-lg hover:bg-blue-700 flex items-center gap-3 block">
                                    <i class="fas fa-cookie-bite"></i>
                                    KVKV Cookie Consent
                                </a>
                            </li>
                            <li>
                                <button onclick="showSection('payments')" 
                                        class="nav-item w-full text-left px-4 py-3 text-white rounded-lg hover:bg-blue-700 flex items-center gap-3">
                                    <i class="fas fa-credit-card"></i>
                                    Odeme Gecmisi
                                </button>
                            </li>
                        </ul>
                    </nav>
                </div>

                <!-- Main Content -->
                <div class="flex-1 p-6">
                    <!-- Dashboard Section -->
                    <div id="admin-dashboard-section" class="admin-section">
                        <h2 class="text-3xl font-bold mb-6 text-gray-800">
                            <i class="fas fa-tachometer-alt mr-2"></i>
                            Yonetim Paneli
                        </h2>
                        
                        <!-- Stats Cards -->
                        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">Bekleyen Odemeler</p>
                                        <p class="text-3xl font-bold text-yellow-600" id="pending-payments-count">-</p>
                                    </div>
                                    <i class="fas fa-hourglass-half text-yellow-500 text-2xl"></i>
                                </div>
                            </div>
                            
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">Toplam Kredi</p>
                                        <p class="text-3xl font-bold text-green-600" id="total-credits">-</p>
                                    </div>
                                    <i class="fas fa-coins text-green-500 text-2xl"></i>
                                </div>
                            </div>
                            
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">Aktif Bayiler</p>
                                        <p class="text-3xl font-bold text-blue-600" id="active-dealers">-</p>
                                    </div>
                                    <i class="fas fa-users text-blue-500 text-2xl"></i>
                                </div>
                            </div>
                            
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">Bu Ay Odemeler</p>
                                        <p class="text-3xl font-bold text-purple-600" id="monthly-payments">-</p>
                                    </div>
                                    <i class="fas fa-calendar text-purple-500 text-2xl"></i>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Pending Payments -->
                        <div class="bg-white rounded-lg shadow">
                            <div class="px-6 py-4 border-b border-gray-200">
                                <h3 class="text-lg font-semibold text-gray-800">
                                    <i class="fas fa-clock mr-2"></i>
                                    Onay Bekleyen Transferler
                                </h3>
                            </div>
                            <div class="p-6">
                                <div id="pending-payments-list" class="space-y-4">
                                    Veriler yukleniyor...
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- System Monitoring Section -->
                    <div id="admin-system-monitoring-section" class="admin-section hidden">
                        <h2 class="text-3xl font-bold mb-6 text-gray-800">
                            <i class="fas fa-chart-line mr-2"></i>
                            Sistem Izleme
                        </h2>
                        
                        <!-- System Health Cards -->
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">Sistem Durumu</p>
                                        <p class="text-lg font-bold text-green-600">Cevrimici</p>
                                    </div>
                                    <div class="w-4 h-4 bg-green-500 rounded-full animate-pulse"></div>
                                </div>
                            </div>
                            
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">Sunucu Yuku</p>
                                        <p class="text-lg font-bold text-blue-600" id="server-load">%12</p>
                                    </div>
                                    <i class="fas fa-server text-blue-500 text-xl"></i>
                                </div>
                            </div>
                            
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">Veritabani</p>
                                        <p class="text-lg font-bold text-green-600">Aktif</p>
                                    </div>
                                    <i class="fas fa-database text-green-500 text-xl"></i>
                                </div>
                            </div>
                        </div>

                        <!-- Real-time Metrics -->
                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                            <div class="bg-white rounded-lg shadow p-6">
                                <h3 class="text-lg font-semibold text-gray-800 mb-4">
                                    <i class="fas fa-chart-area mr-2"></i>
                                    Gunluk Is Dagilimi
                                </h3>
                                <canvas id="daily-jobs-chart" width="400" height="200"></canvas>
                            </div>
                            
                            <div class="bg-white rounded-lg shadow p-6">
                                <h3 class="text-lg font-semibold text-gray-800 mb-4">
                                    <i class="fas fa-money-bill-wave mr-2"></i>
                                    Odeme Durumu
                                </h3>
                                <canvas id="payment-status-chart" width="400" height="200"></canvas>
                            </div>
                        </div>

                        <!-- System Logs -->
                        <div class="bg-gray-900 rounded-lg p-6">
                            <h3 class="text-lg font-semibold text-white mb-4">
                                <i class="fas fa-terminal mr-2"></i>
                                Sistem Loglari (Canli)
                            </h3>
                            <div id="system-logs" class="bg-black rounded p-4 h-64 overflow-y-auto text-green-400 font-mono text-sm">
                                <!-- Logs will be populated by JavaScript -->
                            </div>
                        </div>
                    </div>

                    <!-- Dealers Management Section -->
                    <div id="admin-dealers-section" class="admin-section hidden">
                        <h2 class="text-3xl font-bold mb-6 text-gray-800">
                            <i class="fas fa-users mr-2"></i>
                            Bayi Yonetimi
                        </h2>
                        
                        <!-- Dealer Stats -->
                        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">Toplam Bayi</p>
                                        <p class="text-3xl font-bold text-blue-600" id="total-dealers">-</p>
                                    </div>
                                    <i class="fas fa-users text-blue-500 text-2xl"></i>
                                </div>
                            </div>
                            
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">Aktif Bayiler</p>
                                        <p class="text-3xl font-bold text-green-600" id="active-dealers-count">-</p>
                                    </div>
                                    <i class="fas fa-user-check text-green-500 text-2xl"></i>
                                </div>
                            </div>
                            
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">Bu Ay Yeni</p>
                                        <p class="text-3xl font-bold text-purple-600" id="new-dealers">-</p>
                                    </div>
                                    <i class="fas fa-user-plus text-purple-500 text-2xl"></i>
                                </div>
                            </div>
                            
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">En Performansli</p>
                                        <p class="text-lg font-bold text-orange-600" id="top-dealer">-</p>
                                    </div>
                                    <i class="fas fa-trophy text-orange-500 text-2xl"></i>
                                </div>
                            </div>
                        </div>

                        <!-- Dealer List -->
                        <div class="bg-white rounded-lg shadow">
                            <div class="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
                                <h3 class="text-lg font-semibold text-gray-800">Bayi Listesi</h3>
                                <div class="flex gap-2">
                                    <input 
                                        type="text" 
                                        id="dealer-search" 
                                        placeholder="Bayi ara..."
                                        class="px-3 py-1 border border-gray-300 rounded text-sm"
                                    >
                                    <button 
                                        onclick="refreshDealers()" 
                                        class="bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700"
                                    >
                                        <i class="fas fa-refresh mr-1"></i>Yenile
                                    </button>
                                </div>
                            </div>
                            <div class="p-6">
                                <div class="overflow-x-auto">
                                    <table class="min-w-full table-auto">
                                        <thead>
                                            <tr class="bg-gray-50">
                                                <th class="px-4 py-2 text-left text-sm font-medium text-gray-700">Firma</th>
                                                <th class="px-4 py-2 text-left text-sm font-medium text-gray-700">Email</th>
                                                <th class="px-4 py-2 text-left text-sm font-medium text-gray-700">Sehir</th>
                                                <th class="px-4 py-2 text-left text-sm font-medium text-gray-700">Durum</th>
                                                <th class="px-4 py-2 text-left text-sm font-medium text-gray-700">Kredi</th>
                                                <th class="px-4 py-2 text-left text-sm font-medium text-gray-700">Islemler</th>
                                            </tr>
                                        </thead>
                                        <tbody id="dealers-table-body">
                                            <!-- Dealers will be populated by JavaScript -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Digital Tracking Analytics Section -->
                    <div id="admin-digital-tracking-section" class="admin-section hidden">
                        <h2 class="text-3xl font-bold mb-6 text-gray-800">
                            <i class="fas fa-chart-bar mr-2"></i>
                            Digital Tracking & Analytics
                        </h2>
                        
                        <!-- Analytics Overview Stats -->
                        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">Günlük Ziyaretçi</p>
                                        <p class="text-3xl font-bold text-blue-600" id="daily-visitors">1,247</p>
                                    </div>
                                    <i class="fas fa-eye text-blue-500 text-2xl"></i>
                                </div>
                            </div>
                            
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">Dönüşüm Oranı</p>
                                        <p class="text-3xl font-bold text-green-600" id="conversion-rate">8.4%</p>
                                    </div>
                                    <i class="fas fa-chart-line text-green-500 text-2xl"></i>
                                </div>
                            </div>
                            
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">Ortalama Oturum</p>
                                        <p class="text-3xl font-bold text-purple-600" id="avg-session">3m 24s</p>
                                    </div>
                                    <i class="fas fa-clock text-purple-500 text-2xl"></i>
                                </div>
                            </div>
                            
                            <div class="bg-white p-6 rounded-lg shadow">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="text-sm font-medium text-gray-600">SEO Skoru</p>
                                        <p class="text-3xl font-bold text-orange-600" id="seo-score">92/100</p>
                                    </div>
                                    <i class="fas fa-search text-orange-500 text-2xl"></i>
                                </div>
                            </div>
                        </div>

                        <!-- Tab Navigation -->
                        <div class="bg-white rounded-lg shadow mb-6">
                            <div class="border-b border-gray-200">
                                <nav class="flex space-x-8" aria-label="Tabs">
                                    <button onclick="showTrackingTab('analytics')" 
                                            class="tracking-tab-btn border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap border-b-2 py-4 px-1 text-sm font-medium active">
                                        <i class="fas fa-chart-line mr-2"></i>
                                        Analytics & Tracking
                                    </button>
                                    <button onclick="showTrackingTab('facebook')" 
                                            class="tracking-tab-btn border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap border-b-2 py-4 px-1 text-sm font-medium">
                                        <i class="fab fa-facebook mr-2"></i>
                                        Facebook Pixel
                                    </button>
                                    <button onclick="showTrackingTab('gtm')" 
                                            class="tracking-tab-btn border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap border-b-2 py-4 px-1 text-sm font-medium">
                                        <i class="fas fa-tags mr-2"></i>
                                        Google Tag Manager
                                    </button>
                                    <button onclick="showTrackingTab('webhooks')" 
                                            class="tracking-tab-btn border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap border-b-2 py-4 px-1 text-sm font-medium">
                                        <i class="fas fa-link mr-2"></i>
                                        Webhook & API
                                    </button>
                                    <button onclick="showTrackingTab('seo')" 
                                            class="tracking-tab-btn border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap border-b-2 py-4 px-1 text-sm font-medium">
                                        <i class="fas fa-search mr-2"></i>
                                        SEO & Schema
                                    </button>
                                    <button onclick="showTrackingTab('privacy')" 
                                            class="tracking-tab-btn border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 whitespace-nowrap border-b-2 py-4 px-1 text-sm font-medium">
                                        <i class="fas fa-shield-alt mr-2"></i>
                                        KVKV & Privacy
                                    </button>
                                </nav>
                            </div>
                        </div>

                        <!-- Analytics & Tracking Tab -->
                        <div id="tracking-tab-analytics" class="tracking-tab-content">
                        <!-- Tracking Integration Status -->
                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                            <!-- Analytics Services Status -->
                            <div class="bg-white rounded-lg shadow">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-semibold text-gray-800">
                                        <i class="fas fa-cogs mr-2"></i>
                                        Analytics Entegrasyon Durumu
                                    </h3>
                                </div>
                                <div class="p-6">
                                    <div class="space-y-4">
                                        <!-- Google Analytics 4 -->
                                        <div class="flex items-center justify-between p-4 bg-yellow-50 rounded-lg border border-yellow-200">
                                            <div class="flex items-center gap-3">
                                                <i class="fab fa-google text-2xl text-blue-600"></i>
                                                <div>
                                                    <h4 class="font-semibold text-gray-800">Google Analytics 4</h4>
                                                    <p class="text-sm text-gray-600">Property: Kurulum Bekliyor</p>
                                                </div>
                                            </div>
                                            <div class="flex items-center gap-2">
                                                <span class="px-3 py-1 bg-yellow-100 text-yellow-800 text-sm font-medium rounded">PENDING</span>
                                                <button onclick="setupGA4()" class="bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700">
                                                    Kurulum
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <!-- Facebook Pixel -->
                                        <div class="flex items-center justify-between p-4 bg-yellow-50 rounded-lg border border-yellow-200">
                                            <div class="flex items-center gap-3">
                                                <i class="fab fa-facebook text-2xl text-blue-600"></i>
                                                <div>
                                                    <h4 class="font-semibold text-gray-800">Facebook Pixel</h4>
                                                    <p class="text-sm text-gray-600">Pixel ID: Kurulum Bekliyor</p>
                                                </div>
                                            </div>
                                            <div class="flex items-center gap-2">
                                                <span class="px-3 py-1 bg-yellow-100 text-yellow-800 text-sm font-medium rounded">PENDING</span>
                                                <button onclick="setupFacebookPixel()" class="bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700">
                                                    Kurulum
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <!-- Google Tag Manager -->
                                        <div class="flex items-center justify-between p-4 bg-yellow-50 rounded-lg border border-yellow-200">
                                            <div class="flex items-center gap-3">
                                                <i class="fas fa-tags text-2xl text-orange-600"></i>
                                                <div>
                                                    <h4 class="font-semibold text-gray-800">Google Tag Manager</h4>
                                                    <p class="text-sm text-gray-600">Container: Kurulum Bekliyor</p>
                                                </div>
                                            </div>
                                            <div class="flex items-center gap-2">
                                                <span class="px-3 py-1 bg-yellow-100 text-yellow-800 text-sm font-medium rounded">PENDING</span>
                                                <button onclick="setupGTM()" class="bg-orange-600 text-white px-4 py-2 rounded text-sm hover:bg-orange-700">
                                                    Kurulum
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- SEO & Performance Status -->
                            <div class="bg-white rounded-lg shadow">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-semibold text-gray-800">
                                        <i class="fas fa-search-plus mr-2"></i>
                                        SEO & Performance Status
                                    </h3>
                                </div>
                                <div class="p-6">
                                    <div class="space-y-4">
                                        <!-- Schema.org Markup -->
                                        <div class="flex items-center justify-between p-4 bg-red-50 rounded-lg border border-red-200">
                                            <div class="flex items-center gap-3">
                                                <i class="fas fa-code text-2xl text-purple-600"></i>
                                                <div>
                                                    <h4 class="font-semibold text-gray-800">Schema.org Markup</h4>
                                                    <p class="text-sm text-gray-600">LocalBusiness + Service schema</p>
                                                </div>
                                            </div>
                                            <div class="flex items-center gap-2">
                                                <span class="px-3 py-1 bg-red-100 text-red-800 text-sm font-medium rounded">NOT SET</span>
                                                <button onclick="setupSchema()" class="bg-purple-600 text-white px-4 py-2 rounded text-sm hover:bg-purple-700">
                                                    Kurulum
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <!-- Cookie Consent (KVKV) -->
                                        <div class="flex items-center justify-between p-4 bg-red-50 rounded-lg border border-red-200">
                                            <div class="flex items-center gap-3">
                                                <i class="fas fa-shield-alt text-2xl text-indigo-600"></i>
                                                <div>
                                                    <h4 class="font-semibold text-gray-800">Cookie Consent (KVKV)</h4>
                                                    <p class="text-sm text-gray-600">GDPR Uyumlu Çerez Yönetimi</p>
                                                </div>
                                            </div>
                                            <div class="flex items-center gap-2">
                                                <span class="px-3 py-1 bg-red-100 text-red-800 text-sm font-medium rounded">NOT SET</span>
                                                <button onclick="setupCookieConsent()" class="bg-indigo-600 text-white px-4 py-2 rounded text-sm hover:bg-indigo-700">
                                                    Kurulum
                                                </button>
                                            </div>
                                        </div>
                                        
                                        <!-- Performance Monitoring -->
                                        <div class="flex items-center justify-between p-4 bg-green-50 rounded-lg border border-green-200">
                                            <div class="flex items-center gap-3">
                                                <i class="fas fa-tachometer-alt text-2xl text-green-600"></i>
                                                <div>
                                                    <h4 class="font-semibold text-gray-800">Performance Monitoring</h4>
                                                    <p class="text-sm text-gray-600">Core Web Vitals: LCP 1.2s</p>
                                                </div>
                                            </div>
                                            <div class="flex items-center gap-2">
                                                <span class="px-3 py-1 bg-green-100 text-green-800 text-sm font-medium rounded">ACTIVE</span>
                                                <button onclick="viewPerformanceDetails()" class="bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700">
                                                    Detay
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Real-Time Analytics Dashboard -->
                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                            <!-- Traffic Sources Chart -->
                            <div class="bg-white rounded-lg shadow p-6">
                                <h3 class="text-lg font-semibold text-gray-800 mb-4">
                                    <i class="fas fa-chart-pie mr-2"></i>
                                    Trafik Kaynakları (Son 7 Gün)
                                </h3>
                                <canvas id="traffic-sources-chart" width="400" height="250"></canvas>
                            </div>
                            
                            <!-- Conversion Funnel -->
                            <div class="bg-white rounded-lg shadow p-6">
                                <h3 class="text-lg font-semibold text-gray-800 mb-4">
                                    <i class="fas fa-filter mr-2"></i>
                                    Dönüşüm Hunisi
                                </h3>
                                <div class="space-y-3">
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm text-gray-600">Sayfa Ziyareti</span>
                                        <div class="flex items-center gap-2">
                                            <div class="w-32 bg-gray-200 rounded-full h-2">
                                                <div class="bg-blue-600 h-2 rounded-full" style="width: 100%"></div>
                                            </div>
                                            <span class="text-sm font-semibold">1,247</span>
                                        </div>
                                    </div>
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm text-gray-600">Form Başlatma</span>
                                        <div class="flex items-center gap-2">
                                            <div class="w-32 bg-gray-200 rounded-full h-2">
                                                <div class="bg-green-600 h-2 rounded-full" style="width: 45%"></div>
                                            </div>
                                            <span class="text-sm font-semibold">561</span>
                                        </div>
                                    </div>
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm text-gray-600">Form Tamamlama</span>
                                        <div class="flex items-center gap-2">
                                            <div class="w-32 bg-gray-200 rounded-full h-2">
                                                <div class="bg-orange-600 h-2 rounded-full" style="width: 25%"></div>
                                            </div>
                                            <span class="text-sm font-semibold">312</span>
                                        </div>
                                    </div>
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm text-gray-600">Servis Talebi</span>
                                        <div class="flex items-center gap-2">
                                            <div class="w-32 bg-gray-200 rounded-full h-2">
                                                <div class="bg-purple-600 h-2 rounded-full" style="width: 18%"></div>
                                            </div>
                                            <span class="text-sm font-semibold">224</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- SEO Rankings Table -->
                        <div class="bg-white rounded-lg shadow">
                            <div class="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
                                <h3 class="text-lg font-semibold text-gray-800">
                                    <i class="fas fa-trophy mr-2"></i>
                                    SEO Anahtar Kelime Performansı
                                </h3>
                                <div class="flex gap-2">
                                    <button onclick="refreshSEOData()" class="bg-blue-600 text-white px-4 py-2 rounded text-sm hover:bg-blue-700">
                                        <i class="fas fa-sync mr-1"></i>Güncelle
                                    </button>
                                    <button onclick="exportSEOReport()" class="bg-green-600 text-white px-4 py-2 rounded text-sm hover:bg-green-700">
                                        <i class="fas fa-download mr-1"></i>Rapor
                                    </button>
                                </div>
                            </div>
                            <div class="p-6">
                                <div class="overflow-x-auto">
                                    <table class="min-w-full table-auto">
                                        <thead>
                                            <tr class="bg-gray-50">
                                                <th class="px-4 py-2 text-left text-sm font-medium text-gray-700">Anahtar Kelime</th>
                                                <th class="px-4 py-2 text-left text-sm font-medium text-gray-700">Sıralama</th>
                                                <th class="px-4 py-2 text-left text-sm font-medium text-gray-700">Değişim</th>
                                                <th class="px-4 py-2 text-left text-sm font-medium text-gray-700">Tıklama</th>
                                                <th class="px-4 py-2 text-left text-sm font-medium text-gray-700">CTR</th>
                                                <th class="px-4 py-2 text-left text-sm font-medium text-gray-700">Durum</th>
                                            </tr>
                                        </thead>
                                        <tbody id="seo-rankings-table">
                                            <tr>
                                                <td class="px-4 py-3 border-b">TV tamiri İstanbul</td>
                                                <td class="px-4 py-3 border-b"><span class="font-semibold text-green-600">#3</span></td>
                                                <td class="px-4 py-3 border-b"><span class="text-green-600">↗ +2</span></td>
                                                <td class="px-4 py-3 border-b">1,247</td>
                                                <td class="px-4 py-3 border-b">8.4%</td>
                                                <td class="px-4 py-3 border-b"><span class="px-2 py-1 bg-green-100 text-green-800 text-xs rounded">İYİ</span></td>
                                            </tr>
                                            <tr class="bg-gray-50">
                                                <td class="px-4 py-3 border-b">Beyaz eşya tamiri</td>
                                                <td class="px-4 py-3 border-b"><span class="font-semibold text-yellow-600">#7</span></td>
                                                <td class="px-4 py-3 border-b"><span class="text-red-600">↘ -1</span></td>
                                                <td class="px-4 py-3 border-b">892</td>
                                                <td class="px-4 py-3 border-b">6.2%</td>
                                                <td class="px-4 py-3 border-b"><span class="px-2 py-1 bg-yellow-100 text-yellow-800 text-xs rounded">ORTA</span></td>
                                            </tr>
                                            <tr>
                                                <td class="px-4 py-3 border-b">Elektrik arıza servisi</td>
                                                <td class="px-4 py-3 border-b"><span class="font-semibold text-blue-600">#5</span></td>
                                                <td class="px-4 py-3 border-b"><span class="text-green-600">↗ +3</span></td>
                                                <td class="px-4 py-3 border-b">654</td>
                                                <td class="px-4 py-3 border-b">7.1%</td>
                                                <td class="px-4 py-3 border-b"><span class="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded">GELİŞİYOR</span></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                        </div>
                        
                        <!-- Facebook Pixel Tab -->
                        <div id="tracking-tab-facebook" class="tracking-tab-content hidden">
                            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                                <!-- Facebook Pixel Configuration -->
                                <div class="bg-white rounded-lg shadow">
                                    <div class="px-6 py-4 border-b border-gray-200">
                                        <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                            <i class="fab fa-facebook mr-2 text-blue-600"></i>
                                            Facebook Pixel Configuration
                                        </h3>
                                    </div>
                                    <div class="p-6">
                                        <div class="space-y-4">
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">Facebook Pixel ID</label>
                                                <input type="text" id="facebook-pixel-id" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                                                       placeholder="123456789012345">
                                                <p class="text-xs text-gray-500 mt-1">Facebook Ads Manager'dan alınan Pixel ID</p>
                                            </div>
                                            
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">Facebook Access Token (Opsiyonel)</label>
                                                <input type="password" id="facebook-access-token" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                                                       placeholder="Conversion API için token">
                                                <p class="text-xs text-gray-500 mt-1">Server-side event tracking için (Conversion API)</p>
                                            </div>
                                            
                                            <div class="flex items-center space-x-4">
                                                <label class="flex items-center">
                                                    <input type="checkbox" id="facebook-pixel-enabled" class="mr-2">
                                                    <span class="text-sm text-gray-700">Facebook Pixel'i Etkinleştir</span>
                                                </label>
                                                
                                                <label class="flex items-center">
                                                    <input type="checkbox" id="facebook-conversion-api-enabled" class="mr-2">
                                                    <span class="text-sm text-gray-700">Conversion API</span>
                                                </label>
                                            </div>
                                            
                                            <button onclick="setupFacebookPixel()" 
                                                    class="w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition duration-200">
                                                <i class="fab fa-facebook mr-2"></i>
                                                Facebook Pixel Yapılandır
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Facebook Pixel Features -->
                                <div class="bg-white rounded-lg shadow">
                                    <div class="px-6 py-4 border-b border-gray-200">
                                        <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                            <i class="fas fa-rocket mr-2 text-purple-600"></i>
                                            Enhanced Tracking Features
                                        </h3>
                                    </div>
                                    <div class="p-6">
                                        <div class="space-y-4">
                                            <div class="flex items-start space-x-3">
                                                <i class="fas fa-check-circle text-green-500 mt-0.5"></i>
                                                <div>
                                                    <h4 class="font-semibold text-gray-800">Standard Events</h4>
                                                    <p class="text-sm text-gray-600">Lead, Purchase, ViewContent, Contact</p>
                                                </div>
                                            </div>
                                            
                                            <div class="flex items-start space-x-3">
                                                <i class="fas fa-check-circle text-green-500 mt-0.5"></i>
                                                <div>
                                                    <h4 class="font-semibold text-gray-800">Custom Events</h4>
                                                    <p class="text-sm text-gray-600">ServiceRequest, ContactInteraction, AIChatEngagement</p>
                                                </div>
                                            </div>
                                            
                                            <div class="flex items-start space-x-3">
                                                <i class="fas fa-check-circle text-green-500 mt-0.5"></i>
                                                <div>
                                                    <h4 class="font-semibold text-gray-800">Conversion Value Optimization</h4>
                                                    <p class="text-sm text-gray-600">Service-based value tracking for better ROAS</p>
                                                </div>
                                            </div>
                                            
                                            <div class="flex items-start space-x-3">
                                                <i class="fas fa-check-circle text-green-500 mt-0.5"></i>
                                                <div>
                                                    <h4 class="font-semibold text-gray-800">Audience Segmentation</h4>
                                                    <p class="text-sm text-gray-600">High-intent users, Service explorers, Retargeting segments</p>
                                                </div>
                                            </div>
                                            
                                            <div class="flex items-start space-x-3">
                                                <i class="fas fa-check-circle text-green-500 mt-0.5"></i>
                                                <div>
                                                    <h4 class="font-semibold text-gray-800">Funnel Tracking</h4>
                                                    <p class="text-sm text-gray-600">Awareness → Interest → Consideration → Intent → Conversion</p>
                                                </div>
                                            </div>
                                            
                                            <div class="mt-4 p-3 bg-blue-50 rounded-lg">
                                                <p class="text-xs text-blue-700">
                                                    <i class="fas fa-info-circle mr-1"></i>
                                                    Facebook Pixel enhanced tracking automatically starts when configured. 
                                                    All user interactions are tracked for conversion optimization.
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Facebook Pixel Analytics Dashboard -->
                            <div class="bg-white rounded-lg shadow">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                        <i class="fas fa-chart-bar mr-2 text-indigo-600"></i>
                                        Facebook Pixel Analytics
                                    </h3>
                                </div>
                                <div class="p-6">
                                    <div id="facebook-pixel-analytics" class="text-center text-gray-500">
                                        <i class="fas fa-chart-pie text-4xl mb-4 text-gray-300"></i>
                                        <p>Facebook Pixel yapılandırıldıktan sonra analytics verisi burada görünecek.</p>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Facebook Pixel Preview -->
                            <div id="facebook-pixel-preview"></div>
                        </div>
                        
                        <!-- Google Tag Manager Tab -->
                        <div id="tracking-tab-gtm" class="tracking-tab-content hidden">
                            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                                <!-- GTM Container Configuration -->
                                <div class="bg-white rounded-lg shadow">
                                    <div class="px-6 py-4 border-b border-gray-200">
                                        <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                            <i class="fas fa-tags mr-2 text-orange-600"></i>
                                            GTM Container Configuration
                                        </h3>
                                    </div>
                                    <div class="p-6">
                                        <div class="space-y-4">
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">GTM Container ID</label>
                                                <input type="text" id="gtm-container-id" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500"
                                                       placeholder="GTM-XXXXXXX">
                                                <p class="text-xs text-gray-500 mt-1">Google Tag Manager'dan alınan Container ID</p>
                                            </div>
                                            
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">Container Name</label>
                                                <input type="text" id="gtm-container-name" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500"
                                                       placeholder="GARANTOR360 Container">
                                                <p class="text-xs text-gray-500 mt-1">GTM Container'ının tanımlayıcı adı</p>
                                            </div>
                                            
                                            <div class="space-y-2">
                                                <label class="block text-sm font-medium text-gray-700">DataLayer Features</label>
                                                <div class="space-y-2">
                                                    <label class="flex items-center">
                                                        <input type="checkbox" id="gtm-enhanced-ecommerce" class="mr-2" checked>
                                                        <span class="text-sm text-gray-700">Enhanced E-commerce Tracking</span>
                                                    </label>
                                                    
                                                    <label class="flex items-center">
                                                        <input type="checkbox" id="gtm-custom-events" class="mr-2" checked>
                                                        <span class="text-sm text-gray-700">Custom Events & User Journey</span>
                                                    </label>
                                                    
                                                    <label class="flex items-center">
                                                        <input type="checkbox" id="gtm-engagement-tracking" class="mr-2" checked>
                                                        <span class="text-sm text-gray-700">Advanced Engagement Tracking</span>
                                                    </label>
                                                </div>
                                            </div>
                                            
                                            <div class="flex items-center">
                                                <input type="checkbox" id="gtm-enabled" class="mr-2">
                                                <label class="text-sm text-gray-700">Enable Google Tag Manager</label>
                                            </div>
                                            
                                            <button onclick="setupGTMContainer()" 
                                                    class="w-full bg-orange-600 text-white py-2 px-4 rounded-lg hover:bg-orange-700 transition duration-200">
                                                <i class="fas fa-tags mr-2"></i>
                                                GTM Container Yapılandır
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- GTM Features & Tags -->
                                <div class="bg-white rounded-lg shadow">
                                    <div class="px-6 py-4 border-b border-gray-200">
                                        <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                            <i class="fas fa-cog mr-2 text-purple-600"></i>
                                            Pre-configured Tags & Triggers
                                        </h3>
                                    </div>
                                    <div class="p-6">
                                        <div class="space-y-4">
                                            <div class="grid grid-cols-2 gap-3">
                                                <div class="flex items-start space-x-2">
                                                    <i class="fas fa-check-circle text-green-500 mt-0.5"></i>
                                                    <div>
                                                        <h4 class="font-semibold text-gray-800 text-sm">GA4 Configuration</h4>
                                                        <p class="text-xs text-gray-600">Enhanced measurement & events</p>
                                                    </div>
                                                </div>
                                                
                                                <div class="flex items-start space-x-2">
                                                    <i class="fas fa-check-circle text-green-500 mt-0.5"></i>
                                                    <div>
                                                        <h4 class="font-semibold text-gray-800 text-sm">Facebook Pixel</h4>
                                                        <p class="text-xs text-gray-600">Base code & custom events</p>
                                                    </div>
                                                </div>
                                                
                                                <div class="flex items-start space-x-2">
                                                    <i class="fas fa-check-circle text-green-500 mt-0.5"></i>
                                                    <div>
                                                        <h4 class="font-semibold text-gray-800 text-sm">Service Requests</h4>
                                                        <p class="text-xs text-gray-600">Form submission tracking</p>
                                                    </div>
                                                </div>
                                                
                                                <div class="flex items-start space-x-2">
                                                    <i class="fas fa-check-circle text-green-500 mt-0.5"></i>
                                                    <div>
                                                        <h4 class="font-semibold text-gray-800 text-sm">Contact Tracking</h4>
                                                        <p class="text-xs text-gray-600">Phone, WhatsApp, Email clicks</p>
                                                    </div>
                                                </div>
                                                
                                                <div class="flex items-start space-x-2">
                                                    <i class="fas fa-check-circle text-green-500 mt-0.5"></i>
                                                    <div>
                                                        <h4 class="font-semibold text-gray-800 text-sm">Scroll Depth</h4>
                                                        <p class="text-xs text-gray-600">25%, 50%, 75%, 90%, 100%</p>
                                                    </div>
                                                </div>
                                                
                                                <div class="flex items-start space-x-2">
                                                    <i class="fas fa-check-circle text-green-500 mt-0.5"></i>
                                                    <div>
                                                        <h4 class="font-semibold text-gray-800 text-sm">AI Chat Events</h4>
                                                        <p class="text-xs text-gray-600">Chat interactions & conversions</p>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                            <div class="mt-4 p-3 bg-orange-50 rounded-lg">
                                                <h4 class="font-semibold text-orange-800 mb-2">DataLayer Variables</h4>
                                                <div class="text-xs text-orange-700 space-y-1">
                                                    <p>• <strong>service_category</strong> - Seçilen servis kategorisi</p>
                                                    <p>• <strong>contact_method</strong> - İletişim yöntemi (phone/whatsapp/email)</p>
                                                    <p>• <strong>conversion_value</strong> - Dönüşüm değeri (TL)</p>
                                                    <p>• <strong>user_journey_stage</strong> - Kullanıcı yolculuğu aşaması</p>
                                                    <p>• <strong>engagement_score</strong> - Katılım skoru (0-100)</p>
                                                </div>
                                            </div>
                                            
                                            <div class="mt-4 p-3 bg-blue-50 rounded-lg">
                                                <p class="text-xs text-blue-700">
                                                    <i class="fas fa-info-circle mr-1"></i>
                                                    GTM Container yapılandırıldıktan sonra tüm events otomatik olarak dataLayer'a push edilir. 
                                                    Custom triggers ve variables GTM interface'inden düzenlenebilir.
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- GTM Analytics Dashboard -->
                            <div class="bg-white rounded-lg shadow">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                        <i class="fas fa-chart-line mr-2 text-indigo-600"></i>
                                        GTM Analytics & Events
                                    </h3>
                                </div>
                                <div class="p-6">
                                    <div id="gtm-analytics-dashboard" class="text-center text-gray-500">
                                        <i class="fas fa-tags text-4xl mb-4 text-gray-300"></i>
                                        <p>GTM Container yapılandırıldıktan sonra event analytics burada görünecek.</p>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- GTM Preview -->
                            <div id="gtm-preview-container"></div>
                        </div>
                        
                        <!-- Webhook & API Tab -->
                        <div id="tracking-tab-webhooks" class="tracking-tab-content hidden">
                            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                                <!-- N8N Webhook Configuration -->
                                <div class="bg-white rounded-lg shadow">
                                    <div class="px-6 py-4 border-b border-gray-200">
                                        <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                            <i class="fas fa-link mr-2 text-purple-600"></i>
                                            N8N Webhook Integration
                                        </h3>
                                    </div>
                                    <div class="p-6">
                                        <div class="space-y-4">
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">Webhook URL</label>
                                                <input type="url" id="n8n-webhook-url" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500"
                                                       placeholder="https://your-n8n-instance.com/webhook/garantor360">
                                            </div>
                                            <div class="flex items-center">
                                                <input type="checkbox" id="n8n-webhook-enabled" class="mr-2">
                                                <label class="text-sm text-gray-700">Enable N8N Webhook</label>
                                            </div>
                                            <button onclick="setupN8NWebhook()" 
                                                    class="w-full bg-purple-600 text-white py-2 px-4 rounded-lg hover:bg-purple-700 transition duration-200">
                                                <i class="fas fa-save mr-2"></i>
                                                Webhook Yapılandır & Test Et
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- OpenAI API Configuration -->
                                <div class="bg-white rounded-lg shadow">
                                    <div class="px-6 py-4 border-b border-gray-200">
                                        <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                            <i class="fas fa-robot mr-2 text-green-600"></i>
                                            OpenAI API Integration
                                        </h3>
                                    </div>
                                    <div class="p-6">
                                        <div class="space-y-4">
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">API Key</label>
                                                <input type="password" id="openai-api-key" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                                                       placeholder="sk-...">
                                            </div>
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">Model</label>
                                                <select id="openai-model" class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                                                    <option value="gpt-4">GPT-4</option>
                                                    <option value="gpt-4-turbo">GPT-4 Turbo</option>
                                                    <option value="gpt-3.5-turbo">GPT-3.5 Turbo</option>
                                                </select>
                                            </div>
                                            <div class="flex items-center">
                                                <input type="checkbox" id="openai-enabled" class="mr-2">
                                                <label class="text-sm text-gray-700">Enable OpenAI Integration</label>
                                            </div>
                                            <button onclick="setupOpenAI()" 
                                                    class="w-full bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700 transition duration-200">
                                                <i class="fas fa-key mr-2"></i>
                                                API Key Yapılandır & Test Et
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                                <!-- Email Service Configuration -->
                                <div class="bg-white rounded-lg shadow">
                                    <div class="px-6 py-4 border-b border-gray-200">
                                        <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                            <i class="fas fa-envelope mr-2 text-blue-600"></i>
                                            SendGrid Email Service
                                        </h3>
                                    </div>
                                    <div class="p-6">
                                        <div class="space-y-4">
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">SendGrid API Key</label>
                                                <input type="password" id="sendgrid-api-key" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                                                       placeholder="SG.xxx...">
                                            </div>
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">From Email</label>
                                                <input type="email" id="sendgrid-from-email" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500"
                                                       placeholder="noreply@garantor360.com">
                                            </div>
                                            <div class="flex items-center">
                                                <input type="checkbox" id="sendgrid-enabled" class="mr-2">
                                                <label class="text-sm text-gray-700">Enable Email Service</label>
                                            </div>
                                            <button onclick="setupSendGrid()" 
                                                    class="w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition duration-200">
                                                <i class="fas fa-envelope mr-2"></i>
                                                Email Servis Yapılandır & Test Et
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Payment Gateway Configuration -->
                                <div class="bg-white rounded-lg shadow">
                                    <div class="px-6 py-4 border-b border-gray-200">
                                        <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                            <i class="fas fa-credit-card mr-2 text-orange-600"></i>
                                            PayTR Payment Gateway
                                        </h3>
                                    </div>
                                    <div class="p-6">
                                        <div class="space-y-4">
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">Merchant ID</label>
                                                <input type="text" id="paytr-merchant-id" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500"
                                                       placeholder="123456">
                                            </div>
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">Merchant Key</label>
                                                <input type="password" id="paytr-merchant-key" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500"
                                                       placeholder="Merchant Key">
                                            </div>
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">Merchant Salt</label>
                                                <input type="password" id="paytr-merchant-salt" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500"
                                                       placeholder="Merchant Salt">
                                            </div>
                                            <div class="flex items-center">
                                                <input type="checkbox" id="paytr-enabled" class="mr-2">
                                                <label class="text-sm text-gray-700">Enable PayTR Gateway</label>
                                            </div>
                                            <button onclick="setupPayTR()" 
                                                    class="w-full bg-orange-600 text-white py-2 px-4 rounded-lg hover:bg-orange-700 transition duration-200">
                                                <i class="fas fa-credit-card mr-2"></i>
                                                Payment Gateway Yapılandır
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- API Status Dashboard -->
                            <div class="mt-8 bg-white rounded-lg shadow">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-semibold text-gray-800">
                                        <i class="fas fa-heartbeat mr-2"></i>
                                        API & Webhook Status Dashboard
                                    </h3>
                                </div>
                                <div class="p-6">
                                    <div class="grid grid-cols-1 md:grid-cols-4 gap-4" id="api-status-dashboard">
                                        <!-- Status cards will be populated by JavaScript -->
                                        <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                                            <span class="text-sm font-medium text-gray-700">N8N Webhook</span>
                                            <span class="px-2 py-1 text-xs font-semibold bg-gray-100 text-gray-800 rounded">OFFLINE</span>
                                        </div>
                                        <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                                            <span class="text-sm font-medium text-gray-700">OpenAI API</span>
                                            <span class="px-2 py-1 text-xs font-semibold bg-gray-100 text-gray-800 rounded">OFFLINE</span>
                                        </div>
                                        <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                                            <span class="text-sm font-medium text-gray-700">SendGrid</span>
                                            <span class="px-2 py-1 text-xs font-semibold bg-gray-100 text-gray-800 rounded">OFFLINE</span>
                                        </div>
                                        <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                                            <span class="text-sm font-medium text-gray-700">PayTR</span>
                                            <span class="px-2 py-1 text-xs font-semibold bg-gray-100 text-gray-800 rounded">OFFLINE</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- SEO & Schema Tab -->
                        <div id="tracking-tab-seo" class="tracking-tab-content hidden">
                            <div class="bg-white rounded-lg shadow p-6">
                                <h3 class="text-lg font-semibold text-gray-800 mb-4">
                                    <i class="fas fa-search mr-2"></i>
                                    SEO & Schema.org Configuration
                                </h3>
                                <p class="text-gray-600">SEO configuration ve Schema.org markup ayarları buraya gelecek.</p>
                            </div>
                        </div>
                        
                        <!-- KVKV & Privacy Tab -->
                        <div id="tracking-tab-privacy" class="tracking-tab-content hidden">
                            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                                <!-- KVKV Configuration -->
                                <div class="bg-white rounded-lg shadow">
                                    <div class="px-6 py-4 border-b border-gray-200">
                                        <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                            <i class="fas fa-shield-alt mr-2 text-green-600"></i>
                                            KVKV Configuration
                                        </h3>
                                    </div>
                                    <div class="p-6">
                                        <div class="space-y-4">
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">Şirket Adı</label>
                                                <input type="text" id="kvkv-company-name" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                                                       placeholder="GARANTOR360" value="GARANTOR360">
                                            </div>
                                            
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">KVKV İletişim E-postası</label>
                                                <input type="email" id="kvkv-contact-email" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                                                       placeholder="kvkv@garantor360.com">
                                            </div>
                                            
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">Cookie Saklama Süresi (Gün)</label>
                                                <input type="number" id="kvkv-cookie-retention" 
                                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                                                       value="365" min="1" max="730">
                                            </div>
                                            
                                            <div class="grid grid-cols-2 gap-3">
                                                <div>
                                                    <label class="block text-sm font-medium text-gray-700 mb-2">KVKV Politikası URL</label>
                                                    <input type="text" id="kvkv-privacy-policy-url" 
                                                           class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                                                           placeholder="/kvkv-politikasi" value="/kvkv-politikasi">
                                                </div>
                                                
                                                <div>
                                                    <label class="block text-sm font-medium text-gray-700 mb-2">Çerez Politikası URL</label>
                                                    <input type="text" id="kvkv-cookie-policy-url" 
                                                           class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500"
                                                           placeholder="/cerez-politikasi" value="/cerez-politikasi">
                                                </div>
                                            </div>
                                            
                                            <button onclick="setupKVKVConfig()" 
                                                    class="w-full bg-green-600 text-white py-2 px-4 rounded-lg hover:bg-green-700 transition duration-200">
                                                <i class="fas fa-shield-alt mr-2"></i>
                                                KVKV Ayarlarını Kaydet
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Cookie Consent Banner Settings -->
                                <div class="bg-white rounded-lg shadow">
                                    <div class="px-6 py-4 border-b border-gray-200">
                                        <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                            <i class="fas fa-cookie-bite mr-2 text-amber-600"></i>
                                            Cookie Consent Banner
                                        </h3>
                                    </div>
                                    <div class="p-6">
                                        <div class="space-y-4">
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">Banner Position</label>
                                                <select id="cookie-banner-position" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-amber-500">
                                                    <option value="bottom" selected>Alt (Bottom)</option>
                                                    <option value="top">Üst (Top)</option>
                                                    <option value="center">Merkez (Center)</option>
                                                </select>
                                            </div>
                                            
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">Banner Theme</label>
                                                <select id="cookie-banner-theme" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-amber-500">
                                                    <option value="dark" selected>Koyu (Dark)</option>
                                                    <option value="light">Açık (Light)</option>
                                                    <option value="blue">Mavi (Blue)</option>
                                                </select>
                                            </div>
                                            
                                            <div class="space-y-2">
                                                <label class="flex items-center">
                                                    <input type="checkbox" id="cookie-detailed-settings" class="mr-2" checked>
                                                    <span class="text-sm text-gray-700">Detaylı Ayarlar Butonu Göster</span>
                                                </label>
                                                
                                                <label class="flex items-center">
                                                    <input type="checkbox" id="cookie-auto-show" class="mr-2" checked>
                                                    <span class="text-sm text-gray-700">Yeni Kullanıcılara Otomatik Göster</span>
                                                </label>
                                            </div>
                                            
                                            <button onclick="testCookieBanner()" 
                                                    class="w-full bg-amber-600 text-white py-2 px-4 rounded-lg hover:bg-amber-700 transition duration-200">
                                                <i class="fas fa-eye mr-2"></i>
                                                Banner'ı Test Et
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- KVKV Analytics & Compliance Dashboard -->
                            <div class="bg-white rounded-lg shadow">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                        <i class="fas fa-chart-line mr-2 text-blue-600"></i>
                                        KVKV Compliance Dashboard
                                    </h3>
                                </div>
                                <div class="p-6">
                                    <div id="kvkv-analytics-dashboard" class="text-center text-gray-500">
                                        <i class="fas fa-shield-alt text-4xl mb-4 text-gray-300"></i>
                                        <p>KVKV yapılandırması tamamlandıktan sonra compliance analytics burada görünecek.</p>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Cookie Categories Management -->
                            <div class="mt-6 bg-white rounded-lg shadow">
                                <div class="px-6 py-4 border-b border-gray-200">
                                    <h3 class="text-lg font-semibold text-gray-800 flex items-center">
                                        <i class="fas fa-layer-group mr-2 text-purple-600"></i>
                                        Çerez Kategorileri Yönetimi
                                    </h3>
                                </div>
                                <div class="p-6">
                                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                                        <div class="border border-gray-200 rounded-lg p-4">
                                            <div class="flex items-center justify-between mb-2">
                                                <h4 class="font-semibold text-gray-800">Gerekli Çerezler</h4>
                                                <span class="text-xs bg-red-100 text-red-800 px-2 py-1 rounded">Zorunlu</span>
                                            </div>
                                            <p class="text-sm text-gray-600 mb-3">Website temel işlevleri</p>
                                            <div class="text-xs text-gray-500">
                                                <strong>Çerezler:</strong> session_id, csrf_token, auth_token
                                            </div>
                                        </div>
                                        
                                        <div class="border border-gray-200 rounded-lg p-4">
                                            <div class="flex items-center justify-between mb-2">
                                                <h4 class="font-semibold text-gray-800">Analitik Çerezler</h4>
                                                <span class="text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded">Rıza</span>
                                            </div>
                                            <p class="text-sm text-gray-600 mb-3">Google Analytics, GTM</p>
                                            <div class="text-xs text-gray-500">
                                                <strong>Çerezler:</strong> _ga, _gid, _gat, gtag
                                            </div>
                                        </div>
                                        
                                        <div class="border border-gray-200 rounded-lg p-4">
                                            <div class="flex items-center justify-between mb-2">
                                                <h4 class="font-semibold text-gray-800">Pazarlama Çerezleri</h4>
                                                <span class="text-xs bg-orange-100 text-orange-800 px-2 py-1 rounded">Rıza</span>
                                            </div>
                                            <p class="text-sm text-gray-600 mb-3">Facebook Pixel, Reklamlar</p>
                                            <div class="text-xs text-gray-500">
                                                <strong>Çerezler:</strong> _fbp, _fbc, fbq, fr
                                            </div>
                                        </div>
                                        
                                        <div class="border border-gray-200 rounded-lg p-4">
                                            <div class="flex items-center justify-between mb-2">
                                                <h4 class="font-semibold text-gray-800">Fonksiyonel Çerezler</h4>
                                                <span class="text-xs bg-green-100 text-green-800 px-2 py-1 rounded">Meşru</span>
                                            </div>
                                            <p class="text-sm text-gray-600 mb-3">Kullanıcı tercihleri</p>
                                            <div class="text-xs text-gray-500">
                                                <strong>Çerezler:</strong> preferences, language, theme
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="mt-6 p-4 bg-green-50 border border-green-200 rounded-lg">
                                        <h4 class="font-semibold text-green-800 mb-2">KVKV Uyumluluk Durumu</h4>
                                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
                                            <div class="flex items-center">
                                                <i class="fas fa-check-circle text-green-600 mr-2"></i>
                                                <span>Açık rıza mekanizması</span>
                                            </div>
                                            <div class="flex items-center">
                                                <i class="fas fa-check-circle text-green-600 mr-2"></i>
                                                <span>Çerez kategorileri ayrımı</span>
                                            </div>
                                            <div class="flex items-center">
                                                <i class="fas fa-check-circle text-green-600 mr-2"></i>
                                                <span>Rıza geri çekme hakkı</span>
                                            </div>
                                            <div class="flex items-center">
                                                <i class="fas fa-check-circle text-green-600 mr-2"></i>
                                                <span>Veri sahibi hakları</span>
                                            </div>
                                            <div class="flex items-center">
                                                <i class="fas fa-check-circle text-green-600 mr-2"></i>
                                                <span>Compliance logging</span>
                                            </div>
                                            <div class="flex items-center">
                                                <i class="fas fa-check-circle text-green-600 mr-2"></i>
                                                <span>Veri işleme kayıtları</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Payment History Section -->
                    <div id="admin-payments-section" class="admin-section hidden">
                        <h2 class="text-3xl font-bold mb-6 text-gray-800">
                            <i class="fas fa-credit-card mr-2"></i>
                            Odeme Gecmisi
                        </h2>
                        
                        <div class="bg-white rounded-lg shadow">
                            <div class="px-6 py-4 border-b border-gray-200">
                                <h3 class="text-lg font-semibold text-gray-800">Tum Odeme Islemleri</h3>
                            </div>
                            <div class="p-6">
                                <div id="payment-history-list">
                                    Veriler yukleniyor...
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"></script>
        <script src="/static/admin.js"></script>
    </body>
    </html>
  `)
})

// Dashboard route - Redirect to admin panel system monitoring
app.get('/dashboard', (c) => {
  return c.redirect('/admin#system-monitoring')
})

// Bayi Landing Page - Service Provider Focused
app.get('/bayi', (c) => {
  return c.html(`
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Garantor360 Bayi Başvuru | Profesyonel İş Ortaklığı ve Garantili Kazanç</title>
        <meta name="description" content="Garantor360 bayi olun! Garantili ödeme, sürekli iş akışı ve profesyonel destek ile gelir artırın. 6 sektörde iş fırsatları. Hemen başvuru yapın!">
        <meta name="keywords" content="bayi başvuru, iş fırsatları, garantili ödeme, hizmet verme, profesyonel ortaklık, gelir artırma">
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"></script>
        <style>
            .corporate-gradient { background: linear-gradient(135deg, #1e293b 0%, #334155 100%); }
            .card-corporate { 
              transition: all 0.2s ease; 
              border: 2px solid transparent;
            }
            .card-corporate:hover { 
              transform: translateY(-2px); 
              box-shadow: 0 8px 25px rgba(30, 41, 59, 0.15);
              border-color: #ea580c;
            }
            .pulse-dot { 
              animation: pulseDot 1.5s ease-in-out infinite; 
            }
            @keyframes pulseDot {
              0%, 100% { opacity: 0.8; transform: scale(1); }
              50% { opacity: 1; transform: scale(1.05); }
            }
            @keyframes electricPowerOn {
              0% { 
                opacity: 0.1; 
                filter: drop-shadow(0 0 2px rgba(128, 128, 128, 0.3)) brightness(0.3);
                transform: scale(0.95);
              }
              15% { 
                opacity: 0.9; 
                filter: drop-shadow(0 0 12px rgba(255, 255, 0, 0.8)) brightness(1.2);
                transform: scale(1.1);
              }
              25% { 
                opacity: 0.3; 
                filter: drop-shadow(0 0 4px rgba(255, 255, 0, 0.4)) brightness(0.5);
                transform: scale(0.98);
              }
              35% { 
                opacity: 1; 
                filter: drop-shadow(0 0 15px rgba(255, 255, 0, 1)) brightness(1.5);
                transform: scale(1.05);
              }
              50% { 
                opacity: 0.8; 
                filter: drop-shadow(0 0 8px rgba(255, 255, 0, 0.7)) brightness(1);
                transform: scale(1);
              }
              100% { 
                opacity: 0.9; 
                filter: drop-shadow(0 0 10px rgba(255, 255, 0, 0.8)) brightness(1.1);
                transform: scale(1.02);
              }
            }
            .stats-counter { 
              font-weight: 700; 
              color: #1e293b;
            }
            .section-divider {
              height: 2px;
              background: linear-gradient(90deg, transparent, #ea580c, transparent);
            }
            .sharp-corner {
              border-radius: 0;
            }
            .minimal-corner {
              border-radius: 4px;
            }
        </style>
    </head>
    <body class="bg-slate-100">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm sticky top-0 z-50 border-b border-slate-200">
            <div class="max-w-7xl mx-auto px-6">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <!-- Garantor360 Logo -->
                        <div class="flex items-center">
                            <img src="/static/garantor360-logo.png" alt="Garantor360" class="h-16">
                        </div>
                    </div>
                    <div class="flex items-center space-x-4">
                        <!-- Provider Action Buttons -->
                        <a href="/" class="text-slate-600 hover:text-slate-800 font-medium transition duration-200">
                            Müşteri misiniz?
                        </a>
                        <a href="/bayi/login" class="bg-orange-600 text-white px-6 py-2 sharp-corner font-semibold hover:bg-orange-700 transition duration-200">
                            BAYI GİRİŞİ
                        </a>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Hero Section - Professional Team Image -->
        <section class="relative">
            <div class="w-full" style="height: calc(auto + 100px);">
                <img src="/static/professional-team.jpg" 
                     alt="Profesyonel Hizmet Ekibi" 
                     class="w-full object-cover" 
                     style="height: calc(100% + 100px); min-height: 400px;">
            </div>
            
            <!-- Content Overlay - More Transparent -->
            <div class="absolute inset-0 bg-gradient-to-r from-blue-900/40 via-blue-800/30 to-transparent flex items-center justify-center">
                <div class="max-w-7xl mx-auto px-6 text-center">
                    <div class="max-w-4xl mx-auto">
                        <h1 class="text-4xl lg:text-5xl font-bold mb-6 text-white drop-shadow-2xl">
                            Profesyonel Servis Sağlayıcı Olun
                        </h1>
                        <p class="text-lg lg:text-xl text-blue-100 mb-8 drop-shadow-lg">
                            Garantor360 platformunda hizmet vererek güvenli ödeme sistemi ve sürekli iş akışı ile gelir elde edin.
                        </p>
                        <div class="flex flex-col sm:flex-row gap-4 justify-center">
                            <button onclick="scrollToApplication()" class="bg-orange-600 text-white px-8 py-4 rounded-lg font-semibold text-lg hover:bg-orange-700 transition duration-200 shadow-2xl">
                                Hemen Başvur
                            </button>
                            <button onclick="scrollToStats()" class="border-2 border-white text-white px-8 py-4 rounded-lg font-semibold text-lg hover:bg-white hover:text-blue-600 transition duration-200 shadow-2xl backdrop-blur-sm">
                                Fırsatları Keşfet
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Live Statistics for Providers -->
        <section id="stats" class="py-20 bg-white">
            <div class="max-w-7xl mx-auto px-6">
                <!-- Provider Stats Header -->
                <div class="text-center mb-16">
                    <div class="section-divider w-20 mx-auto mb-6"></div>
                    <h2 class="text-4xl font-bold text-slate-800 mb-4 tracking-tight">
                        CANLI İŞ FIRSATLARI
                    </h2>
                    <p class="text-slate-600 text-lg font-medium">Son 24 saatte gerçekleşen iş hacmi</p>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-16">
                    <div class="bg-blue-900 text-white p-8 minimal-corner card-corporate">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-blue-200 text-sm font-medium mb-2">BUGÜN AÇILAN İŞ</p>
                                <p class="text-4xl font-bold stats-counter text-white" id="daily-jobs">127</p>
                            </div>
                            <div class="w-3 h-3 bg-amber-400 sharp-corner pulse-dot"></div>
                        </div>
                        <div class="mt-6 pt-4 border-t border-blue-700">
                            <span class="text-amber-300 text-sm font-semibold">
                                ↗ +23% önceki güne göre
                            </span>
                        </div>
                    </div>

                    <div class="bg-white border-2 border-blue-200 p-8 minimal-corner card-corporate">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-blue-600 text-sm font-medium mb-2">GÜNLÜK ORTALAMA KAZANÇ</p>
                                <p class="text-4xl font-bold text-blue-900">TL<span id="daily-earnings">1,250</span></p>
                            </div>
                            <div class="w-3 h-3 bg-amber-500 sharp-corner"></div>
                        </div>
                        <div class="mt-6 pt-4 border-t border-blue-100">
                            <span class="text-blue-600 text-sm font-semibold">
                                Bayi başına ortalama
                            </span>
                        </div>
                    </div>

                    <div class="bg-white border-2 border-blue-200 p-8 minimal-corner card-corporate">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-blue-600 text-sm font-medium mb-2">AKTIF BAYILER</p>
                                <p class="text-4xl font-bold text-blue-900" id="active-dealers">589</p>
                            </div>
                            <div class="w-3 h-3 bg-amber-500 sharp-corner"></div>
                        </div>
                        <div class="mt-6 pt-4 border-t border-blue-100">
                            <span class="text-emerald-600 text-sm font-semibold">
                                ↗ Bu ay %32 artış
                            </span>
                        </div>
                    </div>

                    <div class="bg-amber-500 text-blue-900 p-8 minimal-corner card-corporate">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-amber-800 text-sm font-medium mb-2">ORTALAMA İŞ ÜCRETİ</p>
                                <p class="text-4xl font-bold text-blue-900">TL<span id="avg-price">385</span></p>
                            </div>
                            <div class="w-3 h-3 bg-blue-900 sharp-corner pulse-dot"></div>
                        </div>
                        <div class="mt-6 pt-4 border-t border-amber-600">
                            <span class="text-blue-800 text-sm font-semibold">
                                ↗ Sürekli yükseliş
                            </span>
                        </div>
                    </div>
                </div>

                <!-- Live Job Feed for Providers -->
                <div class="bg-white border-2 border-blue-200 minimal-corner mt-16">
                    <div class="bg-blue-900 px-8 py-4 border-b-2 border-blue-200">
                        <div class="flex items-center justify-between">
                            <h3 class="text-white text-xl font-bold tracking-tight flex items-center">
                                <span class="inline-block w-3 h-3 bg-amber-400 sharp-corner pulse-dot mr-3"></span>
                                CANLI TALEP AKIŞI - BAYILER İÇİN
                            </h3>
                            <div class="flex items-center space-x-4 text-sm">
                                <span class="text-blue-200 font-medium">Son 10 dakika:</span>
                                <span class="bg-amber-500 text-blue-900 px-3 py-1 sharp-corner font-bold" id="provider-recent-count">12 İş</span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Provider Job Feed Grid -->
                    <div class="p-8">
                        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                            <!-- Left: Live Provider Job List - Extended to 2 columns -->
                            <div class="flex flex-col lg:col-span-2">
                                <h4 class="text-blue-900 font-bold mb-4 tracking-tight flex items-center">
                                    <i class="fas fa-hammer text-amber-500 mr-2"></i>
                                    YENİ İŞ FIRSATLARI
                                </h4>
                                <div id="provider-job-feed" class="space-y-3 overflow-y-auto bg-blue-50 p-3 minimal-corner border border-blue-200" style="height: 563px;">
                                    <!-- Provider jobs will be populated via JavaScript -->
                                    <!-- Height increased by 163px total - ultra-precise final display -->
                                </div>
                            </div>
                            
                            <!-- Right: Provider Statistics - Single column -->
                            <div class="lg:col-span-1">
                                <h4 class="text-blue-900 font-bold mb-4 tracking-tight flex items-center">
                                    <i class="fas fa-chart-bar text-amber-500 mr-2"></i>
                                    BAYI İSTATİSTİKLERİ
                                </h4>
                                <div class="space-y-4">
                                    <!-- Earnings Chart -->
                                    <div class="bg-blue-50 p-4 minimal-corner">
                                        <div class="flex justify-between items-center mb-3">
                                            <span class="text-blue-700 font-medium text-sm">SON 6 SAAT KAZANÇ</span>
                                            <span class="text-amber-600 font-bold text-lg" id="provider-hourly-earnings">TL4,280</span>
                                        </div>
                                        <div class="flex items-end space-x-1 h-16">
                                            <div class="bg-blue-600 w-full" style="height: 45%"></div>
                                            <div class="bg-blue-600 w-full" style="height: 60%"></div>
                                            <div class="bg-blue-600 w-full" style="height: 80%"></div>
                                            <div class="bg-amber-500 w-full" style="height: 100%"></div>
                                            <div class="bg-blue-600 w-full" style="height: 75%"></div>
                                            <div class="bg-blue-600 w-full" style="height: 55%"></div>
                                        </div>
                                    </div>
                                    
                                    <!-- Service Category Performance -->
                                    <div class="bg-blue-50 p-4 minimal-corner">
                                        <h5 class="text-blue-700 font-bold text-sm mb-3">POPÜLER KATEGORİLER</h5>
                                        <div class="space-y-2">
                                            <div class="flex justify-between items-center">
                                                <span class="text-blue-600 text-sm">Teknik Onarım</span>
                                                <div class="flex items-center">
                                                    <div class="w-16 h-2 bg-blue-200 mr-2">
                                                        <div class="w-4/5 h-full bg-amber-500"></div>
                                                    </div>
                                                    <span class="text-blue-800 font-bold text-sm">80%</span>
                                                </div>
                                            </div>
                                            <div class="flex justify-between items-center">
                                                <span class="text-blue-600 text-sm">Ev Bakım & Tadilat</span>
                                                <div class="flex items-center">
                                                    <div class="w-16 h-2 bg-blue-200 mr-2">
                                                        <div class="w-3/4 h-full bg-blue-600"></div>
                                                    </div>
                                                    <span class="text-blue-800 font-bold text-sm">75%</span>
                                                </div>
                                            </div>
                                            <div class="flex justify-between items-center">
                                                <span class="text-blue-600 text-sm">Temizlik & Hijyen</span>
                                                <div class="flex items-center">
                                                    <div class="w-16 h-2 bg-blue-200 mr-2">
                                                        <div class="w-3/5 h-full bg-blue-600"></div>
                                                    </div>
                                                    <span class="text-blue-800 font-bold text-sm">60%</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Top Earning Cities -->
                                    <div class="bg-blue-50 p-4 minimal-corner">
                                        <h5 class="text-blue-700 font-bold text-sm mb-3">EN KAZANÇLI ŞEHİRLER</h5>
                                        <div class="grid grid-cols-2 gap-2 text-xs">
                                            <div class="flex justify-between">
                                                <span class="text-blue-600">İstanbul</span>
                                                <span class="text-amber-600 font-bold">TL1,850</span>
                                            </div>
                                            <div class="flex justify-between">
                                                <span class="text-blue-600">Ankara</span>
                                                <span class="text-blue-800 font-bold">TL1,240</span>
                                            </div>
                                            <div class="flex justify-between">
                                                <span class="text-blue-600">İzmir</span>
                                                <span class="text-blue-800 font-bold">TL980</span>
                                            </div>
                                            <div class="flex justify-between">
                                                <span class="text-blue-600">Bursa</span>
                                                <span class="text-blue-800 font-bold">TL780</span>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Live Provider Activity -->
                                    <div class="bg-amber-50 p-4 minimal-corner border border-amber-200">
                                        <h5 class="text-amber-700 font-bold text-sm mb-3 flex items-center">
                                            <i class="fas fa-users text-amber-600 mr-2"></i>
                                            AKTIF BAYI AKTIVITESI
                                        </h5>
                                        <div class="space-y-2 text-xs">
                                            <div class="flex justify-between items-center">
                                                <span class="text-amber-700">Şu anda aktif:</span>
                                                <span class="text-amber-800 font-bold text-sm">247 Bayi</span>
                                            </div>
                                            <div class="flex justify-between items-center">
                                                <span class="text-amber-700">İş arayan:</span>
                                                <span class="text-amber-800 font-bold text-sm">89 Bayi</span>
                                            </div>
                                            <div class="flex justify-between items-center">
                                                <span class="text-amber-700">Son 1 saat kazanan:</span>
                                                <span class="text-amber-800 font-bold text-sm">156 Bayi</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Modern Consultation Interface Style Service Categories -->
        <section class="py-20 bg-gradient-to-br from-purple-900 via-purple-800 to-indigo-900 relative overflow-hidden">
            <!-- Background Pattern -->
            <div class="absolute inset-0 opacity-10">
                <div class="absolute inset-0" style="background-image: radial-gradient(circle at 25% 25%, #818cf8 0%, transparent 50%), radial-gradient(circle at 75% 75%, #c084fc 0%, transparent 50%);"></div>
            </div>
            
            <div class="max-w-7xl mx-auto px-6 relative">
                <!-- Header Section -->
                <div class="text-center mb-16">
                    <div class="inline-block bg-white/10 backdrop-blur-sm px-6 py-3 rounded-full border border-white/20 mb-6">
                        <span class="text-purple-200 font-medium text-sm">
                            <i class="fas fa-sparkles mr-2"></i>
                            Size Özel Hizmet Çözümleri
                        </span>
                    </div>
                    <h2 class="text-5xl font-bold text-white mb-6 tracking-tight">
                        Uzman Konsültasyon
                        <span class="block text-transparent bg-clip-text bg-gradient-to-r from-amber-400 to-orange-500">
                            Merkezi
                        </span>
                    </h2>
                    <p class="text-xl text-purple-200 max-w-3xl mx-auto leading-relaxed">
                        Yapay zeka destekli akıllı eşleştirme sistemi ile size en uygun hizmet sağlayıcısını buluyoruz. 
                        Profesyonel danışmanlarımız her adımda yanınızda.
                    </p>
                </div>

                <!-- Main Consultation Interface -->
                <div class="bg-white/10 backdrop-blur-lg rounded-3xl border border-white/20 p-8 mb-12">
                    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                        <!-- Left: Quick Service Selection -->
                        <div class="lg:col-span-2">
                            <div class="mb-6">
                                <h3 class="text-2xl font-bold text-white mb-4 flex items-center">
                                    <div class="w-10 h-10 bg-amber-500 rounded-full flex items-center justify-center mr-3">
                                        <i class="fas fa-search text-white"></i>
                                    </div>
                                    Hangi Hizmeti Arıyorsunuz?
                                </h3>
                                <div class="grid grid-cols-2 md:grid-cols-3 gap-3">
                                    <!-- Service Categories as Interactive Cards -->
                                    <div class="consultation-service-card group bg-white/10 hover:bg-white/20 border border-white/20 hover:border-amber-400 rounded-xl p-4 cursor-pointer transition-all duration-300">
                                        <div class="text-center">
                                            <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform">
                                                <i class="fas fa-tv text-white text-xl"></i>
                                            </div>
                                            <h4 class="text-white font-semibold text-sm mb-1">Televizyon</h4>
                                            <p class="text-purple-200 text-xs">LED/OLED/Smart TV</p>
                                            <div class="text-amber-400 font-bold text-xs mt-2">₺300-2.500</div>
                                        </div>
                                    </div>

                                    <div class="consultation-service-card group bg-white/10 hover:bg-white/20 border border-white/20 hover:border-amber-400 rounded-xl p-4 cursor-pointer transition-all duration-300">
                                        <div class="text-center">
                                            <div class="w-12 h-12 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform">
                                                <i class="fas fa-laptop text-white text-xl"></i>
                                            </div>
                                            <h4 class="text-white font-semibold text-sm mb-1">Bilgisayar</h4>
                                            <p class="text-purple-200 text-xs">PC/Laptop/Gaming</p>
                                            <div class="text-amber-400 font-bold text-xs mt-2">₺200-2.000</div>
                                        </div>
                                    </div>

                                    <div class="consultation-service-card group bg-white/10 hover:bg-white/20 border border-white/20 hover:border-amber-400 rounded-xl p-4 cursor-pointer transition-all duration-300">
                                        <div class="text-center">
                                            <div class="w-12 h-12 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform">
                                                <i class="fas fa-washing-machine text-white text-xl"></i>
                                            </div>
                                            <h4 class="text-white font-semibold text-sm mb-1">Beyaz Eşya</h4>
                                            <p class="text-purple-200 text-xs">Çamaşır/Bulaşık/Buzdolabı</p>
                                            <div class="text-amber-400 font-bold text-xs mt-2">₺400-3.000</div>
                                        </div>
                                    </div>

                                    <div class="consultation-service-card group bg-white/10 hover:bg-white/20 border border-white/20 hover:border-amber-400 rounded-xl p-4 cursor-pointer transition-all duration-300">
                                        <div class="text-center">
                                            <div class="w-12 h-12 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform">
                                                <i class="fas fa-snowflake text-white text-xl"></i>
                                            </div>
                                            <h4 class="text-white font-semibold text-sm mb-1">Klima</h4>
                                            <p class="text-purple-200 text-xs">Split/VRF/Kaset</p>
                                            <div class="text-amber-400 font-bold text-xs mt-2">₺300-2.500</div>
                                        </div>
                                    </div>

                                    <div class="consultation-service-card group bg-white/10 hover:bg-white/20 border border-white/20 hover:border-amber-400 rounded-xl p-4 cursor-pointer transition-all duration-300">
                                        <div class="text-center">
                                            <div class="w-12 h-12 bg-gradient-to-br from-cyan-500 to-cyan-600 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform">
                                                <i class="fas fa-volume-up text-white text-xl"></i>
                                            </div>
                                            <h4 class="text-white font-semibold text-sm mb-1">Ses Sistemi</h4>
                                            <p class="text-purple-200 text-xs">Hoparlör/Home Theater</p>
                                            <div class="text-amber-400 font-bold text-xs mt-2">₺250-3.500</div>
                                        </div>
                                    </div>

                                    <div class="consultation-service-card group bg-white/10 hover:bg-white/20 border border-white/20 hover:border-amber-400 rounded-xl p-4 cursor-pointer transition-all duration-300">
                                        <div class="text-center">
                                            <div class="w-12 h-12 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform">
                                                <i class="fas fa-mobile-alt text-white text-xl"></i>
                                            </div>
                                            <h4 class="text-white font-semibold text-sm mb-1">Elektronik</h4>
                                            <p class="text-purple-200 text-xs">Telefon/Tablet/Konsol</p>
                                            <div class="text-amber-400 font-bold text-xs mt-2">₺150-1.800</div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Problem Description -->
                            <div class="mb-6">
                                <h3 class="text-white font-bold mb-3 flex items-center">
                                    <div class="w-8 h-8 bg-emerald-500 rounded-full flex items-center justify-center mr-3">
                                        <i class="fas fa-comments text-white text-sm"></i>
                                    </div>
                                    Sorununuzu Detaylandırın
                                </h3>
                                <textarea 
                                    class="w-full bg-white/10 backdrop-blur border border-white/20 rounded-xl p-4 text-white placeholder-purple-200 focus:border-amber-400 focus:outline-none transition-colors resize-none"
                                    rows="4"
                                    placeholder="Cihazınızın marka, model ve yaşadığınız sorunu detaylı olarak açıklayın. Örn: Samsung 55" Smart TV açılıyor ama görüntü gelmiyor, ses var..."
                                ></textarea>
                            </div>

                            <!-- Quick Contact -->
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div>
                                    <label class="block text-purple-200 font-medium mb-2">Telefon Numaranız</label>
                                    <input 
                                        type="tel"
                                        class="w-full bg-white/10 backdrop-blur border border-white/20 rounded-xl p-3 text-white placeholder-purple-200 focus:border-amber-400 focus:outline-none transition-colors"
                                        placeholder="05XX XXX XX XX"
                                    >
                                </div>
                                <div>
                                    <label class="block text-purple-200 font-medium mb-2">Şehir</label>
                                    <select class="w-full bg-white/10 backdrop-blur border border-white/20 rounded-xl p-3 text-white focus:border-amber-400 focus:outline-none transition-colors">
                                        <option value="" class="bg-gray-800">Şehir Seçin</option>
                                        <option value="istanbul" class="bg-gray-800">İstanbul</option>
                                        <option value="ankara" class="bg-gray-800">Ankara</option>
                                        <option value="izmir" class="bg-gray-800">İzmir</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <!-- Right: AI Consultant & Pricing -->
                        <div class="lg:col-span-1">
                            <!-- AI Consultant Card -->
                            <div class="bg-gradient-to-br from-amber-500/20 to-orange-500/20 backdrop-blur border border-amber-400/30 rounded-2xl p-6 mb-6">
                                <div class="text-center mb-4">
                                    <div class="w-16 h-16 bg-gradient-to-br from-amber-400 to-orange-500 rounded-full mx-auto mb-3 flex items-center justify-center">
                                        <i class="fas fa-robot text-white text-2xl"></i>
                                    </div>
                                    <h3 class="text-white font-bold text-lg">AI Danışman</h3>
                                    <p class="text-amber-200 text-sm">Akıllı Fiyat Hesaplama</p>
                                </div>
                                <div class="space-y-3">
                                    <div class="flex justify-between items-center py-2 border-b border-amber-400/20">
                                        <span class="text-amber-200">Ortalama Süre:</span>
                                        <span class="text-white font-semibold">45 dakika</span>
                                    </div>
                                    <div class="flex justify-between items-center py-2 border-b border-amber-400/20">
                                        <span class="text-amber-200">Tahmini Maliyet:</span>
                                        <span class="text-white font-semibold">₺350-750</span>
                                    </div>
                                    <div class="flex justify-between items-center py-2">
                                        <span class="text-amber-200">Garanti Süresi:</span>
                                        <span class="text-white font-semibold">6 Ay</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Expert Stats -->
                            <div class="bg-white/5 backdrop-blur border border-white/10 rounded-2xl p-6">
                                <h3 class="text-white font-bold mb-4 flex items-center">
                                    <i class="fas fa-users text-emerald-400 mr-2"></i>
                                    Uzman Durumu
                                </h3>
                                <div class="space-y-4">
                                    <div class="flex items-center justify-between">
                                        <div class="flex items-center">
                                            <div class="w-3 h-3 bg-emerald-400 rounded-full mr-2 animate-pulse"></div>
                                            <span class="text-purple-200">Çevrimiçi Uzman:</span>
                                        </div>
                                        <span class="text-white font-bold">47 Kişi</span>
                                    </div>
                                    <div class="flex items-center justify-between">
                                        <div class="flex items-center">
                                            <div class="w-3 h-3 bg-blue-400 rounded-full mr-2"></div>
                                            <span class="text-purple-200">Ortalama Puanlama:</span>
                                        </div>
                                        <span class="text-white font-bold">4.8/5.0</span>
                                    </div>
                                    <div class="flex items-center justify-between">
                                        <div class="flex items-center">
                                            <div class="w-3 h-3 bg-amber-400 rounded-full mr-2"></div>
                                            <span class="text-purple-200">Bugün Çözülen:</span>
                                        </div>
                                        <span class="text-white font-bold">127 İş</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="flex flex-col md:flex-row gap-4 mt-8">
                        <button class="flex-1 bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600 text-white font-bold py-4 px-6 rounded-xl transition-all duration-300 transform hover:scale-105 flex items-center justify-center">
                            <i class="fas fa-brain mr-2"></i>
                            AI ile Ücretsiz Analiz Yap
                        </button>
                        <button class="flex-1 bg-gradient-to-r from-emerald-500 to-teal-500 hover:from-emerald-600 hover:to-teal-600 text-white font-bold py-4 px-6 rounded-xl transition-all duration-300 transform hover:scale-105 flex items-center justify-center">
                            <i class="fas fa-phone mr-2"></i>
                            Hemen Uzmanla Konuş
                        </button>
                        <button class="bg-white/10 hover:bg-white/20 border border-white/20 hover:border-white/40 text-white font-semibold py-4 px-6 rounded-xl transition-all duration-300 flex items-center justify-center">
                            <i class="fas fa-whatsapp mr-2"></i>
                            WhatsApp
                        </button>
                    </div>
                </div>

                <!-- Success Statistics -->
                <div class="grid grid-cols-2 md:grid-cols-4 gap-6 mt-12">
                    <div class="text-center">
                        <div class="w-16 h-16 bg-gradient-to-br from-emerald-500 to-teal-500 rounded-full mx-auto mb-4 flex items-center justify-center">
                            <i class="fas fa-check-circle text-white text-2xl"></i>
                        </div>
                        <div class="text-3xl font-bold text-white mb-2">98.7%</div>
                        <div class="text-purple-200 text-sm font-medium">Başarı Oranı</div>
                    </div>
                    <div class="text-center">
                        <div class="w-16 h-16 bg-gradient-to-br from-blue-500 to-indigo-500 rounded-full mx-auto mb-4 flex items-center justify-center">
                            <i class="fas fa-clock text-white text-2xl"></i>
                        </div>
                        <div class="text-3xl font-bold text-white mb-2">15dk</div>
                        <div class="text-purple-200 text-sm font-medium">Ortalama Yanıt</div>
                    </div>
                    <div class="text-center">
                        <div class="w-16 h-16 bg-gradient-to-br from-amber-500 to-orange-500 rounded-full mx-auto mb-4 flex items-center justify-center">
                            <i class="fas fa-shield-alt text-white text-2xl"></i>
                        </div>
                        <div class="text-3xl font-bold text-white mb-2">6 Ay</div>
                        <div class="text-purple-200 text-sm font-medium">Garanti Süresi</div>
                    </div>
                    <div class="text-center">
                        <div class="w-16 h-16 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full mx-auto mb-4 flex items-center justify-center">
                            <i class="fas fa-users text-white text-2xl"></i>
                        </div>
                        <div class="text-3xl font-bold text-white mb-2">50K+</div>
                        <div class="text-purple-200 text-sm font-medium">Mutlu Müşteri</div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Mobile App Download Section for Providers -->
        <section class="py-20 bg-white border-t-2 border-blue-100">
            <div class="max-w-7xl mx-auto px-6">
                <div class="bg-blue-900 minimal-corner overflow-hidden" style="background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);">
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-0">
                        <!-- Left: App Info -->
                        <div class="p-12">
                            <div class="mb-8">
                                <div class="mb-4">
                                    <div class="flex items-center mb-2">
                                        <img src="/static/garantor360-logo-white.png" alt="Garantor360" class="h-40">
                                    </div>
                                    <p class="text-amber-400 font-medium">Bayi Web Platformu</p>
                                </div>
                                
                                <h4 class="text-3xl font-bold text-white mb-6 leading-tight">
                                    ISLERINIZI HER CIHAZDAN
                                    <span class="block text-amber-400">YONETIN!</span>
                                </h4>
                                
                                <p class="text-blue-200 text-lg mb-8 leading-relaxed">
                                    Web tabanli panelimizle is takibini, musteri iletisimini ve odeme sureclerini 
                                    her cihazdan kolayca yonetin. Responsive tasarim ile masaustu ve mobilde mukemmel deneyim.
                                </p>
                            </div>

                            <!-- App Features -->
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-8">
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-amber-500 sharp-corner flex items-center justify-center mr-3">
                                        <i class="fas fa-bell text-white text-sm"></i>
                                    </div>
                                    <span class="text-blue-200 font-medium">Aninda Bildirimler</span>
                                </div>
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-amber-500 sharp-corner flex items-center justify-center mr-3">
                                        <i class="fas fa-map-marker-alt text-white text-sm"></i>
                                    </div>
                                    <span class="text-blue-200 font-medium">GPS Is Takibi</span>
                                </div>
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-amber-500 sharp-corner flex items-center justify-center mr-3">
                                        <i class="fas fa-credit-card text-white text-sm"></i>
                                    </div>
                                    <span class="text-blue-200 font-medium">Odeme Takibi</span>
                                </div>
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-amber-500 sharp-corner flex items-center justify-center mr-3">
                                        <i class="fas fa-comments text-white text-sm"></i>
                                    </div>
                                    <span class="text-blue-200 font-medium">Musteri Mesajlari</span>
                                </div>
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-amber-500 sharp-corner flex items-center justify-center mr-3">
                                        <i class="fas fa-camera text-white text-sm"></i>
                                    </div>
                                    <span class="text-blue-200 font-medium">Fotograf Paylasimi</span>
                                </div>
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-amber-500 sharp-corner flex items-center justify-center mr-3">
                                        <i class="fas fa-chart-line text-white text-sm"></i>
                                    </div>
                                    <span class="text-blue-200 font-medium">Kazanc Raporlari</span>
                                </div>
                            </div>

                            <!-- Web Access Buttons -->
                            <div class="flex flex-col sm:flex-row gap-4">
                                <a href="/bayi/login" class="flex items-center bg-amber-500 text-white px-8 py-4 sharp-corner hover:bg-amber-600 transition duration-200 font-bold">
                                    <i class="fas fa-globe text-2xl mr-3"></i>
                                    <div class="text-lg">BAYI PANELINE GIRIS</div>
                                </a>
                                <a href="/bayi/demo" class="flex items-center bg-white text-blue-900 px-8 py-4 sharp-corner hover:bg-gray-100 transition duration-200 font-bold">
                                    <i class="fas fa-play text-xl mr-3"></i>
                                    <div class="text-lg">DEMO IZLE</div>
                                </a>
                            </div>
                        </div>

                        <!-- Right: Browser Mockup -->
                        <div class="flex items-center justify-center p-12 bg-gradient-to-br from-blue-800 to-blue-900">
                            <div class="relative">
                                <!-- Browser Frame -->
                                <div class="w-80 h-[520px] bg-gray-900 rounded-lg shadow-2xl relative">
                                    <!-- Browser Top Bar -->
                                    <div class="bg-gray-800 rounded-t-lg px-4 py-3 flex items-center">
                                        <div class="flex space-x-2 mr-4">
                                            <div class="w-3 h-3 bg-red-500 rounded-full"></div>
                                            <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
                                            <div class="w-3 h-3 bg-green-500 rounded-full"></div>
                                        </div>
                                        <div class="bg-gray-700 text-gray-300 text-xs px-3 py-1 rounded flex-1">
                                            garantor360.com/bayi
                                        </div>
                                    </div>
                                    
                                    <!-- Web Interface -->
                                    <div class="w-full h-full bg-white overflow-hidden relative rounded-b-lg">
                                        <!-- Web Dashboard Navigation -->
                                        <div class="bg-blue-900 text-white px-4 py-3 flex items-center justify-between">
                                            <div class="flex items-center">
                                                <span class="text-lg font-bold text-amber-400">Garantor360</span>
                                                <span class="text-sm ml-2 text-blue-200">Bayi Paneli</span>
                                            </div>
                                            <div class="flex items-center">
                                                <span class="text-sm mr-3">Ahmet B.</span>
                                                <i class="fas fa-user-circle text-xl"></i>
                                            </div>
                                        </div>

                                        <!-- Dashboard Content -->
                                        <div class="px-4 py-4">
                                            <!-- Dashboard Header -->
                                            <div class="mb-4">
                                                <h5 class="font-bold text-gray-900 text-lg">Dashboard</h5>
                                                <p class="text-gray-600 text-sm">Bugun 3 yeni is talebi var</p>
                                            </div>

                                            <!-- Stats Cards - Web Style -->
                                            <div class="grid grid-cols-2 gap-3 mb-4">
                                                <div class="bg-gradient-to-r from-blue-500 to-blue-600 text-white p-3 rounded-lg shadow">
                                                    <div class="text-2xl font-bold">TL2,340</div>
                                                    <div class="text-blue-100 text-sm">Bu Hafta Kazanc</div>
                                                </div>
                                                <div class="bg-gradient-to-r from-orange-500 to-orange-600 text-white p-3 rounded-lg shadow">
                                                    <div class="text-2xl font-bold">12</div>
                                                    <div class="text-orange-100 text-sm">Aktif Is</div>
                                                </div>
                                            </div>

                                            <!-- Recent Jobs - Web Table Style -->
                                            <div class="space-y-2">
                                                <h6 class="font-bold text-gray-900 text-sm mb-3">Son Isler</h6>
                                                
                                                <div class="bg-white border border-gray-200 rounded-lg p-3 shadow-sm">
                                                    <div class="flex justify-between items-center">
                                                        <div>
                                                            <div class="font-medium text-gray-900 text-sm">Klima Montaji</div>
                                                            <div class="text-gray-500 text-xs">Kadikoy - 14:30</div>
                                                        </div>
                                                        <div class="text-green-600 font-bold text-sm">TL450</div>
                                                    </div>
                                                </div>

                                                <div class="bg-white border border-gray-200 rounded-lg p-3 shadow-sm">
                                                    <div class="flex justify-between items-center">
                                                        <div>
                                                            <div class="font-medium text-gray-900 text-sm">Beyaz Esya Tamiri</div>
                                                            <div class="text-gray-500 text-xs">Uskudar - 16:00</div>
                                                        </div>
                                                        <div class="text-blue-600 font-bold text-sm">TL280</div>
                                                    </div>
                                                </div>

                                                <div class="bg-white border border-gray-200 rounded-lg p-3 shadow-sm">
                                                    <div class="flex justify-between items-center">
                                                        <div>
                                                            <div class="font-medium text-gray-900 text-sm">Ev Temizligi</div>
                                                            <div class="text-gray-500 text-xs">Besiktas - 17:30</div>
                                                        </div>
                                                        <div class="text-yellow-600 font-bold text-sm">TL200</div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                    </div>
                                </div>

                                <!-- Floating Elements -->
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Platform Statistics -->
                <div class="mt-12 grid grid-cols-1 md:grid-cols-4 gap-6">
                    <div class="text-center p-6 bg-blue-50 minimal-corner">
                        <div class="text-3xl font-bold text-blue-900 mb-2">50K+</div>
                        <div class="text-blue-600 font-medium">Aktif Kullanici</div>
                        <div class="text-blue-500 text-sm">Web platformunda</div>
                    </div>
                    <div class="text-center p-6 bg-amber-50 minimal-corner">
                        <div class="text-3xl font-bold text-amber-600 mb-2">4.8★</div>
                        <div class="text-amber-700 font-medium">Kullanici Puani</div>
                        <div class="text-amber-600 text-sm">5 yildiz uzerinden</div>
                    </div>
                    <div class="text-center p-6 bg-blue-50 minimal-corner">
                        <div class="text-3xl font-bold text-blue-900 mb-2">24/7</div>
                        <div class="text-blue-600 font-medium">Web Destek</div>
                        <div class="text-blue-500 text-sm">Kesintisiz hizmet</div>
                    </div>
                    <div class="text-center p-6 bg-amber-50 minimal-corner">
                        <div class="text-3xl font-bold text-amber-600 mb-2">%99.9</div>
                        <div class="text-amber-700 font-medium">Uptime</div>
                        <div class="text-amber-600 text-sm">Guvenilir platform</div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Provider Benefits - Enhanced with Deep Blue/Amber theme -->
        <section class="py-24 bg-blue-900" style="background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);">
            <div class="max-w-7xl mx-auto px-6">
                <!-- Enhanced Header -->
                <div class="text-center mb-20">
                    <div class="section-divider w-24 mx-auto mb-8" style="background: linear-gradient(90deg, transparent, #f59e0b, transparent);"></div>
                    <h2 class="text-5xl font-bold mb-6 text-white tracking-tight">
                        NEDEN GARANTİR360'DA
                        <span class="block text-amber-400 mt-2">HİZMET VERMELİSİNİZ?</span>
                    </h2>
                    <p class="text-xl text-blue-200 font-medium max-w-3xl mx-auto leading-relaxed">
                        Türkiye'nin en güvenilir platformunda profesyonel iş ortakığının benzersiz avantajları
                    </p>
                </div>

                <!-- Enhanced Benefits Grid -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16">
                    <!-- Guaranteed Payment -->
                    <div class="bg-white p-8 minimal-corner card-corporate group hover:border-amber-400 border-2 border-transparent">
                        <div class="text-center">
                            <div class="w-16 h-16 bg-blue-900 sharp-corner mx-auto mb-6 flex items-center justify-center group-hover:bg-amber-500 transition duration-300">
                                <i class="fas fa-hand-holding-usd text-white text-2xl"></i>
                            </div>
                            <h3 class="text-xl font-bold mb-4 text-blue-900 tracking-tight">GARANTİLİ ÖDEME SİSTEMİ</h3>
                            <p class="text-blue-600 mb-6 font-medium leading-relaxed">
                                İş tamamlandığında ödemeniz %100 garantili. Platform escrow sistemi ile para güvencesi.
                            </p>
                            <div class="bg-blue-50 p-3 minimal-corner">
                                <span class="text-amber-600 font-bold text-lg">⚡ Anında Ödeme</span>
                                <p class="text-blue-600 text-sm mt-1">İş onaylandıktan sonra 24 saat içinde</p>
                            </div>
                        </div>
                    </div>

                    <!-- Continuous Work Flow -->
                    <div class="bg-blue-900 text-white p-8 minimal-corner card-corporate group">
                        <div class="text-center">
                            <div class="w-16 h-16 bg-amber-500 sharp-corner mx-auto mb-6 flex items-center justify-center group-hover:bg-white group-hover:text-blue-900 transition duration-300">
                                <i class="fas fa-sync-alt text-2xl"></i>
                            </div>
                            <h3 class="text-xl font-bold mb-4 text-white tracking-tight">SUREKLI IS AKISI</h3>
                            <p class="text-blue-200 mb-6 font-medium leading-relaxed">
                                Gunde ortalama 127 yeni is talebi. Hic is arayisiniz olmayacak.
                            </p>
                            <div class="bg-blue-800 p-3 minimal-corner">
                                <span class="text-amber-400 font-bold text-lg">📊 %97 İş Garantisi</span>
                                <p class="text-blue-200 text-sm mt-1">Aktif bayilerimizin ortalaması</p>
                            </div>
                        </div>
                    </div>

                    <!-- Professional Image -->
                    <div class="bg-white p-8 minimal-corner card-corporate group hover:border-amber-400 border-2 border-transparent">
                        <div class="text-center">
                            <div class="w-16 h-16 bg-blue-900 sharp-corner mx-auto mb-6 flex items-center justify-center group-hover:bg-amber-500 transition duration-300">
                                <i class="fas fa-certificate text-white text-2xl"></i>
                            </div>
                            <h3 class="text-xl font-bold mb-4 text-blue-900 tracking-tight">PROFESYONEL İMAJ</h3>
                            <p class="text-blue-600 mb-6 font-medium leading-relaxed">
                                Garantor360 kalite sertifikası ile müşteri güveni ve prestij kazanın.
                            </p>
                            <div class="bg-blue-50 p-3 minimal-corner">
                                <span class="text-amber-600 font-bold text-lg">🏆 Marka Degeri</span>
                                <p class="text-blue-600 text-sm mt-1">Turkiye'nin en guvenilir platformu</p>
                            </div>
                        </div>
                    </div>

                    <!-- Marketing Support -->
                    <div class="bg-white p-8 minimal-corner card-corporate group hover:border-amber-400 border-2 border-transparent">
                        <div class="text-center">
                            <div class="w-16 h-16 bg-blue-900 sharp-corner mx-auto mb-6 flex items-center justify-center group-hover:bg-amber-500 transition duration-300">
                                <i class="fas fa-bullhorn text-white text-2xl"></i>
                            </div>
                            <h3 class="text-xl font-bold mb-4 text-blue-900 tracking-tight">PAZARLAMA DESTEĞİ</h3>
                            <p class="text-blue-600 mb-6 font-medium leading-relaxed">
                                Milyonlarca TL'lik reklam yatırımımızdan ücretsiz faydalanın. Müşteri bulma derdi yok.
                            </p>
                            <div class="bg-blue-50 p-3 minimal-corner">
                                <span class="text-amber-600 font-bold text-lg">📈 0 Reklam Masrafı</span>
                                <p class="text-blue-600 text-sm mt-1">Platform tum pazarlamayi yapiyor</p>
                            </div>
                        </div>
                    </div>

                    <!-- Legal Protection -->
                    <div class="bg-amber-500 text-blue-900 p-8 minimal-corner card-corporate group">
                        <div class="text-center">
                            <div class="w-16 h-16 bg-blue-900 sharp-corner mx-auto mb-6 flex items-center justify-center group-hover:bg-white transition duration-300">
                                <i class="fas fa-balance-scale text-white group-hover:text-blue-900 text-2xl"></i>
                            </div>
                            <h3 class="text-xl font-bold mb-4 text-blue-900 tracking-tight">HUKUKI KORUMA</h3>
                            <p class="text-blue-800 mb-6 font-medium leading-relaxed">
                                Anlasmazliklarda profesyonel hukuk ekibimiz yaninizda. Guvende hissedin.
                            </p>
                            <div class="bg-amber-400 p-3 minimal-corner">
                                <span class="text-blue-900 font-bold text-lg">⚖️ Ucretsiz Hukuki Destek</span>
                                <p class="text-blue-800 text-sm mt-1">24/7 danismanlik hizmeti</p>
                            </div>
                        </div>
                    </div>

                    <!-- Training & Development -->
                    <div class="bg-white p-8 minimal-corner card-corporate group hover:border-amber-400 border-2 border-transparent">
                        <div class="text-center">
                            <div class="w-16 h-16 bg-blue-900 sharp-corner mx-auto mb-6 flex items-center justify-center group-hover:bg-amber-500 transition duration-300">
                                <i class="fas fa-graduation-cap text-white text-2xl"></i>
                            </div>
                            <h3 class="text-xl font-bold mb-4 text-blue-900 tracking-tight">EGITIM & GELISIM</h3>
                            <p class="text-blue-600 mb-6 font-medium leading-relaxed">
                                Surekli egitim programlari ve sertifikasyonlar ile kendinizi gelistirin.
                            </p>
                            <div class="bg-blue-50 p-3 minimal-corner">
                                <span class="text-amber-600 font-bold text-lg">🎓 Ucretsiz Egitimler</span>
                                <p class="text-blue-600 text-sm mt-1">Aylik uzman egitim programlari</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Success Metrics Section -->
                <div class="bg-white p-8 minimal-corner">
                    <div class="text-center mb-8">
                        <h3 class="text-3xl font-bold text-blue-900 mb-4 tracking-tight">
                            BASARI ISTATISTIKLERIMIZ
                        </h3>
                        <p class="text-blue-600 text-lg font-medium">Platform performansimizi rakamlarla gorun</p>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
                        <div class="text-center p-6 bg-blue-50 minimal-corner">
                            <div class="text-4xl font-bold text-blue-900 mb-2">%98.7</div>
                            <div class="text-blue-600 font-semibold text-sm">ODEME BASARI ORANI</div>
                            <div class="text-blue-500 text-xs mt-1">Son 12 ay ortalamasi</div>
                        </div>

                        <div class="text-center p-6 bg-amber-50 minimal-corner">
                            <div class="text-4xl font-bold text-amber-600 mb-2">TL2.3M</div>
                            <div class="text-amber-700 font-semibold text-sm">AYLIK ODENEN TUTAR</div>
                            <div class="text-amber-600 text-xs mt-1">Bayilerimize odenen toplam</div>
                        </div>

                        <div class="text-center p-6 bg-blue-50 minimal-corner">
                            <div class="text-4xl font-bold text-blue-900 mb-2">24dk</div>
                            <div class="text-blue-600 font-semibold text-sm">ORTALAMA ODEME SURESI</div>
                            <div class="text-blue-500 text-xs mt-1">Is tamamlandiktan sonra</div>
                        </div>

                        <div class="text-center p-6 bg-amber-50 minimal-corner">
                            <div class="text-4xl font-bold text-amber-600 mb-2">4.8★</div>
                            <div class="text-amber-700 font-semibold text-sm">BAYI MEMNUNIYET PUANI</div>
                            <div class="text-amber-600 text-xs mt-1">5 uzerinden ortalama</div>
                        </div>
                    </div>
                </div>

                <!-- Call to Action -->
                <div class="text-center mt-16">
                    <div class="bg-amber-500 text-blue-900 p-8 minimal-corner inline-block max-w-2xl">
                        <h4 class="text-2xl font-bold mb-4 tracking-tight">
                            <i class="fas fa-rocket mr-2"></i>
                            SIZ DE BU BASARININ PARCASI OLUN!
                        </h4>
                        <p class="text-blue-800 font-medium mb-6 leading-relaxed">
                            Bugun basvuru yapin, 24 saat icinde degerlendirme sonucunuzu alin. 
                            Basarili bayilerimizin %89'u ilk ayinda hedeflerini asti.
                        </p>
                        <button onclick="scrollToApplication()" class="bg-blue-900 text-white px-10 py-4 sharp-corner font-bold text-lg hover:bg-blue-800 transition duration-200 shadow-lg">
                            HEMEN BASVUR
                        </button>
                    </div>
                </div>
            </div>
        </section>

        <!-- Call to Action - Provider Application -->
        <section class="py-20 bg-white" id="application">
            <div class="max-w-4xl mx-auto text-center px-6">
                <div class="section-divider w-32 mx-auto mb-8"></div>
                <h2 class="text-5xl font-bold text-slate-800 mb-8 tracking-tight">
                    PROFESYONEL ORTAKLIK
                </h2>
                <p class="text-xl text-slate-600 mb-12 font-medium max-w-2xl mx-auto">
                    5 dakikada basvuru yapin ve profesyonel is agimizin bir parcasi olun. 
                    Sifir yatirim, garantili kazanc.
                </p>
                <div class="flex flex-col sm:flex-row gap-4 justify-center mb-8">
                    <a href="/bayi/login" class="bg-orange-600 text-white px-12 py-4 sharp-corner font-bold text-lg hover:bg-orange-700 transition duration-200 shadow-lg">
                        BASVURU YAP
                    </a>
                    <a href="tel:+905001234567" onclick="trackPhoneCall('+905001234567')" class="border-2 border-orange-600 text-orange-600 px-12 py-4 sharp-corner font-bold text-lg hover:bg-orange-600 hover:text-white transition duration-200">
                        0 500 123 45 67
                    </a>
                </div>
                <p class="text-sm text-slate-600 font-semibold">
                    <span class="inline-block w-2 h-2 bg-orange-600 sharp-corner mr-2"></span>
                    Basvuru ucretsiz - On odeme yok - Aninda degerlendirme
                </p>
            </div>
        </section>

        <!-- Enhanced Footer -->
        <footer class="bg-blue-900 text-white" style="background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);">
            <!-- Main Footer Content -->
            <div class="py-16">
                <div class="max-w-7xl mx-auto px-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-8">
                        <!-- Company Info -->
                        <div class="lg:col-span-1">
                            <div class="mb-6">
                                <div class="flex items-center">
                                    <div class="text-2xl font-bold">
                                        <span class="text-white">Garantor</span><span class="text-amber-500">360°</span>
                                    </div>
                                </div>
                            </div>
                            <p class="text-blue-200 font-medium mb-6 leading-relaxed">
                                Turkiye'nin ilk tam guvenceli hizmet platformu. Bayi odakli yaklasimla 
                                surdurulebilir is ortakligi kuran dijital ekosistem.
                            </p>
                            
                            <!-- Trust Indicators -->
                            <div class="grid grid-cols-2 gap-4 mb-6">
                                <div class="text-center">
                                    <div class="text-amber-400 font-bold text-2xl">589</div>
                                    <div class="text-blue-300 text-xs">Aktif Bayi</div>
                                </div>
                                <div class="text-center">
                                    <div class="text-amber-400 font-bold text-2xl">TL2.3M</div>
                                    <div class="text-blue-300 text-xs">Aylik Odeme</div>
                                </div>
                            </div>

                            <!-- Certifications -->
                            <div class="flex flex-wrap gap-2">
                                <div class="bg-blue-800 px-3 py-1 sharp-corner">
                                    <span class="text-xs font-bold text-amber-400">ISO 9001</span>
                                </div>
                                <div class="bg-blue-800 px-3 py-1 sharp-corner">
                                    <span class="text-xs font-bold text-amber-400">6 AY GARANTI</span>
                                </div>
                                <div class="bg-blue-800 px-3 py-1 sharp-corner">
                                    <span class="text-xs font-bold text-amber-400">7/24 DESTEK</span>
                                </div>
                            </div>
                        </div>

                        <!-- Service Categories -->
                        <div>
                            <h4 class="font-bold text-lg mb-6 tracking-tight text-amber-400">HİZMET ALANLARI</h4>
                            <ul class="space-y-3">
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-tools mr-2 text-amber-500 text-sm"></i>Teknik Onarim
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-home mr-2 text-amber-500 text-sm"></i>Ev Bakim & Tadilat
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-broom mr-2 text-amber-500 text-sm"></i>Temizlik & Hijyen
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-wrench mr-2 text-amber-500 text-sm"></i>Kombi & Klima
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-paint-roller mr-2 text-amber-500 text-sm"></i>Boyama & Badana
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-bolt mr-2 text-amber-500 text-sm"></i>Elektrik Isleri
                                </a></li>
                            </ul>
                        </div>

                        <!-- Dealer Resources -->
                        <div>
                            <h4 class="font-bold text-lg mb-6 tracking-tight text-amber-400">BAYI KAYNAKLARI</h4>
                            <ul class="space-y-3">
                                <li><a href="/bayi/login" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-sign-in-alt mr-2 text-amber-500 text-sm"></i>Bayi Giris
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-graduation-cap mr-2 text-amber-500 text-sm"></i>Egitim Merkezi
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-file-alt mr-2 text-amber-500 text-sm"></i>Basvuru Formu
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-calculator mr-2 text-amber-500 text-sm"></i>Kazanc Hesaplama
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-question-circle mr-2 text-amber-500 text-sm"></i>SSS
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-book mr-2 text-amber-500 text-sm"></i>Bayi Rehberi
                                </a></li>
                            </ul>
                        </div>

                        <!-- Contact & Support -->
                        <div>
                            <h4 class="font-bold text-lg mb-6 tracking-tight text-amber-400">İLETİŞİM & DESTEK</h4>
                            
                            <!-- Contact Methods -->
                            <div class="space-y-4 mb-6">
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-amber-500 sharp-corner flex items-center justify-center mr-3">
                                        <i class="fas fa-phone text-white text-sm"></i>
                                    </div>
                                    <div>
                                        <a href="tel:+905001234567" onclick="trackPhoneCall('+905001234567')" onclick="trackPhoneCall('+905001234567')" class="text-white font-medium hover:text-amber-400 transition duration-200">0 500 123 45 67</a>
                                        <p class="text-blue-300 text-xs">Bayi Destek Hatti</p>
                                    </div>
                                </div>
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-amber-500 sharp-corner flex items-center justify-center mr-3">
                                        <i class="fas fa-envelope text-white text-sm"></i>
                                    </div>
                                    <div>
                                        <a href="mailto:bayi@garantor360.com" class="text-white font-medium hover:text-amber-400 transition duration-200">bayi@garantor360.com</a>
                                        <p class="text-blue-300 text-xs">Bayi Iletisim</p>
                                    </div>
                                </div>
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-amber-500 sharp-corner flex items-center justify-center mr-3">
                                        <i class="fas fa-comments text-white text-sm"></i>
                                    </div>
                                    <div>
                                        <span class="text-white font-medium">Canlı Destek</span>
                                        <p class="text-blue-300 text-xs">7/24 Aktif</p>
                                    </div>
                                </div>
                            </div>

                            <!-- Working Hours -->
                            <div class="mb-6">
                                <h5 class="font-bold text-sm mb-3 text-amber-400 flex items-center">
                                    <i class="fas fa-clock mr-2"></i>ÇALIŞMA SAATLERİ
                                </h5>
                                <div class="text-blue-200 text-sm space-y-1">
                                    <div class="flex justify-between">
                                        <span>Pazartesi - Cuma:</span>
                                        <span class="text-white">08:00 - 18:00</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span>Cumartesi:</span>
                                        <span class="text-white">09:00 - 17:00</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span class="text-amber-400 font-medium">Acil Destek:</span>
                                        <span class="text-amber-400 font-bold">7/24</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Social Media -->
                            <div>
                                <h5 class="font-bold text-sm mb-3 text-amber-400">SOSYAL MEDYA</h5>
                                <div class="flex space-x-2">
                                    <!-- Facebook - Brand Blue -->
                                    <a href="#" class="w-9 h-9 bg-[#1877f2] rounded-lg flex items-center justify-center text-white hover:bg-[#166fe5] hover:scale-105 hover:-translate-y-1 transition-all duration-300 shadow-md hover:shadow-lg">
                                        <i class="fab fa-facebook-f text-sm"></i>
                                    </a>
                                    <!-- Twitter/X - Brand Blue -->
                                    <a href="#" class="w-9 h-9 bg-[#1d9bf0] rounded-lg flex items-center justify-center text-white hover:bg-[#1a8cd8] hover:scale-105 hover:-translate-y-1 transition-all duration-300 shadow-md hover:shadow-lg">
                                        <i class="fab fa-twitter text-sm"></i>
                                    </a>
                                    <!-- Instagram - Gradient Pink/Orange -->
                                    <a href="#" class="w-9 h-9 bg-gradient-to-br from-[#833ab4] via-[#fd1d1d] to-[#fcb045] rounded-lg flex items-center justify-center text-white hover:from-[#7530a1] hover:via-[#e41a1a] hover:to-[#e39e3e] hover:scale-105 hover:-translate-y-1 transition-all duration-300 shadow-md hover:shadow-lg">
                                        <i class="fab fa-instagram text-sm"></i>
                                    </a>
                                    <!-- LinkedIn - Brand Blue -->
                                    <a href="#" class="w-9 h-9 bg-[#0077b5] rounded-lg flex items-center justify-center text-white hover:bg-[#006ba1] hover:scale-105 hover:-translate-y-1 transition-all duration-300 shadow-md hover:shadow-lg">
                                        <i class="fab fa-linkedin text-sm"></i>
                                    </a>
                                    <!-- YouTube - Brand Red -->
                                    <a href="#" class="w-9 h-9 bg-[#ff0000] rounded-lg flex items-center justify-center text-white hover:bg-[#e60000] hover:scale-105 hover:-translate-y-1 transition-all duration-300 shadow-md hover:shadow-lg">
                                        <i class="fab fa-youtube text-sm"></i>
                                    </a>
                                </div>
                            </div>
                        </div>

                        <!-- Corporate Services -->
                        <div>
                            <h4 class="font-bold text-lg mb-6 tracking-tight text-amber-400">KURUMSAL HİZMETLER</h4>
                            <ul class="space-y-3">
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-building mr-2 text-amber-500 text-sm"></i>Otel Tamir Servisi
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-industry mr-2 text-amber-500 text-sm"></i>Fabrika Bakım Hizmetleri
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-store mr-2 text-amber-500 text-sm"></i>Mağaza Teknik Destek
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-hospital mr-2 text-amber-500 text-sm"></i>Hastane Ekipman Bakımı
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-school mr-2 text-amber-500 text-sm"></i>Okul Teknoloji Servisi
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-handshake mr-2 text-amber-500 text-sm"></i>Kurumsal Anlaşmalar
                                </a></li>
                            </ul>
                            <div class="mt-4 p-3 bg-amber-500/10 border border-amber-400/30 rounded-lg">
                                <p class="text-amber-300 text-xs font-semibold mb-1">
                                    <i class="fas fa-star mr-1"></i>KURUMSAL AVANTAJLAR
                                </p>
                                <ul class="text-blue-200 text-xs space-y-1">
                                    <li>• Toplu hizmet indirimleri</li>
                                    <li>• 7/24 öncelikli destek</li>
                                    <li>• Özel fiyatlandırma</li>
                                    <li>• Aylık bakım anlaşmaları</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Action Bar -->
            <div class="bg-amber-500 py-4">
                <div class="max-w-7xl mx-auto px-6">
                    <div class="flex flex-col lg:flex-row items-center justify-between">
                        <div class="flex items-center mb-4 lg:mb-0">
                            <i class="fas fa-rocket text-blue-900 text-xl mr-3"></i>
                            <div>
                                <h5 class="text-blue-900 font-bold">HEMEN BASVURU YAPIN</h5>
                                <p class="text-blue-800 text-sm">24 saat icinde degerlendirme sonucu</p>
                            </div>
                        </div>
                        <div class="flex space-x-4">
                            <button onclick="scrollToApplication()" class="bg-blue-900 text-white px-6 py-3 sharp-corner font-bold hover:bg-blue-800 transition duration-200">
                                BASVUR
                            </button>
                            <a href="tel:+905001234567" onclick="trackPhoneCall('+905001234567')" class="border-2 border-blue-900 text-blue-900 px-6 py-3 sharp-corner font-bold hover:bg-blue-900 hover:text-white transition duration-200">
                                ARA
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Bottom Footer -->
            <div class="bg-blue-950 py-6">
                <div class="max-w-7xl mx-auto px-6">
                    <div class="flex flex-col lg:flex-row justify-between items-center">
                        <!-- Copyright -->
                        <div class="text-blue-300 text-sm mb-4 lg:mb-0">
                            &copy; 2024 Garantor360. Tum haklari saklidir. | Bayi Partner Agi
                        </div>

                        <!-- Legal Links -->
                        <div class="flex items-center space-x-6 text-sm mb-4 lg:mb-0">
                            <a href="#" class="text-blue-300 hover:text-amber-400 transition duration-200">Bayi Sozlesmesi</a>
                            <a href="#" class="text-blue-300 hover:text-amber-400 transition duration-200">Gizlilik Politikasi</a>
                            <a href="#" class="text-blue-300 hover:text-amber-400 transition duration-200">Kullanim Sartlari</a>
                            <a href="/" class="text-amber-400 hover:text-amber-300 font-medium transition duration-200">Musteri Sayfasi</a>
                        </div>

                        <!-- Security Badges -->
                        <div class="flex items-center space-x-3">
                            <span class="text-blue-400 text-xs">Güvenli Platform</span>
                            <div class="flex space-x-2">
                                <div class="bg-amber-500 text-blue-900 px-2 py-1 sharp-corner text-xs font-bold">SSL</div>
                                <div class="bg-amber-500 text-blue-900 px-2 py-1 sharp-corner text-xs font-bold">256BIT</div>
                                <div class="bg-amber-500 text-blue-900 px-2 py-1 sharp-corner text-xs font-bold">GÜVEN</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </footer>

        <script>
        // Provider page scroll functions
        function scrollToStats() {
            document.getElementById('stats').scrollIntoView({ behavior: 'smooth' });
        }
        
        function scrollToApplication() {
            document.getElementById('application').scrollIntoView({ behavior: 'smooth' });
        }

        // Stats update for provider page
        function updateProviderStats() {
            // Daily jobs counter
            const dailyJobsEl = document.getElementById('daily-jobs');
            if (dailyJobsEl) {
                const current = parseInt(dailyJobsEl.textContent) || 127;
                const newValue = current + Math.floor(Math.random() * 3);
                dailyJobsEl.textContent = newValue;
            }

            // Daily earnings for providers
            const earningsEl = document.getElementById('daily-earnings');
            if (earningsEl) {
                const earnings = [750, 820, 890, 740, 920, 680, 950, 780, 860, 810];
                earningsEl.textContent = earnings[Math.floor(Math.random() * earnings.length)];
            }

            // Active dealers - DISABLED: Now synchronized with main counter system
            // const dealersEl = document.getElementById('active-dealers');
            // if (dealersEl) {
            //     const current = parseInt(dealersEl.textContent) || 412;
            //     const change = Math.random() > 0.7 ? (Math.random() > 0.5 ? 1 : -1) : 0;
            //     dealersEl.textContent = current + change;
            // }

            // Average price
            const avgPriceEl = document.getElementById('avg-price');
            if (avgPriceEl) {
                const prices = [245, 267, 289, 234, 312, 198, 356, 276, 234, 287];
                avgPriceEl.textContent = prices[Math.floor(Math.random() * prices.length)];
            }
        }

        // Provider job feed simulation
        function addProviderJobToFeed() {
            const feed = document.getElementById('provider-job-feed');
            if (!feed) return;

            const cities = ['Istanbul', 'Ankara', 'Izmir', 'Bursa', 'Antalya', 'Adana', 'Gaziantep', 'Konya'];
            const districts = ['Kadikoy', 'Besiktas', 'Cankaya', 'Nilufer', 'Muratpasa', 'Seyhan', 'Sehitkamil', 'Selcuklu'];
            const providerJobs = [
                { name: 'Klima Montaji', category: 'Teknik Onarim', price: 'TL450', priority: 'YUKSEK', urgent: true, commission: 'TL67' },
                { name: 'Mutfak Tadilati', category: 'Ev Bakim', price: 'TL1,200', priority: 'ORTA', urgent: false, commission: 'TL180' },
                { name: 'Beyaz Esya Tamiri', category: 'Teknik Onarim', price: 'TL280', priority: 'ORTA', urgent: false, commission: 'TL42' },
                { name: 'Ev Temizligi', category: 'Temizlik', price: 'TL200', priority: 'DUSUK', urgent: false, commission: 'TL30' },
                { name: 'Kombi Bakimi', category: 'Teknik Onarim', price: 'TL350', priority: 'YUKSEK', urgent: true, commission: 'TL52' },
                { name: 'Hali Yikama', category: 'Temizlik', price: 'TL150', priority: 'DUSUK', urgent: false, commission: 'TL22' },
                { name: 'Boyama Isi', category: 'Ev Bakim', price: 'TL800', priority: 'ORTA', urgent: false, commission: 'TL120' },
                { name: 'Elektrik Tesisati', category: 'Ev Bakim', price: 'TL600', priority: 'YUKSEK', urgent: true, commission: 'TL90' }
            ];

            const city = cities[Math.floor(Math.random() * cities.length)];
            const district = districts[Math.floor(Math.random() * districts.length)];
            const job = providerJobs[Math.floor(Math.random() * providerJobs.length)];
            const time = new Date().toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' });
            const jobId = 'P' + Math.floor(Math.random() * 9000 + 1000);

            const priorityColor = job.priority === 'YUKSEK' ? 'bg-amber-500' : 
                                job.priority === 'ORTA' ? 'bg-blue-600' : 'bg-blue-400';

            const categoryIcon = job.category === 'Teknik Onarim' ? 'fas fa-tools' :
                               job.category === 'Ev Bakim' ? 'fas fa-home' : 'fas fa-broom';

            const jobElement = document.createElement('div');
            jobElement.className = \`bg-white border border-blue-200 minimal-corner p-4 hover:border-amber-500 transition-all duration-200 \${job.urgent ? 'border-l-4 border-l-amber-500' : ''}\`;
            jobElement.innerHTML = \`
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-3">
                        <div class="w-10 h-10 bg-blue-900 sharp-corner flex items-center justify-center">
                            <i class="\${categoryIcon} text-white text-sm"></i>
                        </div>
                        <div class="flex flex-col">
                            <div class="flex items-center space-x-2 mb-1">
                                <span class="\${priorityColor} text-white px-2 py-1 sharp-corner text-xs font-bold">\${job.priority}</span>
                                <span class="text-blue-500 text-xs font-medium">#\${jobId}</span>
                                \${job.urgent ? '<span class="text-amber-600 text-xs font-bold pulse-dot">ACIL</span>' : ''}
                            </div>
                            <div>
                                <span class="text-blue-800 font-bold text-sm">\${job.name}</span>
                                <span class="text-blue-600 text-xs ml-2">- \${job.category}</span>
                            </div>
                            <div class="text-blue-500 text-xs mt-1">
                                \${city} / \${district} - \${time}
                            </div>
                        </div>
                    </div>
                    <div class="text-right">
                        <div class="text-blue-800 font-bold text-lg">\${job.price}</div>
                        <div class="text-amber-600 font-bold text-sm">Komisyon: \${job.commission}</div>
                        <div class="text-blue-500 text-xs">Musteri odemesi</div>
                    </div>
                </div>
            \`;

            // Add slide-in animation
            jobElement.style.opacity = '0';
            jobElement.style.transform = 'translateX(-20px)';
            
            feed.insertBefore(jobElement, feed.firstChild);

            // Animate in
            setTimeout(() => {
                jobElement.style.opacity = '1';
                jobElement.style.transform = 'translateX(0)';
                jobElement.style.transition = 'all 0.3s ease-out';
            }, 50);

            // Keep only last 15 jobs (allows scrolling)
            while (feed.children.length > 15) {
                feed.removeChild(feed.lastChild);
            }

            // Update recent count
            const recentCountEl = document.getElementById('provider-recent-count');
            if (recentCountEl) {
                const currentCount = parseInt(recentCountEl.textContent) || 12;
                const newCount = Math.min(currentCount + 1, 18);
                recentCountEl.textContent = newCount + ' Is';
            }
        }

        // Update provider live stats
        function updateProviderLiveStats() {
            // Update hourly earnings
            const earningsEl = document.getElementById('provider-hourly-earnings');
            if (earningsEl) {
                const earnings = ['TL3,840', 'TL4,120', 'TL4,380', 'TL3,960', 'TL4,560', 'TL4,280', 'TL4,750'];
                earningsEl.textContent = earnings[Math.floor(Math.random() * earnings.length)];
            }

            // Simulate chart updates (bars animation)
            const bars = document.querySelectorAll('[style*="height"]');
            bars.forEach((bar, index) => {
                // Skip if it's not in the provider earnings chart
                if (bar.classList.contains('bg-blue-600') || bar.classList.contains('bg-amber-500')) {
                    const randomHeight = Math.floor(Math.random() * 60 + 40) + '%';
                    bar.style.height = randomHeight;
                }
            });
        }

        // Initialize provider job feed
        function initializeProviderJobFeed() {
            // Add initial 8 jobs with varying delays (more than visible for scroll demo)
            for (let i = 0; i < 8; i++) {
                setTimeout(() => addProviderJobToFeed(), i * 600);
            }
        }


        
        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize provider job feed
            initializeProviderJobFeed();
            
            // Update provider stats every 12 seconds
            setInterval(updateProviderStats, 12000);
            
            // Update provider live stats every 18 seconds
            setInterval(updateProviderLiveStats, 18000);
            
            // Add new provider job every 10 seconds
            setInterval(addProviderJobToFeed, 10000);
            

        });
        </script>
    </body>
    </html>
  `)
})

// Bayi login sayfasi
app.get('/bayi/login', (c) => {
  return c.html(`
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Bayi Girişi - TV Servis Yönetim</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gradient-to-br from-blue-500 to-purple-600 min-h-screen flex items-center justify-center">
        <div class="bg-white rounded-lg shadow-xl p-8 w-full max-w-md">
            <div class="text-center mb-8">
                <i class="fas fa-tv text-4xl text-blue-500 mb-4"></i>
                <h1 class="text-2xl font-bold text-gray-800">Bayi Paneli</h1>
                <p class="text-gray-600">TV Servis Yonetim Sistemi</p>
            </div>
            
            <form id="loginForm" class="space-y-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        <i class="fas fa-envelope mr-1"></i> Email
                    </label>
                    <input 
                        type="email" 
                        id="email" 
                        name="email" 
                        required
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                        placeholder="bayi@tvservis.com"
                    />
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">
                        <i class="fas fa-lock mr-1"></i> Sifre
                    </label>
                    <input 
                        type="password" 
                        id="password" 
                        name="password" 
                        required
                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                        placeholder="--------"
                    />
                </div>
                
                <button 
                    type="submit" 
                    class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200"
                    id="loginBtn"
                >
                    <i class="fas fa-sign-in-alt mr-1"></i> Giris Yap
                </button>
            </form>
            
            <div id="errorMessage" class="mt-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded hidden">
                <i class="fas fa-exclamation-triangle mr-1"></i>
                <span id="errorText"></span>
            </div>
            
            <div class="mt-6 text-center">
                <p class="text-sm text-gray-600">Test Bayileri:</p>
                <div class="text-xs text-gray-500 space-y-1 mt-2">
                    <div>teknolojitv@tvservis.com (Istanbul)</div>
                    <div>baskentelektronik@tvservis.com (Ankara)</div>
                    <div>egetv@tvservis.com (Izmir)</div>
                    <div class="font-semibold">Sifre: 123456</div>
                </div>
            </div>
            
            <div class="mt-6 text-center">
                <a href="/" class="text-blue-600 hover:text-blue-800 text-sm">
                    <i class="fas fa-arrow-left mr-1"></i> Admin Paneline Don
                </a>
            </div>
        </div>
        
        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"></script>
        <script>
            document.getElementById('loginForm').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const email = document.getElementById('email').value;
                const password = document.getElementById('password').value;
                const loginBtn = document.getElementById('loginBtn');
                const errorDiv = document.getElementById('errorMessage');
                
                // Loading state
                loginBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-1"></i> Giris yapiliyor...';
                loginBtn.disabled = true;
                errorDiv.classList.add('hidden');
                
                try {
                    const response = await axios.post('/api/bayi/login', {
                        email: email,
                        password: password
                    });
                    
                    if (response.data.success) {
                        // Token'i localStorage'a kaydet
                        localStorage.setItem('bayiToken', response.data.token);
                        localStorage.setItem('bayiInfo', JSON.stringify(response.data.bayi));
                        
                        // Dashboard'a yonlendir
                        window.location.href = '/bayi/dashboard';
                    }
                } catch (error) {
                    const errorMessage = error.response?.data?.error || 'Giris islemi basarisiz';
                    document.getElementById('errorText').textContent = errorMessage;
                    errorDiv.classList.remove('hidden');
                } finally {
                    loginBtn.innerHTML = '<i class="fas fa-sign-in-alt mr-1"></i> Giris Yap';
                    loginBtn.disabled = false;
                }
            });
        </script>
    </body>
    </html>
  `)
})

// Bayi dashboard sayfasi
app.get('/bayi/dashboard', (c) => {
  return c.html(`
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Bayi Dashboard - TV Servis</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <link href="/static/style.css" rel="stylesheet">
    </head>
    <body class="bg-gray-100 min-h-screen">
        <!-- Navigation -->
        <nav class="bg-green-600 text-white p-4">
            <div class="container mx-auto flex justify-between items-center">
                <h1 class="text-2xl font-bold">
                    <i class="fas fa-store mr-2"></i>
                    Bayi Paneli
                </h1>
                <div class="flex items-center space-x-4">
                    <span id="bayiInfo" class="text-sm">Yukleniyor...</span>
                    <div class="space-x-2">
                        <button onclick="showBayiSection('dashboard')" class="nav-btn bg-green-500 hover:bg-green-700 px-4 py-2 rounded">
                            <i class="fas fa-dashboard mr-1"></i> Dashboard
                        </button>
                        <button onclick="showBayiSection('jobs')" class="nav-btn bg-green-500 hover:bg-green-700 px-4 py-2 rounded">
                            <i class="fas fa-tasks mr-1"></i> Mevcut Isler
                        </button>
                        <button onclick="showBayiSection('my-jobs')" class="nav-btn bg-green-500 hover:bg-green-700 px-4 py-2 rounded">
                            <i class="fas fa-check mr-1"></i> Aldigim Isler
                        </button>
                        <button onclick="showBayiSection('credits')" class="nav-btn bg-green-500 hover:bg-green-700 px-4 py-2 rounded">
                            <i class="fas fa-coins mr-1"></i> Kredi
                        </button>
                        <button onclick="logout()" class="bg-red-500 hover:bg-red-700 px-4 py-2 rounded">
                            <i class="fas fa-sign-out-alt mr-1"></i> Cikis
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="container mx-auto p-6">
            <!-- Dashboard Section -->
            <div id="bayi-dashboard-section" class="section">
                <h2 class="text-3xl font-bold mb-6 text-gray-800">
                    <i class="fas fa-chart-line mr-2"></i>
                    Bayi Dashboard
                </h2>
                
                <!-- Stats Cards -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                    <div class="bg-white p-6 rounded-lg shadow">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Kredi Bakiye</p>
                                <p class="text-3xl font-bold text-green-600" id="kredi-bakiye">-</p>
                            </div>
                            <i class="fas fa-coins text-green-500 text-2xl"></i>
                        </div>
                    </div>
                    
                    <div class="bg-white p-6 rounded-lg shadow">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Mevcut Isler</p>
                                <p class="text-3xl font-bold text-blue-600" id="mevcut-isler">-</p>
                            </div>
                            <i class="fas fa-tasks text-blue-500 text-2xl"></i>
                        </div>
                    </div>
                    
                    <div class="bg-white p-6 rounded-lg shadow">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Aldigim Isler</p>
                                <p class="text-3xl font-bold text-orange-600" id="aldigim-isler">-</p>
                            </div>
                            <i class="fas fa-handshake text-orange-500 text-2xl"></i>
                        </div>
                    </div>
                    
                    <div class="bg-white p-6 rounded-lg shadow">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Rating</p>
                                <p class="text-3xl font-bold text-purple-600" id="bayi-rating">-</p>
                            </div>
                            <i class="fas fa-star text-purple-500 text-2xl"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Jobs Section -->
            <div id="bayi-jobs-section" class="section hidden">
                <h2 class="text-3xl font-bold mb-6 text-gray-800">
                    <i class="fas fa-tasks mr-2"></i>
                    Mevcut Isler
                </h2>
                <div id="bayi-jobs-list" class="space-y-4">
                    Veriler yukleniyor...
                </div>
            </div>

            <!-- My Jobs Section -->
            <div id="bayi-my-jobs-section" class="section hidden">
                <h2 class="text-3xl font-bold mb-6 text-gray-800">
                    <i class="fas fa-check mr-2"></i>
                    Aldigim Isler
                </h2>
                <div id="bayi-my-jobs-list" class="space-y-4">
                    Veriler yukleniyor...
                </div>
            </div>

            <!-- Credits Section -->
            <div id="bayi-credits-section" class="section hidden">
                <h2 class="text-3xl font-bold mb-6 text-gray-800">
                    <i class="fas fa-coins mr-2"></i>
                    Kredi Yonetimi
                </h2>
                <div id="bayi-credits-content" class="space-y-4">
                    Veriler yukleniyor...
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"></script>
        <script src="/static/bayi.js"></script>
    </body>
    </html>
  `)
})

// SSS (Frequently Asked Questions) Route
app.get('/sss', (c) => {
  return c.html(`<!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Sıkça Sorulan Sorular - Garantor360</title>
        <meta name="description" content="Garantor360 hakkında merak edilen tüm sorular ve yanıtları. Hizmet alma süreci, garanti koşulları ve daha fazlası.">
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <style>
            .minimal-corner { border-radius: 4px; }
            .sharp-corner { border-radius: 0; }
        </style>
    </head>
    <body class="bg-gray-50">
        <!-- Header -->
        <header class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-6xl mx-auto px-6 py-4">
                <div class="flex items-center justify-between">
                    <div class="flex items-center">
                        <img src="https://page.gensparksite.com/v1/base64_upload/048c4b5ab3a7280d26f5b471c120123b" 
                             alt="Garantor360" class="h-8 w-auto mr-3">
                        <h1 class="text-xl font-bold text-gray-800">Sıkça Sorulan Sorular</h1>
                    </div>
                    <button onclick="window.close()" class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 minimal-corner transition-colors">
                        <i class="fas fa-times mr-2"></i>Kapat
                    </button>
                </div>
            </div>
        </header>

        <!-- FAQ Content -->
        <main class="max-w-4xl mx-auto px-6 py-8">
            <!-- Hizmet Alma Süreci -->
            <section class="mb-8">
                <h2 class="text-2xl font-bold text-blue-900 mb-6 flex items-center">
                    <i class="fas fa-cogs mr-3 text-blue-600"></i>
                    Hizmet Alma Süreci
                </h2>
                <div class="space-y-4">
                    <div class="bg-white p-6 minimal-corner shadow border border-gray-200">
                        <h3 class="font-bold text-gray-800 mb-2 flex items-center">
                            <i class="fas fa-question-circle mr-2 text-orange-500"></i>
                            Hizmet talebimi nasıl oluştururum?
                        </h3>
                        <p class="text-gray-600">Formda şehir, ilçe, hizmet kategorisi ve sorun detayını doldurun. İsim-soyisim ve telefon bilgilerinizi ekleyin. "TALEP GÖNDER" butonuna tıklayın.</p>
                    </div>
                    <div class="bg-white p-6 minimal-corner shadow border border-gray-200">
                        <h3 class="font-bold text-gray-800 mb-2 flex items-center">
                            <i class="fas fa-question-circle mr-2 text-orange-500"></i>
                            Talebimi gönderdikten sonra ne oluyor?
                        </h3>
                        <p class="text-gray-600">Talebiniz otomatik olarak yakınınızdaki doğrulanmış uzmanlara iletilir. Ortalama 12 dakika içinde size dönüş yapılır.</p>
                    </div>
                    <div class="bg-white p-6 minimal-corner shadow border border-gray-200">
                        <h3 class="font-bold text-gray-800 mb-2 flex items-center">
                            <i class="fas fa-question-circle mr-2 text-orange-500"></i>
                            Uzmanlar nasıl seçiliyor?
                        </h3>
                        <p class="text-gray-600">Tüm uzmanlarımız kimlik kontrolünden geçmiştir. Lokasyonunuza yakınlık, uzmanlık alanı ve müşteri memnuniyeti puanına göre eşleştirme yapılır.</p>
                    </div>
                </div>
            </section>

            <!-- Garanti ve Güvence -->
            <section class="mb-8">
                <h2 class="text-2xl font-bold text-purple-900 mb-6 flex items-center">
                    <i class="fas fa-shield-alt mr-3 text-purple-600"></i>
                    Garanti ve Güvenceler
                </h2>
                <div class="space-y-4">
                    <div class="bg-white p-6 minimal-corner shadow border border-gray-200">
                        <h3 class="font-bold text-gray-800 mb-2 flex items-center">
                            <i class="fas fa-question-circle mr-2 text-orange-500"></i>
                            Ödeme güvencesi nasıl çalışır?
                        </h3>
                        <p class="text-gray-600">Hizmetten memnun kalmazsanız ödediğiniz ücreti geri alırsınız. Para iade garantisi 7 gün süreyle geçerlidir.</p>
                    </div>
                    <div class="bg-white p-6 minimal-corner shadow border border-gray-200">
                        <h3 class="font-bold text-gray-800 mb-2 flex items-center">
                            <i class="fas fa-question-circle mr-2 text-orange-500"></i>
                            İşçilik garantisi kapsamı nedir?
                        </h3>
                        <p class="text-gray-600">Tamamlanan işlerde 6 ay işçilik garantisi verilir. Bu süre içinde aynı problemde tekrar hizmet alabilirsiniz.</p>
                    </div>
                    <div class="bg-white p-6 minimal-corner shadow border border-gray-200">
                        <h3 class="font-bold text-gray-800 mb-2 flex items-center">
                            <i class="fas fa-question-circle mr-2 text-orange-500"></i>
                            Sigorta koruması ne anlama gelir?
                        </h3>
                        <p class="text-gray-600">Hizmet sırasında oluşabilecek hasarlar sigorta kapsamındadır. Hasar tazminatı garantor360 tarafından karşılanır.</p>
                    </div>
                </div>
            </section>

            <!-- Fiyatlar ve Ödeme -->
            <section class="mb-8">
                <h2 class="text-2xl font-bold text-green-900 mb-6 flex items-center">
                    <i class="fas fa-money-bill-wave mr-3 text-green-600"></i>
                    Fiyatlar ve Ödeme
                </h2>
                <div class="space-y-4">
                    <div class="bg-white p-6 minimal-corner shadow border border-gray-200">
                        <h3 class="font-bold text-gray-800 mb-2 flex items-center">
                            <i class="fas fa-question-circle mr-2 text-orange-500"></i>
                            Fiyatlar nasıl belirleniyor?
                        </h3>
                        <p class="text-gray-600">Her hizmet için pazar araştırması yapılır ve adil fiyatlandırma uygulanır. Sabit fiyat listelerimiz mevcuttur.</p>
                    </div>
                    <div class="bg-white p-6 minimal-corner shadow border border-gray-200">
                        <h3 class="font-bold text-gray-800 mb-2 flex items-center">
                            <i class="fas fa-question-circle mr-2 text-orange-500"></i>
                            Hangi ödeme yöntemleri kabul ediliyor?
                        </h3>
                        <p class="text-gray-600">Nakit, kredi kartı, banka kartı ve havale ile ödeme yapabilirsiniz. Online ödeme seçenekleri de mevcuttur.</p>
                    </div>
                    <div class="bg-white p-6 minimal-corner shadow border border-gray-200">
                        <h3 class="font-bold text-gray-800 mb-2 flex items-center">
                            <i class="fas fa-question-circle mr-2 text-orange-500"></i>
                            Önceden ödeme yapmak zorunda mıyım?
                        </h3>
                        <p class="text-gray-600">Hayır, ödeme hizmet tamamlandıktan sonra yapılır. Peşin ödeme talep eden uzmanlarla çalışmayın.</p>
                    </div>
                </div>
            </section>

            <!-- İletişim ve Destek -->
            <section class="mb-8">
                <h2 class="text-2xl font-bold text-red-900 mb-6 flex items-center">
                    <i class="fas fa-headset mr-3 text-red-600"></i>
                    İletişim ve Destek
                </h2>
                <div class="space-y-4">
                    <div class="bg-white p-6 minimal-corner shadow border border-gray-200">
                        <h3 class="font-bold text-gray-800 mb-2 flex items-center">
                            <i class="fas fa-question-circle mr-2 text-orange-500"></i>
                            7/24 destek nasıl çalışır?
                        </h3>
                        <p class="text-gray-600">Müşteri hizmetlerimize haftanın 7 günü, günün 24 saati ulaşabilirsiniz. Canlı sohbet, telefon ve email destegi mevcuttur.</p>
                    </div>
                    <div class="bg-white p-6 minimal-corner shadow border border-gray-200">
                        <h3 class="font-bold text-gray-800 mb-2 flex items-center">
                            <i class="fas fa-question-circle mr-2 text-orange-500"></i>
                            Şikayetimi nasıl iletebilirim?
                        </h3>
                        <p class="text-gray-600">Şikayetlerinizi canlı destek, email veya telefon ile iletebilirsiniz. 48 saat içinde yanıt verilir.</p>
                    </div>
                    <div class="bg-white p-6 minimal-corner shadow border border-gray-200">
                        <h3 class="font-bold text-gray-800 mb-2 flex items-center">
                            <i class="fas fa-question-circle mr-2 text-orange-500"></i>
                            Hukuki destek nasıl alınır?
                        </h3>
                        <p class="text-gray-600">Hizmet ile ilgili hukuki sorunlarınızda ücretsiz avukat desteği sağlanır. Başvuru formu ile talepte bulunabilirsiniz.</p>
                    </div>
                </div>
            </section>

            <!-- Ana Sayfaya Dön -->
            <div class="text-center mt-12">
                <a href="/" class="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-8 py-3 minimal-corner font-bold text-lg transition-all duration-300 transform hover:scale-105 shadow-lg">
                    <i class="fas fa-home mr-2"></i>
                    ANA SAYFAYA DÖN
                </a>
            </div>
        </main>

        <!-- Footer -->
        <footer class="bg-gray-800 text-white py-6 mt-12">
            <div class="max-w-4xl mx-auto px-6 text-center">
                <p class="text-gray-300">
                    © 2024 Garantor360. Tüm hakları saklıdır. | 
                    <strong class="text-white">7/24 Destek:</strong> 0850 123 45 67
                </p>
            </div>
        </footer>
    </body>
    </html>`)
})

// ====================================
// MULTI-PAGE ARCHITECTURE
// Service & Location Landing Pages
// ====================================

// Service Landing Page Template Generator
function generateServiceLandingPage(serviceData, trackingConfig) {
  return `
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>${serviceData.title}</title>
        <meta name="description" content="${serviceData.description}">
        <meta name="keywords" content="${serviceData.keywords}">
        
        <!-- Schema.org Service LocalBusiness Structured Data -->
        <script type="application/ld+json">
        ${JSON.stringify(generateSchemaOrg('service', {
          serviceName: serviceData.serviceName,
          description: serviceData.description,
          priceRange: serviceData.priceRange,
          startingPrice: serviceData.avgPrice,
          features: serviceData.features?.map(f => f.title) || []
        }), null, 2)}
        </script>
        
        <!-- Open Graph Tags -->
        <meta property="og:title" content="${serviceData.title}">
        <meta property="og:description" content="${serviceData.description}">
        <meta property="og:type" content="service">
        <meta property="og:url" content="https://garantor360.com/hizmetler/${serviceData.serviceSlug}">
        <meta property="og:image" content="https://garantor360.com/images/${serviceData.serviceSlug}-og.jpg">
        
        <!-- Twitter Cards -->
        <meta name="twitter:card" content="summary_large_image">
        <meta name="twitter:title" content="${serviceData.title}">
        <meta name="twitter:description" content="${serviceData.description}">
        
        <!-- Schema.org LocalBusiness + Service -->
        <script type="application/ld+json">
        {
          "@context": "https://schema.org",
          "@type": ["LocalBusiness", "ElectronicsStore"],
          "name": "GARANTOR360 ${serviceData.serviceName}",
          "description": "${serviceData.description}",
          "url": "https://garantor360.com/hizmetler/${serviceData.serviceSlug}",
          "telephone": "+90-216-123-4567",
          "address": {
            "@type": "PostalAddress",
            "streetAddress": "Örnek Sokak No: 123",
            "addressLocality": "İstanbul",
            "addressCountry": "TR"
          },
          "geo": {
            "@type": "GeoCoordinates",
            "latitude": 41.0082,
            "longitude": 28.9784
          },
          "openingHours": "Mo-Su 08:00-20:00",
          "priceRange": "₺${serviceData.priceRange}",
          "hasOfferCatalog": {
            "@type": "OfferCatalog",
            "name": "${serviceData.serviceName} Hizmetleri",
            "itemListElement": [
              {
                "@type": "Offer",
                "itemOffered": {
                  "@type": "Service",
                  "name": "${serviceData.serviceName}",
                  "description": "${serviceData.description}"
                }
              }
            ]
          },
          "aggregateRating": {
            "@type": "AggregateRating",
            "ratingValue": "4.8",
            "reviewCount": "847"
          }
        }
        </script>
        
        ${trackingConfig.ga4_enabled ? trackingConfig.ga4_script : ''}
        ${trackingConfig.facebook_enabled ? trackingConfig.facebook_script : ''}
        ${trackingConfig.gtm_enabled ? trackingConfig.gtm_script : ''}
        
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-50">
        <!-- Service Hero Section -->
        <div class="bg-gradient-to-r ${serviceData.bgColor} text-white">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
                <div class="text-center">
                    <div class="mb-6">
                        <i class="${serviceData.icon} text-6xl mb-4 opacity-90"></i>
                    </div>
                    <h1 class="text-4xl md:text-6xl font-bold mb-6">${serviceData.serviceName}</h1>
                    <p class="text-xl md:text-2xl mb-8 opacity-90 max-w-3xl mx-auto">
                        ${serviceData.description}
                    </p>
                    <div class="flex flex-col sm:flex-row gap-4 justify-center">
                        <button onclick="openServiceRequestModal()" class="bg-white text-gray-900 px-8 py-4 rounded-lg font-semibold text-lg hover:bg-gray-100 transition-all duration-300 shadow-lg">
                            <i class="fas fa-phone mr-2"></i>Hemen Ara: 0216 123 4567
                        </button>
                        <button onclick="openServiceRequestModal()" class="border-2 border-white text-white px-8 py-4 rounded-lg font-semibold text-lg hover:bg-white hover:text-gray-900 transition-all duration-300">
                            <i class="fas fa-calendar mr-2"></i>Randevu Al
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Features Section -->
        <div class="py-16 bg-white">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="text-center mb-12">
                    <h2 class="text-3xl font-bold text-gray-900 mb-4">Neden Bizi Tercih Etmelisiniz?</h2>
                    <p class="text-xl text-gray-600 max-w-3xl mx-auto">
                        ${serviceData.serviceName} konusunda uzman ekibimiz ve kaliteli hizmet anlayışımızla yanınızdayız.
                    </p>
                </div>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
                    ${serviceData.features.map(feature => `
                        <div class="text-center p-6 rounded-lg hover:shadow-lg transition-shadow duration-300">
                            <div class="w-16 h-16 mx-auto mb-4 bg-blue-100 rounded-full flex items-center justify-center">
                                <i class="${feature.icon} text-2xl text-blue-600"></i>
                            </div>
                            <h3 class="text-xl font-semibold text-gray-900 mb-2">${feature.title}</h3>
                            <p class="text-gray-600">${feature.desc}</p>
                        </div>
                    `).join('')}
                </div>
            </div>
        </div>

        <!-- Pricing Section -->
        <div class="py-16 bg-gray-50">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="text-center mb-12">
                    <h2 class="text-3xl font-bold text-gray-900 mb-4">Şeffaf Fiyatlandırma</h2>
                    <p class="text-xl text-gray-600">
                        ${serviceData.serviceName} için uygun fiyatlarla kaliteli hizmet
                    </p>
                </div>
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                    <div class="bg-white p-8 rounded-lg shadow-lg text-center">
                        <h3 class="text-xl font-semibold mb-4">Teşhis Ücreti</h3>
                        <div class="text-3xl font-bold text-blue-600 mb-4">₺50</div>
                        <p class="text-gray-600 mb-6">Ücretsiz yerinde inceleme ve fiyat teklifi</p>
                        <button onclick="openServiceRequestModal()" class="w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition-colors">
                            Teşhis Talep Et
                        </button>
                    </div>
                    <div class="bg-gradient-to-r ${serviceData.bgColor} p-8 rounded-lg shadow-lg text-center text-white transform scale-105">
                        <h3 class="text-xl font-semibold mb-4">Ortalama Tamir</h3>
                        <div class="text-3xl font-bold mb-4">₺${serviceData.avgPrice}</div>
                        <p class="mb-6 opacity-90">6 ay işçilik garantisi dahil</p>
                        <button onclick="openServiceRequestModal()" class="w-full bg-white text-gray-900 py-3 rounded-lg hover:bg-gray-100 transition-colors font-semibold">
                            Hemen Başla
                        </button>
                    </div>
                    <div class="bg-white p-8 rounded-lg shadow-lg text-center">
                        <h3 class="text-xl font-semibold mb-4">Fiyat Aralığı</h3>
                        <div class="text-3xl font-bold text-green-600 mb-4">₺${serviceData.priceRange}</div>
                        <p class="text-gray-600 mb-6">Arıza durumuna göre değişkenlik gösterir</p>
                        <button onclick="openServiceRequestModal()" class="w-full bg-green-600 text-white py-3 rounded-lg hover:bg-green-700 transition-colors">
                            Fiyat Al
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Common Issues Section -->
        <div class="py-16 bg-white">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
                    <div>
                        <h2 class="text-3xl font-bold text-gray-900 mb-6">Sık Karşılaştığımız Sorunlar</h2>
                        <div class="space-y-4">
                            ${serviceData.commonIssues.map(issue => `
                                <div class="flex items-center p-4 bg-gray-50 rounded-lg">
                                    <i class="fas fa-check-circle text-green-500 mr-4"></i>
                                    <span class="text-gray-900 font-medium">${issue}</span>
                                </div>
                            `).join('')}
                        </div>
                        <div class="mt-8">
                            <button onclick="openServiceRequestModal()" class="bg-blue-600 text-white px-8 py-4 rounded-lg font-semibold hover:bg-blue-700 transition-colors">
                                <i class="fas fa-wrench mr-2"></i>Sorununuzu Çözelim
                            </button>
                        </div>
                    </div>
                    <div>
                        <h3 class="text-2xl font-bold text-gray-900 mb-6">Desteklediğimiz Markalar</h3>
                        <div class="grid grid-cols-2 gap-4">
                            ${serviceData.brands.map(brand => `
                                <div class="bg-gray-50 p-4 rounded-lg text-center font-semibold text-gray-700 hover:bg-blue-50 transition-colors">
                                    ${brand}
                                </div>
                            `).join('')}
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- CTA Section -->
        <div class="py-16 bg-gradient-to-r ${serviceData.bgColor}">
            <div class="max-w-4xl mx-auto text-center px-4 sm:px-6 lg:px-8">
                <h2 class="text-3xl font-bold text-white mb-6">
                    ${serviceData.serviceName} için Hemen İletişime Geçin
                </h2>
                <p class="text-xl text-white opacity-90 mb-8">
                    Uzman ekibimiz sizin için 7/24 hazır. Hızlı çözüm için bizi arayın!
                </p>
                <div class="flex flex-col sm:flex-row gap-4 justify-center">
                    <a href="tel:+902161234567" class="bg-white text-gray-900 px-8 py-4 rounded-lg font-bold text-lg hover:bg-gray-100 transition-colors inline-flex items-center justify-center">
                        <i class="fas fa-phone mr-2"></i>0216 123 4567
                    </a>
                    <a href="/" class="border-2 border-white text-white px-8 py-4 rounded-lg font-bold text-lg hover:bg-white hover:text-gray-900 transition-colors inline-flex items-center justify-center">
                        <i class="fas fa-home mr-2"></i>Ana Sayfa
                    </a>
                </div>
            </div>
        </div>

        <script>
            function openServiceRequestModal() {
                // Track service request event
                if (window.gtag) {
                    gtag('event', 'service_request_click', {
                        'service_type': '${serviceData.serviceSlug}',
                        'event_category': 'conversion',
                        'value': ${serviceData.avgPrice}
                    });
                }
                
                if (window.fbq) {
                    fbq('track', 'Lead', {
                        'content_category': '${serviceData.serviceSlug}',
                        'value': ${serviceData.avgPrice},
                        'currency': 'TRY'
                    });
                }
                
                // Redirect to main page with service pre-selected
                window.location.href = '/?service=${serviceData.serviceSlug}';
            }
            
            // Track page view
            if (window.gtag) {
                gtag('event', 'service_page_view', {
                    'service_type': '${serviceData.serviceSlug}',
                    'event_category': 'engagement'
                });
            }
        </script>
    </body>
    </html>
  `
}

// Location Landing Page Template Generator  
function generateLocationLandingPage(locationData, trackingConfig) {
  return `
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>${locationData.title}</title>
        <meta name="description" content="${locationData.description}">
        <meta name="keywords" content="${locationData.keywords}">
        
        <!-- Schema.org Location LocalBusiness Structured Data -->
        <script type="application/ld+json">
        ${JSON.stringify(generateSchemaOrg('location', {
          cityName: locationData.cityName,
          region: locationData.region,
          latitude: locationData.latitude,
          longitude: locationData.longitude,
          districts: locationData.districts,
          technicianCount: locationData.technicianCount
        }), null, 2)}
        </script>
        
        <!-- Open Graph Tags -->
        <meta property="og:title" content="${locationData.title}">
        <meta property="og:description" content="${locationData.description}">
        <meta property="og:type" content="website">
        <meta property="og:url" content="https://garantor360.com/bölgeler/${locationData.citySlug}">

        
        ${trackingConfig.ga4_enabled ? trackingConfig.ga4_script : ''}
        ${trackingConfig.facebook_enabled ? trackingConfig.facebook_script : ''}
        ${trackingConfig.gtm_enabled ? trackingConfig.gtm_script : ''}
        
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-50">
        <!-- Location Hero Section -->
        <div class="bg-gradient-to-r from-indigo-600 to-purple-600 text-white">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
                <div class="text-center">
                    <h1 class="text-4xl md:text-6xl font-bold mb-6">
                        ${locationData.cityName} Teknik Servis
                    </h1>
                    <p class="text-xl md:text-2xl mb-8 opacity-90 max-w-4xl mx-auto">
                        ${locationData.description}
                    </p>
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mt-12">
                        <div class="bg-white bg-opacity-20 rounded-lg p-6">
                            <i class="fas fa-users text-3xl mb-4"></i>
                            <div class="text-2xl font-bold">${locationData.population}</div>
                            <div class="text-sm opacity-80">Nüfus</div>
                        </div>
                        <div class="bg-white bg-opacity-20 rounded-lg p-6">
                            <i class="fas fa-clock text-3xl mb-4"></i>
                            <div class="text-2xl font-bold">${locationData.responseTime}</div>
                            <div class="text-sm opacity-80">Ortalama Varış Süresi</div>
                        </div>
                        <div class="bg-white bg-opacity-20 rounded-lg p-6">
                            <i class="fas fa-tools text-3xl mb-4"></i>
                            <div class="text-2xl font-bold">${locationData.dailyJobs}</div>
                            <div class="text-sm opacity-80">Günlük İş Hacmi</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Service Areas Section -->
        <div class="py-16 bg-white">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="text-center mb-12">
                    <h2 class="text-3xl font-bold text-gray-900 mb-4">Hizmet Verdiğimiz Bölgeler</h2>
                    <p class="text-xl text-gray-600">
                        ${locationData.cityName} genelinde profesyonel teknik servis hizmeti
                    </p>
                </div>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                    ${locationData.serviceAreas.map(area => `
                        <div class="text-center p-6 border border-gray-200 rounded-lg hover:shadow-lg transition-shadow">
                            <i class="fas fa-map-marker-alt text-3xl text-indigo-600 mb-4"></i>
                            <h3 class="text-xl font-semibold text-gray-900 mb-2">${area}</h3>
                            <p class="text-gray-600">7/24 hızlı servis garantisi</p>
                        </div>
                    `).join('')}
                </div>
            </div>
        </div>

        <!-- Districts Section -->
        <div class="py-16 bg-gray-50">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <h2 class="text-3xl font-bold text-gray-900 text-center mb-12">
                    ${locationData.cityName} İlçeleri
                </h2>
                <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                    ${locationData.districts.map(district => `
                        <div class="bg-white p-4 rounded-lg text-center font-semibold text-gray-700 hover:bg-indigo-50 hover:text-indigo-700 transition-colors cursor-pointer">
                            ${district}
                        </div>
                    `).join('')}
                </div>
                <div class="text-center mt-12">
                    <p class="text-lg text-gray-600 mb-6">
                        ${locationData.cityName}'da ${locationData.coverageArea} alan kapsamında hizmet veriyoruz
                    </p>
                    <button onclick="openLocationServiceModal()" class="bg-indigo-600 text-white px-8 py-4 rounded-lg font-semibold text-lg hover:bg-indigo-700 transition-colors">
                        <i class="fas fa-phone mr-2"></i>Hemen Ara: 0216 123 4567
                    </button>
                </div>
            </div>
        </div>

        <!-- Services Section -->
        <div class="py-16 bg-white">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <h2 class="text-3xl font-bold text-gray-900 text-center mb-12">
                    ${locationData.cityName}'da Sunduğumuz Hizmetler
                </h2>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                    <div class="bg-gradient-to-br from-blue-500 to-purple-600 text-white p-8 rounded-lg">
                        <i class="fas fa-tv text-4xl mb-4"></i>
                        <h3 class="text-2xl font-bold mb-4">TV Tamiri</h3>
                        <p class="mb-6 opacity-90">Tüm TV markalarında profesyonel tamir hizmeti</p>
                        <a href="/hizmetler/tv-tamiri" class="bg-white text-gray-900 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors inline-block">
                            Detayları Gör
                        </a>
                    </div>
                    <div class="bg-gradient-to-br from-green-500 to-blue-600 text-white p-8 rounded-lg">
                        <i class="fas fa-blender text-4xl mb-4"></i>
                        <h3 class="text-2xl font-bold mb-4">Beyaz Eşya</h3>
                        <p class="mb-6 opacity-90">Buzdolabı, çamaşır makinesi ve tüm beyaz eşyalar</p>
                        <a href="/hizmetler/beyaz-esya" class="bg-white text-gray-900 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors inline-block">
                            Detayları Gör
                        </a>
                    </div>
                    <div class="bg-gradient-to-br from-cyan-500 to-blue-600 text-white p-8 rounded-lg">
                        <i class="fas fa-snowflake text-4xl mb-4"></i>
                        <h3 class="text-2xl font-bold mb-4">Klima Tamiri</h3>
                        <p class="mb-6 opacity-90">Klima bakım, tamir ve montaj hizmetleri</p>
                        <a href="/hizmetler/klima-tamiri" class="bg-white text-gray-900 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors inline-block">
                            Detayları Gör
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- CTA Section -->
        <div class="py-16 bg-gradient-to-r from-indigo-600 to-purple-600">
            <div class="max-w-4xl mx-auto text-center px-4 sm:px-6 lg:px-8">
                <h2 class="text-3xl font-bold text-white mb-6">
                    ${locationData.cityName}'da Hızlı Teknik Servis
                </h2>
                <p class="text-xl text-white opacity-90 mb-8">
                    ${locationData.responseTime} içinde kapınızdayız! Hemen arayın, çözümü biz getirelim.
                </p>
                <div class="flex flex-col sm:flex-row gap-4 justify-center">
                    <a href="tel:+902161234567" class="bg-white text-gray-900 px-8 py-4 rounded-lg font-bold text-lg hover:bg-gray-100 transition-colors inline-flex items-center justify-center">
                        <i class="fas fa-phone mr-2"></i>0216 123 4567
                    </a>
                    <a href="/" class="border-2 border-white text-white px-8 py-4 rounded-lg font-bold text-lg hover:bg-white hover:text-gray-900 transition-colors inline-flex items-center justify-center">
                        <i class="fas fa-home mr-2"></i>Ana Sayfa
                    </a>
                </div>
            </div>
        </div>

        <script>
            function openLocationServiceModal() {
                // Track location service request
                if (window.gtag) {
                    gtag('event', 'location_service_request', {
                        'location': '${locationData.citySlug}',
                        'event_category': 'conversion'
                    });
                }
                
                if (window.fbq) {
                    fbq('track', 'Lead', {
                        'content_category': 'location_service',
                        'content_name': '${locationData.cityName}',
                        'currency': 'TRY'
                    });
                }
                
                // Redirect to main page with location pre-selected
                window.location.href = '/?location=${locationData.citySlug}';
            }
            
            // Track page view
            if (window.gtag) {
                gtag('event', 'location_page_view', {
                    'location': '${locationData.citySlug}',
                    'event_category': 'engagement'
                });
            }
        </script>
    </body>
    </html>
  `
}

// Service Landing Pages Routes
app.get('/hizmetler/tv-tamiri', async (c) => {
  const { DB } = c.env
  
  const serviceData = {
    serviceName: 'TV Tamiri',
    serviceSlug: 'tv-tamiri',
    title: 'TV Tamiri Hizmeti - GARANTOR360 | Profesyonel TV Tamir Servisi',
    description: 'TV tamiri için uzman ekibimizle hızlı ve güvenilir servis. Tüm TV markalarında profesyonel tamir hizmeti. 6 ay işçilik garantisi.',
    keywords: 'tv tamiri, televizyon tamiri, tv servisi, tv tamir servisi, profesyonel tv tamiri',
    icon: 'fas fa-tv',
    bgColor: 'from-blue-600 to-purple-600',
    features: [
      { icon: 'fas fa-tools', title: 'Profesyonel Ekip', desc: 'Deneyimli teknisyenler' },
      { icon: 'fas fa-clock', title: 'Hızlı Servis', desc: '24 saat içinde müdahale' },
      { icon: 'fas fa-shield-alt', title: '6 Ay Garanti', desc: 'İşçilik garantisi' },
      { icon: 'fas fa-home', title: 'Yerinde Servis', desc: 'Evinizde tamir hizmeti' }
    ],
    priceRange: '₺300-2500',
    avgPrice: '400',
    brands: ['Samsung', 'LG', 'Sony', 'Arçelik', 'Vestel', 'TCL', 'Philips', 'Grundig'],
    commonIssues: [
      'Açılmama sorunu',
      'Görüntü gelmiyor',
      'Ses problemi', 
      'Uzaktan kumanda çalışmıyor',
      'Ekran çizgileri',
      'Renk bozuklukları'
    ]
  }
  
  // Get tracking configuration
  const trackingConfig = await getTrackingConfig(DB)
  
  return c.html(generateServiceLandingPage(serviceData, trackingConfig))
})

app.get('/hizmetler/beyaz-esya', async (c) => {
  const { DB } = c.env
  
  const serviceData = {
    serviceName: 'Beyaz Eşya Tamiri',
    serviceSlug: 'beyaz-esya',
    title: 'Beyaz Eşya Tamiri - GARANTOR360 | Buzdolabı, Çamaşır Makinesi Tamiri',
    description: 'Beyaz eşya tamiri için uzman servis. Buzdolabı, çamaşır makinesi, bulaşık makinesi tamiri. Tüm markalar için profesyonel hizmet.',
    keywords: 'beyaz eşya tamiri, buzdolabı tamiri, çamaşır makinesi tamiri, bulaşık makinesi tamiri, beyaz eşya servisi',
    icon: 'fas fa-blender',
    bgColor: 'from-green-600 to-blue-600',
    features: [
      { icon: 'fas fa-wrench', title: 'Uzman Teknisyen', desc: 'Beyaz eşya uzmanları' },
      { icon: 'fas fa-truck', title: 'Ücretsiz Nakliye', desc: 'Servise getir-götür' },
      { icon: 'fas fa-certificate', title: 'Orijinal Yedek Parça', desc: 'Garantili parçalar' },
      { icon: 'fas fa-thumbs-up', title: 'Müşteri Memnuniyeti', desc: '%98 memnuniyet oranı' }
    ],
    priceRange: '₺400-2500',
    avgPrice: '600',
    brands: ['Bosch', 'Siemens', 'Arçelik', 'Beko', 'Vestel', 'Samsung', 'LG', 'Whirlpool'],
    commonIssues: [
      'Soğutmuyor',
      'Su akıtıyor',
      'Yıkamıyor', 
      'Sıkamıyor',
      'Gürültü yapıyor',
      'Açılmıyor'
    ]
  }
  
  const trackingConfig = await getTrackingConfig(DB)
  return c.html(generateServiceLandingPage(serviceData, trackingConfig))
})

app.get('/hizmetler/klima-tamiri', async (c) => {
  const { DB } = c.env
  
  const serviceData = {
    serviceName: 'Klima Tamiri',
    serviceSlug: 'klima-tamiri', 
    title: 'Klima Tamiri ve Bakımı - GARANTOR360 | Profesyonel Klima Servisi',
    description: 'Klima tamiri, bakımı ve montajı. Tüm klima markalarında uzman servis. Hızlı müdahale ve uygun fiyat garantisi.',
    keywords: 'klima tamiri, klima servisi, klima bakımı, klima montajı, klima tamir servisi',
    icon: 'fas fa-snowflake',
    bgColor: 'from-cyan-600 to-blue-600',
    features: [
      { icon: 'fas fa-thermometer-half', title: 'Klima Uzmanı', desc: 'Sertifikalı teknisyenler' },
      { icon: 'fas fa-leaf', title: 'Çevre Dostu', desc: 'Eco-friendly gazlar' },
      { icon: 'fas fa-calendar-check', title: 'Periyodik Bakım', desc: 'Yıllık bakım planı' },
      { icon: 'fas fa-snowflake', title: 'Soğutma Garantisi', desc: 'Performans garantisi' }
    ],
    priceRange: '₺300-2000',
    avgPrice: '450',
    brands: ['Daikin', 'Mitsubishi', 'Samsung', 'LG', 'Arçelik', 'Vestel', 'Bosch', 'Carrier'],
    commonIssues: [
      'Soğutmuyor',
      'Sızdırıyor',
      'Gürültü yapıyor',
      'Donuyor',
      'Koku yapıyor',
      'Açılmıyor'
    ]
  }
  
  const trackingConfig = await getTrackingConfig(DB)
  return c.html(generateServiceLandingPage(serviceData, trackingConfig))
})

// Location Landing Pages Routes  
app.get('/bölgeler/istanbul', async (c) => {
  const { DB } = c.env
  
  const locationData = {
    cityName: 'İstanbul',
    citySlug: 'istanbul',
    title: 'İstanbul TV Tamiri ve Beyaz Eşya Servisi - GARANTOR360',
    description: 'İstanbul genelinde TV tamiri ve beyaz eşya servisi. Avrupa ve Anadolu yakası tüm ilçelerde hızlı servis.',
    keywords: 'İstanbul tv tamiri, İstanbul beyaz eşya servisi, İstanbul klima tamiri, İstanbul elektronik servisi',
    population: '15.5 milyon',
    districts: ['Kadıköy', 'Beşiktaş', 'Şişli', 'Üsküdar', 'Bakırköy', 'Maltepe', 'Ataşehir', 'Başakşehir'],
    serviceAreas: ['Avrupa Yakası', 'Anadolu Yakası', 'Adalar'],
    responseTime: '45 dakika',
    dailyJobs: '150-200',
    coverageArea: '5.343 km²',
    region: 'Marmara',
    latitude: 41.0082,
    longitude: 28.9784,
    technicianCount: 150
  }
  
  const trackingConfig = await getTrackingConfig(DB)
  return c.html(generateLocationLandingPage(locationData, trackingConfig))
})

app.get('/bölgeler/ankara', async (c) => {
  const { DB } = c.env
  
  const locationData = {
    cityName: 'Ankara',
    citySlug: 'ankara',
    title: 'Ankara TV Tamiri ve Beyaz Eşya Servisi - GARANTOR360',
    description: 'Ankara genelinde profesyonel TV tamiri ve beyaz eşya servisi. Tüm ilçelerde güvenilir teknik servis hizmeti.',
    keywords: 'Ankara tv tamiri, Ankara beyaz eşya servisi, Ankara klima tamiri, Ankara elektronik servisi',
    population: '5.7 milyon',
    districts: ['Çankaya', 'Keçiören', 'Yenimahalle', 'Mamak', 'Sincan', 'Etimesgut', 'Altındağ', 'Pursaklar'],
    serviceAreas: ['Merkez İlçeler', 'Dış İlçeler', 'OSB Bölgeleri'],
    responseTime: '35 dakika', 
    dailyJobs: '80-120',
    coverageArea: '25.632 km²',
    region: 'İç Anadolu',
    latitude: 39.9334,
    longitude: 32.8597,
    technicianCount: 85
  }
  
  const trackingConfig = await getTrackingConfig(DB)
  return c.html(generateLocationLandingPage(locationData, trackingConfig))
})

app.get('/bölgeler/izmir', async (c) => {
  const { DB } = c.env
  
  const locationData = {
    cityName: 'İzmir',
    citySlug: 'izmir',
    title: 'İzmir TV Tamiri ve Beyaz Eşya Servisi - GARANTOR360',
    description: 'İzmir genelinde hızlı TV tamiri ve beyaz eşya servisi. Konak, Bornova, Karşıyaka ve tüm ilçelerde profesyonel hizmet.',
    keywords: 'İzmir tv tamiri, İzmir beyaz eşya servisi, İzmir klima tamiri, İzmir elektronik servisi',
    population: '4.4 milyon',
    districts: ['Konak', 'Bornova', 'Karşıyaka', 'Buca', 'Gaziemir', 'Balçova', 'Narlıdere', 'Çiğli'],
    serviceAreas: ['Merkez İlçeler', 'Kuzey İlçeler', 'Güney İlçeler'],
    responseTime: '40 dakika',
    dailyJobs: '60-90', 
    coverageArea: '11.891 km²',
    region: 'Ege',
    latitude: 38.4192,
    longitude: 27.1287,
    technicianCount: 70
  }
  
  const trackingConfig = await getTrackingConfig(DB)
  return c.html(generateLocationLandingPage(locationData, trackingConfig))
})

// Default route - Customer Landing Page with SEO & A/B Testing
app.get('/', async (c) => {
  const { DB } = c.env
  
  // Generate realistic live user count for both counters
  const liveUserCount = Math.floor(Math.random() * 25) + 38; // 38-62 range (more active)
  
  // Get tracking configuration
  const trackingConfig = await getTrackingConfig(DB)
  
  // 🎯 A/B Testing - Get homepage variant
  const userId = c.req.header('X-User-ID') || `user_${Date.now()}_${Math.random()}`
  const heroVariant = getABTestVariant('homepage-hero-v2', userId) || {
    config: {
      headline: 'Türkiye\'nin En Güvenilir Teknik Servisi',
      buttonText: 'Hemen Teklif Al',
      buttonColor: 'bg-blue-600'
    }
  }
  
  // 📊 Dynamic SEO - Generate location-aware meta data
  const userIP = c.req.header('CF-Connecting-IP') || c.req.header('X-Forwarded-For')
  const userCity = c.req.header('CF-IPCity') || 'Türkiye' // Cloudflare provides this
  const seoData = generateDynamicSEO('homepage', userCity)
  
  return c.html(`<!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        
        <!-- 🎯 Dynamic SEO Meta Tags -->
        <title>${seoData.title}</title>
        <meta name="description" content="${seoData.description}">
        <meta name="keywords" content="${seoData.keywords.join(', ')}">
        <link rel="canonical" href="${seoData.canonicalUrl}">
        
        <!-- 📱 Open Graph Meta Tags -->
        <meta property="og:title" content="${seoData.ogTitle || seoData.title}">
        <meta property="og:description" content="${seoData.ogDescription || seoData.description}">
        <meta property="og:image" content="${seoData.ogImage || 'https://garantor360.com/static/og-image.jpg'}">
        <meta property="og:url" content="${seoData.canonicalUrl}">
        <meta property="og:type" content="website">
        
        <!-- 🐦 Twitter Card Meta Tags -->
        <meta name="twitter:card" content="summary_large_image">
        <meta name="twitter:title" content="${seoData.title}">
        <meta name="twitter:description" content="${seoData.description}">
        <meta name="twitter:image" content="${seoData.ogImage || 'https://garantor360.com/static/og-image.jpg'}">
        
        <!-- 🔍 Additional SEO Tags -->
        <meta name="robots" content="index, follow">
        <meta name="author" content="GARANTOR360">
        <meta name="geo.region" content="TR">
        <meta name="geo.placename" content="${userCity}">
        
        <!-- 📊 A/B Testing & Analytics -->
        <script>
        window.abTestData = {
          userId: '${userId}',
          heroVariant: '${heroVariant.id || 'control'}',
          testId: 'homepage-hero-v2'
        };
        window.seoData = ${JSON.stringify(seoData)};
        </script>
        
        ${generateTrackingScripts(trackingConfig, 'Ana Sayfa - Garantor360', 'Landing Page')}
        
        <!-- Schema.org Organization Structured Data -->
        <script type="application/ld+json">
        ${JSON.stringify(generateSchemaOrg('organization', {}), null, 2)}
        </script>
        
        <!-- Critical CSS inline for faster loading -->
        <style>
        /* Critical styles for above-the-fold content */
        .corporate-gradient { background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%); }
        .card-corporate { transition: all 0.3s ease; border: 2px solid transparent; }
        .card-corporate:hover { transform: translateY(-4px); box-shadow: 0 12px 32px rgba(30, 58, 138, 0.2); border-color: #f59e0b; }
        .superhero-glow { filter: drop-shadow(0 0 20px rgba(59, 130, 246, 0.3)); transition: all 0.4s ease; }
        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; }
        /* Performance optimizations */
        * { box-sizing: border-box; }
        img { max-width: 100%; height: auto; }
        .lazy-loading { background-color: #f3f4f6; min-height: 200px; }
        </style>
        
        <!-- Cache and Performance Headers -->
        <meta http-equiv="Cache-Control" content="public, max-age=31536000, immutable">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover">
        
        <!-- DNS prefetch for external resources -->
        <link rel="dns-prefetch" href="//cdn.jsdelivr.net">
        <link rel="dns-prefetch" href="//cdn.tailwindcss.com">
        <link rel="dns-prefetch" href="//fonts.googleapis.com">
        
        <!-- Resource hints for critical third-party content -->
        <link rel="preconnect" href="https://cdn.jsdelivr.net" crossorigin>
        <link rel="preconnect" href="https://cdn.tailwindcss.com" crossorigin>
        
        <!-- Preload critical resources -->
        <link rel="preload" href="https://cdn.tailwindcss.com" as="script">
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link rel="preload" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
        <noscript><link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet"></noscript>
        
        <!-- Font display optimization -->
        <style>
        @font-face {
            font-family: 'Font Awesome 6 Free';
            font-display: swap;
        }
        </style>
        
        <!-- Non-blocking async script loading -->
        <script async src="https://cdn.tailwindcss.com"></script>
        <script>
            // Suppress TailwindCSS CDN warning in production
            const originalWarn = console.warn;
            console.warn = function(...args) {
                if (args[0] && typeof args[0] === 'string' && args[0].includes('cdn.tailwindcss.com')) {
                    return; // Suppress this warning
                }
                originalWarn.apply(console, args);
            };
        </script>
        
        <!-- Defer non-critical scripts - Updated versions -->
        <script defer src="https://cdn.jsdelivr.net/npm/chart.js@4.4.3/dist/chart.umd.js"></script>
        <script defer src="https://cdn.jsdelivr.net/npm/axios@1.7.7/dist/axios.min.js"></script>
        <script defer src="/static/app.js"></script>
        <script defer src="/slider.js"></script>
        <style>
            .corporate-gradient { background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%); }
            .card-corporate { 
              transition: all 0.3s ease; 
              border: 2px solid transparent;
            }
            .card-corporate:hover { 
              transform: translateY(-4px); 
              box-shadow: 0 12px 32px rgba(30, 58, 138, 0.2);
              border-color: #f59e0b;
            }
            .pulse-dot { 
              animation: pulseDot 2s ease-in-out infinite; 
            }
            @keyframes pulseDot {
              0%, 100% { opacity: 0.7; transform: scale(1); }
              50% { opacity: 1; transform: scale(1.1); }
            }
            .stats-counter { 
              font-weight: 700; 
              color: #1e3a8a;
            }
            .section-divider {
              height: 3px;
              background: linear-gradient(90deg, transparent, #f59e0b, transparent);
            }
            .sharp-corner {
              border-radius: 0;
            }
            .minimal-corner {
              border-radius: 2px;
            }
            .hero-overlay {
              background: rgba(30, 58, 138, 0.4);
            }
            .superhero-glow {
              filter: drop-shadow(0 0 20px rgba(59, 130, 246, 0.3));
              transition: all 0.4s ease;
              animation: superheroFloat 3s ease-in-out infinite, superheroGlow 2s ease-in-out infinite alternate;
            }
            .superhero-glow:hover {
              filter: drop-shadow(0 0 40px rgba(59, 130, 246, 0.8));
              transform: scale(1.05) rotate(2deg);
              animation-play-state: paused;
            }
            .superhero-glow img {
              transition: all 0.3s ease;
            }
            .superhero-glow:hover img {
              transform: translateY(-5px);
            }
            @keyframes superheroFloat {
              0%, 100% { 
                transform: translateY(0px) rotate(0deg); 
              }
              25% { 
                transform: translateY(-10px) rotate(1deg); 
              }
              50% { 
                transform: translateY(-5px) rotate(0deg); 
              }
              75% { 
                transform: translateY(-15px) rotate(-1deg); 
              }
            }
            @keyframes superheroGlow {
              0% { 
                filter: drop-shadow(0 0 20px rgba(59, 130, 246, 0.3)); 
              }
              100% { 
                filter: drop-shadow(0 0 35px rgba(59, 130, 246, 0.6)); 
              }
            }
            .superhero-title {
              animation: titlePulse 4s ease-in-out infinite;
            }
            
            /* Kompakt Güvenlik Sistemi Animasyonları */
            .security-card-hover:hover {
              transform: translateY(-2px);
              box-shadow: 0 8px 24px rgba(59, 130, 246, 0.15);
            }
            }
            .superhero-subtitle {
              animation: subtitleFade 3s ease-in-out infinite alternate;
            }
            @keyframes titlePulse {
              0%, 100% { 
                transform: scale(1); 
                text-shadow: 0 0 10px rgba(251, 191, 36, 0.3);
              }
              50% { 
                transform: scale(1.02); 
                text-shadow: 0 0 20px rgba(251, 191, 36, 0.5);
              }
            }
            @keyframes subtitleFade {
              0% { 
                opacity: 0.8; 
              }
              100% { 
                opacity: 1; 
              }
            }
            .superhero-container:hover .superhero-title {
              text-shadow: 0 0 25px rgba(251, 191, 36, 0.8);
              transform: scale(1.05);
            }
            .superhero-container:hover .superhero-subtitle {
              transform: translateY(-2px);
              opacity: 1;
            }
            .home-services-glow {
              filter: drop-shadow(0 0 20px rgba(230, 126, 34, 0.3));
              transition: all 0.4s ease;
              animation: heartbeat 2s ease-in-out infinite, servicesGlow 3s ease-in-out infinite alternate;
            }
            .home-services-glow:hover {
              filter: drop-shadow(0 0 40px rgba(230, 126, 34, 0.6));
              transform: scale(1.08);
              animation: heartbeatFast 1s ease-in-out infinite, servicesGlow 1.5s ease-in-out infinite alternate;
            }
            @keyframes heartbeat {
              0%, 50%, 100% { 
                transform: scale(1); 
              }
              25% { 
                transform: scale(1.05); 
              }
              37% { 
                transform: scale(1.02); 
              }
            }
            @keyframes heartbeatFast {
              0%, 50%, 100% { 
                transform: scale(1.08); 
              }
              25% { 
                transform: scale(1.15); 
              }
              37% { 
                transform: scale(1.12); 
              }
            }
            @keyframes servicesGlow {
              0% { 
                filter: drop-shadow(0 0 20px rgba(230, 126, 34, 0.3)); 
              }
              100% { 
                filter: drop-shadow(0 0 35px rgba(214, 137, 16, 0.5)); 
              }
            }
            
            /* Fast Contact Text Glow Effect */
            .fast-contact-text {
              background: linear-gradient(90deg, #fbbf24, #f59e0b, #d97706, #92400e);
              background-size: 400% 100%;
              -webkit-background-clip: text;
              -webkit-text-fill-color: transparent;
              background-clip: text;
              animation: fastContactShine 3s ease-in-out infinite;
              font-weight: 700;
              text-shadow: 0 0 30px rgba(251, 191, 36, 0.5);
              position: relative;
              overflow: hidden;
              display: inline-block;
            }
            
            .fast-contact-text::before {
              content: '';
              position: absolute;
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
              background: linear-gradient(90deg, transparent 0%, rgba(255, 255, 255, 0.6) 50%, transparent 100%);
              animation: fastContactSweep 2.5s ease-in-out infinite;
              z-index: 1;
              transform: translateX(-100%);
            }
            
            @keyframes fastContactShine {
              0% { 
                background-position: 0% 50%; 
                filter: brightness(1) drop-shadow(0 0 10px rgba(251, 191, 36, 0.3));
              }
              25% {
                background-position: 50% 50%;
                filter: brightness(1.3) drop-shadow(0 0 20px rgba(251, 191, 36, 0.6));
              }
              50% { 
                background-position: 100% 50%; 
                filter: brightness(1.5) drop-shadow(0 0 30px rgba(251, 191, 36, 0.8));
              }
              75% {
                background-position: 50% 50%;
                filter: brightness(1.3) drop-shadow(0 0 20px rgba(251, 191, 36, 0.6));
              }
              100% { 
                background-position: 0% 50%; 
                filter: brightness(1) drop-shadow(0 0 10px rgba(251, 191, 36, 0.3));
              }
            }
            
            @keyframes fastContactSweep {
              0% { 
                transform: translateX(-100%);
                opacity: 0;
              }
              20% { 
                transform: translateX(-50%);
                opacity: 1;
              }
              80% { 
                transform: translateX(50%);
                opacity: 1;
              }
              100% { 
                transform: translateX(100%);
                opacity: 0;
              }
            }
            
            /* Custom Radio Button Styles */
            input[type="radio"][name="urgency"] {
              appearance: none;
              -webkit-appearance: none;
              width: 20px;
              height: 20px;
              border: 2px solid #a855f7;
              border-radius: 50%;
              background: transparent;
              position: relative;
              cursor: pointer;
              transition: all 0.3s ease;
            }
            
            /* Normal - Sarı (Yellow) */
            input[type="radio"][name="urgency"][value="normal"]:checked {
              border-color: #eab308;
              background: #eab308;
            }
            
            input[type="radio"][name="urgency"][value="normal"]:hover {
              border-color: #eab308;
              box-shadow: 0 0 0 3px rgba(234, 179, 8, 0.2);
            }
            
            /* Acil - Yeşil (Green) */
            input[type="radio"][name="urgency"][value="urgent"]:checked {
              border-color: #22c55e;
              background: #22c55e;
            }
            
            input[type="radio"][name="urgency"][value="urgent"]:hover {
              border-color: #22c55e;
              box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.2);
            }
            
            /* Çok Acil - Kırmızı (Red) */
            input[type="radio"][name="urgency"][value="emergency"]:checked {
              border-color: #dc2626;
              background: #dc2626;
            }
            
            input[type="radio"][name="urgency"][value="emergency"]:hover {
              border-color: #dc2626;
              box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.2);
            }
            
            input[type="radio"][name="urgency"]:checked::before {
              content: '';
              position: absolute;
              top: 50%;
              left: 50%;
              transform: translate(-50%, -50%);
              width: 8px;
              height: 8px;
              border-radius: 50%;
              background: white;
            }
            
            /* Floating Dynamic Stats Text */
            .floating-stats-text {
              color: #ffffff;
              text-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
              opacity: 0.8;
              transition: all 0.3s ease;
              min-height: 20px;
            }
            
            /* Floating Dynamic Activity Text */
            .floating-activity-text {
              color: #eab308;
              text-shadow: 0 0 10px rgba(234, 179, 8, 0.3);
              opacity: 0.8;
              transition: all 0.3s ease;
              min-height: 20px;
            }
            
            /* Floating Notifications Styles */
            #floating-notification-area {
              position: relative;
              overflow: hidden;
            }
            
            .floating-notification {
              position: absolute;
              left: 50%;
              top: 50%;
              transform: translate(-50%, -50%);
              color: #eab308;
              font-weight: 600;
              font-size: 16px;
              text-align: center;
              opacity: 0;
              animation: floatingNotificationAppear 4s ease-in-out;
              z-index: 10;
              text-shadow: 0 2px 4px rgba(234, 179, 8, 0.3);
            }
            
            .floating-response-text {
              color: #eab308;
              font-weight: 600;
              font-size: 16px;
              text-shadow: 0 2px 4px rgba(234, 179, 8, 0.3);
              opacity: 0;
              animation: floatingTextAppear 3s ease-in-out infinite;
            }
            
            @keyframes floatingNotificationAppear {
              0% { 
                opacity: 0; 
                transform: translate(-50%, -50%) scale(0.8);
              }
              15% { 
                opacity: 1; 
                transform: translate(-50%, -50%) scale(1);
              }
              85% { 
                opacity: 1; 
                transform: translate(-50%, -50%) scale(1);
              }
              100% { 
                opacity: 0; 
                transform: translate(-50%, -50%) scale(0.8);
              }
            }
            
            @keyframes floatingTextAppear {
              0% { 
                opacity: 0; 
                transform: scale(0.95);
              }
              50% { 
                opacity: 1; 
                transform: scale(1);
              }
              100% { 
                opacity: 0; 
                transform: scale(0.95);
              }
            }
            
            /* PROFESYONEL CANLI TALEP METİNLERİ İÇİN CSS */
            
            #job-feed .job-category-text {
                font-size: 14px !important;
                font-weight: 500 !important;
                color: #111827 !important;
                line-height: 1.25 !important;
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif !important;
            }
            
            #job-feed .job-details-text {
                font-size: 12px !important;
                font-weight: 400 !important;
                color: #4b5563 !important;
                line-height: 1.5 !important;
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif !important;
            }
            
            #job-feed .job-time-text {
                font-size: 14px !important;
                font-weight: 600 !important;
                color: #2563eb !important;
                line-height: 1.4 !important;
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
            }
            
            /* EXTRA GÜVENCE: TÜM ELEMANLAR İÇİN ZORLA STILLEME */
            #job-feed > div > div > div > div:first-child {
                font-size: 16px !important;
                font-weight: 600 !important;
                color: #1f2937 !important;
            }
            
            #job-feed > div > div > div > div:nth-child(2) {
                font-size: 14px !important;
                font-weight: 500 !important;
                color: #6b7280 !important;
            }
            
            /* SELECT OPTION RENKLERİ DÜZELTMESİ - ENHANCED */
            select.city-select option {
                color: #1f2937 !important;
                background-color: #ffffff !important;
                font-weight: 500 !important;
                padding: 8px 12px !important;
                font-size: 14px !important;
            }
            
            select.city-select option:hover {
                background-color: #f3f4f6 !important;
                color: #111827 !important;
            }
            
            select.city-select option:checked,
            select.city-select option:focus,
            select.city-select option:active {
                background-color: #3b82f6 !important;
                color: #ffffff !important;
            }
            
            /* Service Category Select Styling */
            select.service-category-select option {
                color: #1f2937 !important;
                background-color: #ffffff !important;
                font-weight: 500 !important;
                padding: 8px 12px !important;
                font-size: 14px !important;
            }
            
            select.service-category-select optgroup {
                color: #374151 !important;
                background-color: #f9fafb !important;
                font-weight: 600 !important;
                padding: 4px 8px !important;
                font-size: 13px !important;
            }
            
            /* Fallback for older method */
            #customerCity option,
            #serviceCategory option {
                color: #1f2937 !important;
                background-color: #ffffff !important;
                font-weight: 500 !important;
            }
            
            #customerCity option:hover,
            #serviceCategory option:hover {
                background-color: #f3f4f6 !important;
                color: #111827 !important;
            }
            
            #serviceCategory optgroup {
                color: #374151 !important;
                background-color: #f9fafb !important;
                font-weight: 600 !important;
                color: #1f2937 !important;
            }
            
            /* Select açıldığında option listesi için */
            select#customerCity {
                color: white; /* Seçili değer beyaz kalacak */
            }
            
            select#customerCity option {
                color: #1f2937 !important; /* Dropdown listesindeki seçenekler koyu */
                background-color: white !important;
                padding: 8px 12px;
            }
        </style>
    </head>
    <body class="bg-slate-50">
        <!-- Google Tag Manager (noscript) -->
        ${generateGTMNoscript(trackingConfig)}
        <!-- End Google Tag Manager (noscript) -->
        
        <!-- Navigation -->
        <nav id="main-nav" class="bg-white shadow-lg sticky top-0 z-50 border-b-2 border-blue-100 transition-all duration-300 ease-in-out">
            <script>
                // ULTRA SMOOTH MOBILE NAVIGATION - Advanced Anti-Jitter System
                (function() {
                    // Enhanced scroll tracking variables
                    let lastScrollY = 0;
                    let scrollTimeout;
                    let scrollHistory = []; // Track last 5 scroll positions
                    let isNavigationVisible = true;
                    let scrollVelocity = 0;
                    let lastScrollTime = 0;
                    
                    // Navigation element (will be found after DOM load)
                    let nav = null;
                    
                    // Timing constants - Balanced for responsiveness
                    const DEBOUNCE_TIME = 120; // Responsive but stable
                    const MIN_SCROLL_DISTANCE = 12; // Lower threshold for sensitivity
                    const HERO_HEIGHT = 450;
                    const TOP_THRESHOLD = 30;
                    const MOMENTUM_THRESHOLD = 0.2; // Much lower for responsiveness
                    
                    function initializeNavigation() {
                        nav = document.getElementById('main-nav');
                        if (!nav) {
                            console.error('❌ Navigation element #main-nav not found!');
                            return false;
                        }
                        console.log('✅ Ultra-smooth navigation initialized');
                        return true;
                    }
                    
                    function updateScrollHistory(scrollY, timestamp) {
                        scrollHistory.push({ y: scrollY, time: timestamp });
                        if (scrollHistory.length > 5) {
                            scrollHistory.shift(); // Keep only last 5 positions
                        }
                        
                        // Calculate scroll velocity
                        if (scrollHistory.length >= 2) {
                            const latest = scrollHistory[scrollHistory.length - 1];
                            const previous = scrollHistory[scrollHistory.length - 2];
                            const timeDiff = latest.time - previous.time;
                            const distDiff = latest.y - previous.y;
                            scrollVelocity = timeDiff > 0 ? Math.abs(distDiff / timeDiff) : 0;
                        }
                    }
                    
                    function getScrollMomentum() {
                        if (scrollHistory.length < 3) return 0;
                        
                        let totalDirection = 0;
                        for (let i = 1; i < scrollHistory.length; i++) {
                            const direction = scrollHistory[i].y > scrollHistory[i-1].y ? 1 : -1;
                            totalDirection += direction;
                        }
                        
                        // Return normalized momentum (-1 to 1)
                        return totalDirection / (scrollHistory.length - 1);
                    }
                    
                    function showNavigation() {
                        if (!nav) return;
                        nav.style.transform = 'translateY(0)';
                        nav.style.height = 'auto';
                        nav.style.visibility = 'visible';
                        nav.style.opacity = '1';
                        isNavigationVisible = true;
                        console.log('🔼 Navigation shown (momentum-based)');
                    }
                    
                    function hideNavigation() {
                        if (!nav) return;
                        // Only hide on mobile
                        if (window.innerWidth >= 768) {
                            showNavigation();
                            return;
                        }
                        
                        nav.style.transform = 'translateY(-100%)';
                        nav.style.height = '0px';
                        nav.style.visibility = 'hidden';
                        nav.style.opacity = '0';
                        isNavigationVisible = false;
                        console.log('🔽 Navigation hidden (momentum-based)');
                    }
                    
                    function handleScroll() {
                        const currentScrollY = window.scrollY;
                        const currentTime = performance.now();
                        
                        // Desktop: always show
                        if (window.innerWidth >= 768) {
                            showNavigation();
                            return;
                        }
                        
                        // Update scroll tracking
                        updateScrollHistory(currentScrollY, currentTime);
                        
                        // Clear existing timeout
                        clearTimeout(scrollTimeout);
                        
                        scrollTimeout = setTimeout(function() {
                            const scrollDifference = Math.abs(currentScrollY - lastScrollY);
                            
                            // Ignore micro-scrolls
                            if (scrollDifference < MIN_SCROLL_DISTANCE) {
                                return;
                            }
                            
                            const momentum = getScrollMomentum();
                            const isScrollingDown = momentum > 0.15; // More sensitive downward detection
                            const isScrollingUp = momentum < -0.15; // More sensitive upward detection
                            
                            console.log('📊 Scroll Analysis:', {
                                y: currentScrollY,
                                diff: scrollDifference,
                                momentum: momentum.toFixed(2),
                                velocity: scrollVelocity.toFixed(2),
                                direction: isScrollingDown ? 'DOWN' : isScrollingUp ? 'UP' : 'UNCLEAR'
                            });
                            
                            // Decision logic based on position and momentum
                            if (currentScrollY <= TOP_THRESHOLD) {
                                // Always show at top of page
                                showNavigation();
                                console.log('🔝 At top of page - showing navigation');
                            } else if (currentScrollY > HERO_HEIGHT && isScrollingDown) {
                                // Hide: past hero + consistent down scroll (removed velocity requirement)
                                hideNavigation();
                                console.log('⬇️ Downward scroll past hero - hiding navigation');
                            } else if (isScrollingUp) {
                                // Show: consistent upward scroll OR back in hero area
                                showNavigation();
                                console.log('⬆️ Upward scroll detected - showing navigation');
                            }
                            
                            lastScrollY = currentScrollY;
                            lastScrollTime = currentTime;
                        }, DEBOUNCE_TIME);
                    }
                    
                    function handleResize() {
                        // Desktop: always show navigation
                        if (window.innerWidth >= 768) {
                            showNavigation();
                        }
                    }
                    
                    // Initialize when DOM is ready
                    function initialize() {
                        if (document.readyState === 'loading') {
                            document.addEventListener('DOMContentLoaded', initialize);
                            return;
                        }
                        
                        if (!initializeNavigation()) {
                            // Retry after a short delay if nav not found
                            setTimeout(initialize, 100);
                            return;
                        }
                        
                        // Add event listeners
                        window.addEventListener('scroll', handleScroll, { passive: true });
                        window.addEventListener('resize', handleResize);
                        
                        console.log('🚀 Ultra-smooth navigation system active');
                    }
                    
                    // Start initialization
                    initialize();
                })();
            </script>
            <div class="max-w-7xl mx-auto px-6">
                <div class="flex justify-between items-center h-16 relative md:flex md:justify-between">
                    <!-- Desktop Logo -->
                    <div class="hidden md:flex items-center">
                        <img src="/static/garantor360-logo.png" alt="Garantor360" class="h-14">
                    </div>
                    
                    <!-- Mobile Layout: HİZMET AL (Left) + Hamburger (Right) -->
                    <div class="flex items-center justify-between w-full md:hidden">
                        <!-- Mobile HİZMET AL Button (Left) -->
                        <div class="flex items-center">
                            <a href="#hizmet-al" class="bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600 text-white px-4 py-2 rounded-lg font-bold text-xs transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105">
                                <i class="fas fa-handshake mr-1"></i>
                                HİZMET AL
                            </a>
                        </div>
                        
                        <!-- Mobile Hamburger Menu (Right) -->
                        <div class="flex items-center">
                            <button class="text-gray-700 hover:text-blue-600 transition duration-200">
                                <i class="fas fa-bars text-xl"></i>
                            </button>
                        </div>
                    </div>
                    
                    <!-- Desktop Navigation Menu -->
                    <div class="hidden md:flex items-center space-x-6">
                        <div class="relative group">
                            <a href="#services" class="text-gray-700 hover:text-blue-600 font-medium transition duration-200 flex items-center">
                                <i class="fas fa-tools mr-2 text-sm"></i>
                                Hizmetler
                                <i class="fas fa-chevron-down ml-1 text-xs group-hover:rotate-180 transition-transform duration-200"></i>
                            </a>
                            <!-- Services Dropdown -->
                            <div class="absolute top-full left-0 mt-2 w-48 bg-white border border-gray-100 rounded-lg shadow-xl opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
                                <div class="py-2">
                                    <a href="/hizmetler/tv-tamiri" class="block px-4 py-2 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-600 transition-colors">
                                        <i class="fas fa-tv mr-2 text-blue-500"></i>TV Tamiri
                                    </a>
                                    <a href="/hizmetler/beyaz-esya" class="block px-4 py-2 text-sm text-gray-700 hover:bg-purple-50 hover:text-purple-600 transition-colors">
                                        <i class="fas fa-snowflake mr-2 text-purple-500"></i>Beyaz Eşya
                                    </a>
                                    <a href="/hizmetler/klima-tamiri" class="block px-4 py-2 text-sm text-gray-700 hover:bg-indigo-50 hover:text-indigo-600 transition-colors">
                                        <i class="fas fa-wind mr-2 text-indigo-500"></i>Klima Tamiri
                                    </a>
                                </div>
                            </div>
                        </div>
                        
                        <div class="relative group">
                            <a href="#locations" class="text-gray-700 hover:text-blue-600 font-medium transition duration-200 flex items-center">
                                <i class="fas fa-map-marked-alt mr-2 text-sm"></i>
                                Bölgeler
                                <i class="fas fa-chevron-down ml-1 text-xs group-hover:rotate-180 transition-transform duration-200"></i>
                            </a>
                            <!-- Locations Dropdown -->
                            <div class="absolute top-full left-0 mt-2 w-48 bg-white border border-gray-100 rounded-lg shadow-xl opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
                                <div class="py-2">
                                    <a href="/bölgeler/istanbul" class="block px-4 py-2 text-sm text-gray-700 hover:bg-red-50 hover:text-red-600 transition-colors">
                                        <i class="fas fa-city mr-2 text-red-500"></i>İstanbul
                                    </a>
                                    <a href="/bölgeler/ankara" class="block px-4 py-2 text-sm text-gray-700 hover:bg-orange-50 hover:text-orange-600 transition-colors">
                                        <i class="fas fa-building mr-2 text-orange-500"></i>Ankara
                                    </a>
                                    <a href="/bölgeler/izmir" class="block px-4 py-2 text-sm text-gray-700 hover:bg-blue-50 hover:text-blue-600 transition-colors">
                                        <i class="fas fa-anchor mr-2 text-blue-500"></i>İzmir
                                    </a>
                                </div>
                            </div>
                        </div>
                        
                        <a href="#guarantee" class="text-gray-700 hover:text-blue-600 font-medium transition duration-200 flex items-center">
                            <i class="fas fa-shield-check mr-2 text-sm"></i>
                            Güvenceler
                        </a>
                    </div>
                    
                    <!-- Desktop Action Buttons -->
                    <div class="hidden md:flex items-center space-x-4">
                        <div class="flex flex-col items-center gap-2">
                            <a href="#hizmet-al" class="bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600 text-white px-6 py-3 rounded-lg font-bold text-sm transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105">
                                <i class="fas fa-handshake mr-2"></i>
                                HİZMET AL
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Hero Section - Customer Focused -->
        <section class="relative bg-gradient-to-br from-blue-900 via-blue-800 to-blue-900 text-white py-28 lg:py-20 overflow-hidden">
            <!-- Background Pattern -->
            <div class="absolute inset-0 opacity-10">
                <div class="absolute top-0 left-0 w-full h-full" style="background-image: radial-gradient(circle at 25% 25%, #f59e0b 2px, transparent 2px); background-size: 60px 60px;"></div>
            </div>
            
            <div class="max-w-7xl mx-auto px-6 relative z-10">

                
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center mt-2.5">
                    <!-- Left: Buttons and Content -->
                    <div class="text-center lg:text-left order-2 lg:order-1">
                        <!-- KAYIP YOK Banner - Desktop Only, Above Yellow Badge, Left Aligned -->
                        <div class="mb-4 hidden lg:flex lg:justify-start">
                            <div class="inline-flex items-center bg-white/5 backdrop-blur-sm rounded-full px-6 py-2 border border-white/10">
                                <div class="flex items-center space-x-4">
                                    <span id="subtleSlogan" class="text-white/90 font-medium text-sm transition-all duration-500">RİSK YOK</span>
                                    <div class="w-1 h-1 bg-white/40 rounded-full"></div>
                                    <span class="text-white/70 text-xs">%100 Güvenli</span>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Yellow Badge -->
                        <div class="mb-6 flex justify-center lg:justify-start">
                            <div class="bg-amber-400 text-blue-900 px-6 py-2 rounded-full font-bold text-sm">
                                🇹🇷 Türkiyenin En Güvenli Hizmet Platformu
                            </div>
                        </div>
                        
                        <!-- 🎯 A/B Testing Enabled Hero Content - LCP Optimized -->
                        <h1 id="heroHeadline" class="text-4xl lg:text-6xl font-bold mb-6 tracking-tight leading-tight" style="font-display: swap;">
                            ${heroVariant.config.headline}
                        </h1>
                        <p class="text-xl mb-8 opacity-90 font-light leading-relaxed">
                            ${userCity !== 'Türkiye' ? `${userCity}'da` : 'Tüm Türkiye\'de'} ev tamiri, elektronik onarım ve teknik hizmetlerde <span class="text-amber-400 font-semibold">ödeme güvencesi</span> ve <span class="text-amber-400 font-semibold">6 ay işçilik garantisi</span> ile güvenli hizmet alın
                        </p>
                        
                        <!-- 🎯 A/B Testing Enabled Action Buttons -->
                        <div class="space-y-3 sm:space-y-4 mb-8">
                            <div class="flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center lg:justify-start items-center">
                                <!-- Primary Button - A/B Test Variant -->
                                <a href="#hizmet-al" id="heroCTA" class="${heroVariant.config.buttonColor} hover:opacity-90 text-white px-6 py-3 sm:px-8 sm:py-4 rounded-lg font-bold text-base sm:text-lg transition-all duration-300 transform hover:scale-105 shadow-lg flex items-center w-full sm:w-auto justify-center" onclick="trackABTestConversion('homepage-hero-v2', 'cta_click')">
                                    <i class="fas fa-rocket mr-2"></i>
                                    ${heroVariant.config.buttonText}
                                </a>
                                
                                <!-- Secondary Button - Hizmetleri Gör (Mavi/Beyaz) -->
                                <a href="#services" onclick="scrollToServicesSection()" class="bg-white/10 hover:bg-white/20 border border-white/30 text-white px-6 py-3 sm:px-8 sm:py-4 rounded-lg font-bold text-base sm:text-lg transition-all duration-300 transform hover:scale-105 shadow-lg flex items-center w-full sm:w-auto justify-center">
                                    <i class="fas fa-list mr-2"></i>
                                    Hizmetleri Gör
                                </a>
                            </div>
                        </div>
                        
                        <!-- Security Badges -->
                        <div class="flex flex-wrap gap-4 justify-center lg:justify-start lg:-mt-2.5">
                            <div class="bg-green-500 text-white px-4 py-2 rounded-lg font-semibold text-sm flex items-center">
                                <i class="fas fa-shield-check mr-2"></i>
                                SSL Güvenlik
                            </div>
                            <div class="bg-yellow-500 text-blue-900 px-4 py-2 rounded-lg font-semibold text-sm flex items-center">
                                <i class="fas fa-medal mr-2"></i>
                                6 Ay Garanti
                            </div>
                            <div class="bg-blue-500 text-white px-4 py-2 rounded-lg font-semibold text-sm flex items-center">
                                <i class="fas fa-clock mr-2"></i>
                                7/24 Destek
                            </div>
                        </div>
                    </div>

                    <!-- Right: Superhero with Active Service Counter -->
                    <div class="relative flex items-center justify-center order-1 lg:order-2" style="margin-top: 42px;">
                        <!-- Active Service Counter (Top Right) -->
                        <div class="absolute right-0 z-30" style="top: 260px; transform: translateX(0px);">
                            <div class="px-2 py-1 md:bg-white/95 md:backdrop-blur-md md:rounded-2xl md:px-4 md:py-2.5 md:shadow-xl md:border md:border-blue-100">
                                <div class="text-center">
                                    <div class="flex items-center justify-center space-x-0.5 mb-0.5 md:space-x-1 md:mb-1">
                                        <div class="w-1.5 h-1.5 bg-green-500 rounded-full animate-pulse md:w-2 md:h-2"></div>
                                        <span class="text-xs font-bold text-white md:text-green-600 tracking-wide">CANLI</span>
                                    </div>
                                    <div class="text-sm font-bold text-white md:text-lg md:text-blue-900">
                                        <span id="activeServiceCount">${liveUserCount}</span> <span class="text-xs text-white/80 md:text-sm md:text-blue-700">Kişi</span>
                                    </div>
                                    <div class="hidden md:block text-xs text-blue-600 font-medium">HİZMET VERİYORUM</div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Superhero Container -->
                        <div class="relative z-10 text-center">
                            <!-- Thought Bubble (Comic Style) -->
                            <div class="absolute -top-20 left-1/2 transform -translate-x-1/2 -translate-x-32 z-20 md:-top-16 md:translate-x-8">
                                <div class="relative">
                                    <!-- Main Bubble -->
                                    <div class="bg-white rounded-3xl px-4 py-3 shadow-xl border-2 border-blue-200 max-w-xs relative">
                                        <p id="thoughtText" class="text-blue-900 text-xs font-medium text-center leading-tight">
                                            Size nasıl yardımcı olabilirim? 🤔
                                        </p>
                                        <!-- Bubble Tail -->
                                        <div class="absolute -bottom-2 left-8 w-0 h-0 border-l-8 border-l-transparent border-r-8 border-r-transparent border-t-8 border-t-white"></div>
                                        <div class="absolute -bottom-1 left-8 w-0 h-0 border-l-8 border-l-transparent border-r-8 border-r-transparent border-t-8 border-t-blue-200"></div>
                                    </div>
                                    <!-- Small thought bubbles -->
                                    <div class="absolute -bottom-6 left-6 w-3 h-3 bg-white rounded-full border border-blue-200"></div>
                                    <div class="absolute -bottom-4 left-4 w-2 h-2 bg-white rounded-full border border-blue-200"></div>
                                </div>
                            </div>
                            
                            <!-- Superhero - Optimized with WebP and lazy loading -->
                            <div class="superhero-glow">
                                <picture>
                                    <source srcset="/static/garantor360-superhero-transparent.webp" type="image/webp">
                                    <source srcset="/static/garantor360-superhero-transparent.avif" type="image/avif">
                                    <img 
                                        src="/static/garantor360-superhero-transparent.png" 
                                        alt="Garantor360 Süper Kahraman - Türkiye'nin en güvenilir teknik servis platformu" 
                                        class="w-80 h-80 lg:w-96 lg:h-96 object-contain mx-auto superhero-image"
                                        loading="lazy"
                                        decoding="async"
                                        width="384"
                                        height="384"
                                    >
                                </picture>
                            </div>
                            
                            <!-- Bottom Text -->
                            <div class="mt-4 text-center flex flex-col items-center justify-center">
                                <p class="text-blue-200 text-base font-bold mx-auto">Türkiye'nin Yeni Trendi</p>
                                <p class="text-blue-300 text-xs font-medium mt-1 mx-auto">10.000+ Kişi Yanılmış Olamaz</p>
                            </div>
                        </div>
                        
                        <!-- Background Decoration -->
                        <div class="absolute inset-0 flex items-center justify-center opacity-20">
                            <div class="w-96 h-96 border-2 border-white/10 rounded-full animate-pulse"></div>
                        </div>
                    </div>
                </div>
                            
                <!-- Subtle Guarantee Banner - Moved to above Yellow Badge for desktop -->
                        </div>
                        
                        <script>
                            // Subtle rotating slogan effect
                            const slogans = ['RISK YOK', 'KAYIP YOK', 'COZUM VAR'];
                            let currentIndex = 0;
                            
                            function rotateSubtleSlogans() {
                                const sloganElement = document.getElementById('subtleSlogan');
                                if (sloganElement) {
                                    // Smooth fade transition
                                    sloganElement.style.opacity = '0.5';
                                    
                                    setTimeout(() => {
                                        sloganElement.innerHTML = slogans[currentIndex];
                                        sloganElement.style.opacity = '0.9';
                                        currentIndex = (currentIndex + 1) % slogans.length;
                                    }, 200);
                                }
                            }
                            
                            // Start subtle rotation
                            document.addEventListener('DOMContentLoaded', function() {
                                setInterval(rotateSubtleSlogans, 1500);
                                
                                // Dynamic Counter Animation - REALISTIC Unified Counter for Both Displays
                                let sharedCurrentCount = 47;  // Start with realistic value
                                
                                function animateCounters() {
                                    // Single counter value for both Hero and Live Users
                                    // Small random change between -2 to +3 (realistic fluctuation)
                                    const change = Math.floor(Math.random() * 6) - 2; // -2 to +3
                                    sharedCurrentCount += change;
                                    
                                    // Keep within REALISTIC bounds 35-78 (believable online users)
                                    sharedCurrentCount = Math.max(35, Math.min(78, sharedCurrentCount));
                                    
                                    // Update Hero Counter (plain format)
                                    const heroCounter = document.getElementById('activeServiceCount');
                                    if (heroCounter) {
                                        heroCounter.textContent = sharedCurrentCount.toString();
                                    }
                                    
                                    // Update Live User Counter (Turkish format with comma)
                                    const liveCounter = document.getElementById('liveUserCount');
                                    if (liveCounter) {
                                        liveCounter.textContent = sharedCurrentCount.toLocaleString('tr-TR');
                                    }
                                    
                                    // Update AKTİF HİZMET counter (slightly higher range)
                                    const activeServicesCounter = document.getElementById('activeServices');
                                    if (activeServicesCounter) {
                                        const serviceChange = Math.floor(Math.random() * 6) - 2; // -2 to +3
                                        let serviceCount = parseInt(activeServicesCounter.textContent) || 156;
                                        serviceCount += serviceChange;
                                        serviceCount = Math.max(145, Math.min(168, serviceCount)); // 145-168 range
                                        activeServicesCounter.textContent = serviceCount.toString();
                                    }
                                    
                                    // Update UZMAN ONLİNE counter (similar range)
                                    const onlineExpertsCounter = document.getElementById('onlineExperts');
                                    if (onlineExpertsCounter) {
                                        const expertChange = Math.floor(Math.random() * 6) - 2; // -2 to +3
                                        let expertCount = parseInt(onlineExpertsCounter.textContent) || 156;
                                        expertCount += expertChange;
                                        expertCount = Math.max(148, Math.min(165, expertCount)); // 148-165 range
                                        onlineExpertsCounter.textContent = expertCount.toString();
                                    }
                                }
                                
                                // Update both counters every 2.5 seconds for more active updates
                                setInterval(animateCounters, 2500);
                                
                                // Thought Bubble Animation
                                const thoughtMessages = [
                                    "Size nasıl yardımcı olabilirim? 🤔",
                                    "Sorununuzu bildirin, en güvenli yolu bulalım! 🛡️",
                                    "En uygun çözümü beraber uygulayalım! ✨", 
                                    "7/24 buradayım, nasıl destek olabilirim? 💪",
                                    "Problemlerinizi çözmek için varım! 🔧",
                                    "Güvenli hizmet almanın yolunu gösterelim! 🎯"
                                ];
                                
                                let currentThoughtIndex = 0;
                                
                                function rotateThoughtBubble() {
                                    const thoughtElement = document.getElementById('thoughtText');
                                    if (thoughtElement) {
                                        // Fade out
                                        thoughtElement.style.opacity = '0.3';
                                        
                                        setTimeout(() => {
                                            // Change text
                                            thoughtElement.textContent = thoughtMessages[currentThoughtIndex];
                                            currentThoughtIndex = (currentThoughtIndex + 1) % thoughtMessages.length;
                                            
                                            // Fade in
                                            thoughtElement.style.opacity = '1';
                                        }, 300);
                                    }
                                }
                                
                                // Change thought every 3 seconds
                                setInterval(rotateThoughtBubble, 3000);
                            });
                            
                            // Global scroll functions
                            function scrollToServicesSection() {
                                const servicesSection = document.querySelector('.py-12.bg-gradient-to-b.from-slate-50.to-white');
                                if (servicesSection) {
                                    servicesSection.scrollIntoView({ 
                                        behavior: 'smooth',
                                        block: 'start'
                                    });
                                }
                            }
                            
                            function scrollToServices() {
                                scrollToServicesSection();
                            }
                            
                            // Make functions globally accessible
                            window.scrollToServicesSection = scrollToServicesSection;
                            window.scrollToServices = scrollToServices;
                        </script>



                    </div>


                </div>
            </div>
        </section>

        <!-- Kompakt Hizmet Kategorileri Başlık Bölümü -->
        <section class="py-6 bg-gradient-to-b from-white via-purple-50 to-purple-200">
            <div class="max-w-7xl mx-auto px-4 text-center">
                <div class="inline-flex items-center bg-blue-50 border border-blue-200 px-3 py-1 rounded-full mb-2">
                    <i class="fas fa-user-tie text-blue-600 text-xs mr-1.5"></i>
                    <span class="text-blue-800 font-bold text-xs">UZMAN DANIŞMAN</span>
                    <div class="ml-1.5 w-1 h-1 bg-green-500 rounded-full animate-pulse"></div>
                </div>
                
                <h2 class="text-2xl md:text-3xl font-bold mb-3 text-blue-900">
                    HİZMET KATEGORİLERİ
                </h2>
                
                <!-- Kompakt Statistics -->
                <div class="flex justify-center items-center space-x-6 text-sm">
                    <div class="text-center">
                        <div class="text-lg font-bold text-blue-600">6</div>
                        <div class="text-blue-700 text-xs">Kategori</div>
                    </div>
                    <div class="text-center">
                        <div class="text-lg font-bold text-orange-600">50+</div>
                        <div class="text-orange-700 text-xs">Hizmet</div>
                    </div>
                    <div class="text-center">
                        <div class="text-lg font-bold text-green-600">%98.7</div>
                        <div class="text-green-700 text-xs">Başarı</div>
                    </div>
                </div>
            </div>
        </section>

        <!-- KOMPAKT AI CONSULTATION INTERFACE - Service Categories -->
        <section class="py-8 bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 text-white relative overflow-hidden">
            <!-- Background Effects -->
            <div class="absolute inset-0 backdrop-blur-sm"></div>
            
            <div class="max-w-7xl mx-auto px-4 relative z-10">

                <!-- Kompakt Service Categories Grid -->
                <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-3 mb-6">
                    <!-- TV Tamiri -->
                    <div class="group cursor-pointer">
                        <div class="bg-white/15 backdrop-blur-sm border border-white/30 rounded-xl p-3 hover:bg-white/20 hover:border-white/40 transition-all duration-300 hover:transform hover:scale-105">
                            <div class="text-center">
                                <div class="w-10 h-10 bg-gradient-to-r from-blue-500 to-blue-600 rounded-lg mx-auto mb-2 flex items-center justify-center">
                                    <i class="fas fa-tv text-white text-sm"></i>
                                </div>
                                <h3 class="text-sm font-bold text-white mb-1">TV Tamiri</h3>
                                <p class="text-blue-200 text-xs mb-1">LCD, LED, OLED</p>
                                <div class="text-xs font-bold text-green-300">₺300-2.5K</div>
                            </div>
                        </div>
                    </div>

                    <!-- PC Tamiri -->
                    <div class="group cursor-pointer">
                        <div class="bg-white/15 backdrop-blur-sm border border-white/30 rounded-xl p-3 hover:bg-white/20 hover:border-white/40 transition-all duration-300 hover:transform hover:scale-105">
                            <div class="text-center">
                                <div class="w-10 h-10 bg-gradient-to-r from-green-500 to-green-600 rounded-lg mx-auto mb-2 flex items-center justify-center">
                                    <i class="fas fa-laptop text-white text-sm"></i>
                                </div>
                                <h3 class="text-sm font-bold text-white mb-1">PC Tamiri</h3>
                                <p class="text-green-200 text-xs mb-1">Masaüstü & Laptop</p>
                                <div class="text-xs font-bold text-green-300">₺200-3K</div>
                            </div>
                        </div>
                    </div>

                    <!-- Beyaz Eşya -->
                    <div class="group cursor-pointer">
                        <div class="bg-white/15 backdrop-blur-sm border border-white/30 rounded-xl p-3 hover:bg-white/20 hover:border-white/40 transition-all duration-300 hover:transform hover:scale-105">
                            <div class="text-center">
                                <div class="w-10 h-10 bg-gradient-to-r from-purple-500 to-purple-600 rounded-lg mx-auto mb-2 flex items-center justify-center">
                                    <i class="fas fa-snowflake text-white text-sm"></i>
                                </div>
                                <h3 class="text-sm font-bold text-white mb-1">Beyaz Eşya</h3>
                                <p class="text-purple-200 text-xs mb-1">Buzdolabı, Çamaşır</p>
                                <div class="text-xs font-bold text-green-300">₺400-2.5K</div>
                            </div>
                        </div>
                    </div>

                    <!-- Klima Servisi -->
                    <div class="group cursor-pointer">
                        <div class="bg-white/15 backdrop-blur-sm border border-white/30 rounded-xl p-3 hover:bg-white/20 hover:border-white/40 transition-all duration-300 hover:transform hover:scale-105">
                            <div class="text-center">
                                <div class="w-10 h-10 bg-gradient-to-r from-indigo-500 to-indigo-600 rounded-lg mx-auto mb-2 flex items-center justify-center">
                                    <i class="fas fa-wind text-white text-sm"></i>
                                </div>
                                <h3 class="text-sm font-bold text-white mb-1">Klima Servisi</h3>
                                <p class="text-indigo-200 text-xs mb-1">Montaj & Bakım</p>
                                <div class="text-xs font-bold text-green-300">₺300-2K</div>
                            </div>
                        </div>
                    </div>

                    <!-- Küçük Ev Aletleri -->
                    <div class="group cursor-pointer">
                        <div class="bg-white/15 backdrop-blur-sm border border-white/30 rounded-xl p-3 hover:bg-white/20 hover:border-white/40 transition-all duration-300 hover:transform hover:scale-105">
                            <div class="text-center">
                                <div class="w-10 h-10 bg-gradient-to-r from-pink-500 to-pink-600 rounded-lg mx-auto mb-2 flex items-center justify-center">
                                    <i class="fas fa-blender text-white text-sm"></i>
                                </div>
                                <h3 class="text-sm font-bold text-white mb-1">Küçük Ev Aletleri</h3>
                                <p class="text-pink-200 text-xs mb-1">Elektrikli Aletler</p>
                                <div class="text-xs font-bold text-green-300">₺200-1K</div>
                            </div>
                        </div>
                    </div>

                    <!-- Elektronik Tamiri -->
                    <div class="group cursor-pointer">
                        <div class="bg-white/15 backdrop-blur-sm border border-white/30 rounded-xl p-3 hover:bg-white/20 hover:border-white/40 transition-all duration-300 hover:transform hover:scale-105">
                            <div class="text-center">
                                <div class="w-10 h-10 bg-gradient-to-r from-red-500 to-red-600 rounded-lg mx-auto mb-2 flex items-center justify-center">
                                    <i class="fas fa-mobile-alt text-white text-sm"></i>
                                </div>
                                <h3 class="text-sm font-bold text-white mb-1">Elektronik</h3>
                                <p class="text-red-200 text-xs mb-1">Telefon, Tablet</p>
                                <div class="text-xs font-bold text-green-300">₺200-1.5K</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Kompakt HEMEN SORU SOR CTA -->
                <div class="bg-white/15 backdrop-blur-sm border border-white/30 rounded-xl p-4 text-center">
                    <div class="mb-3">
                        <h3 class="text-lg font-bold text-white mb-1">HEMEN SORU SOR</h3>
                        <p class="text-purple-200 text-xs">Probleminizi analiz edip çözüm öneriyoruz</p>
                    </div>
                    
                    <button onclick="scrollToServices()" class="inline-flex items-center bg-blue-600 text-white py-2.5 px-6 rounded-lg text-sm font-bold hover:bg-blue-700 transition-all duration-300 shadow-lg">
                        <i class="fas fa-search mr-2"></i>
                        Hemen Analiz Et
                    </button>
                </div>
            </div>
        </section>

        <!-- Services & Locations Navigation Section -->
        <section id="services" class="py-8 bg-gradient-to-b from-slate-50 to-white">
            <div class="max-w-6xl mx-auto px-4">
                
                <!-- Section Header -->
                <div class="text-center mb-6">
                    <div class="inline-flex items-center bg-gradient-to-r from-blue-100 to-purple-100 border border-blue-200 px-3 py-1 rounded-full mb-3">
                        <i class="fas fa-map-marked-alt text-blue-600 text-xs mr-1"></i>
                        <span class="text-blue-900 font-semibold text-xs">HİZMETLER & BÖLGELER</span>
                    </div>
                    
                    <h2 class="text-xl md:text-2xl font-bold mb-2 bg-gradient-to-r from-blue-900 to-purple-900 bg-clip-text text-transparent">
                        Hizmet Kategorileri & Bölgelerimiz
                    </h2>
                    <p class="text-slate-600 text-sm font-medium mb-4 max-w-2xl mx-auto">
                        Profesyonel hizmetlerimizi keşfedin ve bölgenizde güvenli hizmet alın
                    </p>
                </div>

                <!-- Services Grid -->
                <div class="mb-8">
                    <h3 class="text-lg font-bold text-slate-800 mb-4 text-center">🔧 Hizmet Kategorilerimiz</h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                        
                        <!-- TV Tamiri Service Card -->
                        <div class="group bg-white rounded-lg shadow-md hover:shadow-lg transition-all duration-300 overflow-hidden border border-blue-100 hover:border-blue-300">
                            <div class="relative">
                                <!-- Service Header with Gradient -->
                                <div class="bg-gradient-to-r from-blue-500 to-blue-600 p-3 text-white">
                                    <div class="flex items-center space-x-2">
                                        <div class="w-8 h-8 bg-white/20 rounded-lg flex items-center justify-center">
                                            <i class="fas fa-tv text-white text-sm"></i>
                                        </div>
                                        <div>
                                            <h4 class="text-sm font-bold">TV Tamiri</h4>
                                            <p class="text-blue-100 text-xs">LCD, LED, OLED Tamiri</p>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Service Details -->
                                <div class="p-3">
                                    <ul class="text-xs text-slate-600 space-y-1 mb-3">
                                        <li class="flex items-center"><i class="fas fa-check text-green-500 mr-1 text-xs"></i>Panel değişimi</li>
                                        <li class="flex items-center"><i class="fas fa-check text-green-500 mr-1 text-xs"></i>Ekran onarımı</li>
                                        <li class="flex items-center"><i class="fas fa-check text-green-500 mr-1 text-xs"></i>Ses problemleri</li>
                                        <li class="flex items-center"><i class="fas fa-check text-green-500 mr-1 text-xs"></i>Yazılım güncellemeleri</li>
                                    </ul>
                                    
                                    <div class="flex items-center justify-between">
                                        <div class="text-sm font-bold text-blue-600">₺300-2.500</div>
                                        <a href="/hizmetler/tv-tamiri" class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1.5 rounded-md text-xs font-semibold transition-colors duration-200">
                                            Detaylar
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Beyaz Eşya Service Card -->
                        <div class="group bg-white rounded-lg shadow-md hover:shadow-lg transition-all duration-300 overflow-hidden border border-purple-100 hover:border-purple-300">
                            <div class="relative">
                                <!-- Service Header with Gradient -->
                                <div class="bg-gradient-to-r from-purple-500 to-purple-600 p-3 text-white">
                                    <div class="flex items-center space-x-2">
                                        <div class="w-8 h-8 bg-white/20 rounded-lg flex items-center justify-center">
                                            <i class="fas fa-snowflake text-white text-sm"></i>
                                        </div>
                                        <div>
                                            <h4 class="text-sm font-bold">Beyaz Eşya Tamiri</h4>
                                            <p class="text-purple-100 text-xs">Buzdolabı, Çamaşır Makinesi</p>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Service Details -->
                                <div class="p-3">
                                    <ul class="text-xs text-slate-600 space-y-1 mb-3">
                                        <li class="flex items-center"><i class="fas fa-check text-green-500 mr-1 text-xs"></i>Motor tamiri</li>
                                        <li class="flex items-center"><i class="fas fa-check text-green-500 mr-1 text-xs"></i>Kompresör değişimi</li>
                                        <li class="flex items-center"><i class="fas fa-check text-green-500 mr-1 text-xs"></i>Termostat onarımı</li>
                                        <li class="flex items-center"><i class="fas fa-check text-green-500 mr-1 text-xs"></i>Pompa değişimi</li>
                                    </ul>
                                    
                                    <div class="flex items-center justify-between">
                                        <div class="text-sm font-bold text-purple-600">₺400-2.500</div>
                                        <a href="/hizmetler/beyaz-esya" class="bg-purple-600 hover:bg-purple-700 text-white px-3 py-1.5 rounded-md text-xs font-semibold transition-colors duration-200">
                                            Detaylar
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Klima Tamiri Service Card -->
                        <div class="group bg-white rounded-lg shadow-md hover:shadow-lg transition-all duration-300 overflow-hidden border border-indigo-100 hover:border-indigo-300">
                            <div class="relative">
                                <!-- Service Header with Gradient -->
                                <div class="bg-gradient-to-r from-indigo-500 to-indigo-600 p-3 text-white">
                                    <div class="flex items-center space-x-2">
                                        <div class="w-8 h-8 bg-white/20 rounded-lg flex items-center justify-center">
                                            <i class="fas fa-wind text-white text-sm"></i>
                                        </div>
                                        <div>
                                            <h4 class="text-sm font-bold">Klima Tamiri</h4>
                                            <p class="text-indigo-100 text-xs">Montaj & Bakım Servisi</p>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Service Details -->
                                <div class="p-3">
                                    <ul class="text-xs text-slate-600 space-y-1 mb-3">
                                        <li class="flex items-center"><i class="fas fa-check text-green-500 mr-1 text-xs"></i>Klima montajı</li>
                                        <li class="flex items-center"><i class="fas fa-check text-green-500 mr-1 text-xs"></i>Gaz dolumu</li>
                                        <li class="flex items-center"><i class="fas fa-check text-green-500 mr-1 text-xs"></i>Filtre temizliği</li>
                                        <li class="flex items-center"><i class="fas fa-check text-green-500 mr-1 text-xs"></i>Bakım servisi</li>
                                    </ul>
                                    
                                    <div class="flex items-center justify-between">
                                        <div class="text-sm font-bold text-indigo-600">₺300-2.000</div>
                                        <a href="/hizmetler/klima-tamiri" class="bg-indigo-600 hover:bg-indigo-700 text-white px-3 py-1.5 rounded-md text-xs font-semibold transition-colors duration-200">
                                            Detaylar
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <!-- Locations Grid -->
                <div>
                    <h3 class="text-lg font-bold text-slate-800 mb-4 text-center">🌍 Hizmet Bölgelerimiz</h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                        
                        <!-- İstanbul Location Card -->
                        <div class="group bg-white rounded-lg shadow-md hover:shadow-lg transition-all duration-300 overflow-hidden border border-red-100 hover:border-red-300">
                            <div class="relative">
                                <!-- Location Header -->
                                <div class="bg-gradient-to-r from-red-500 to-red-600 p-3 text-white">
                                    <div class="flex items-center space-x-2">
                                        <div class="w-8 h-8 bg-white/20 rounded-lg flex items-center justify-center">
                                            <i class="fas fa-city text-white text-sm"></i>
                                        </div>
                                        <div>
                                            <h4 class="text-sm font-bold">İstanbul</h4>
                                            <p class="text-red-100 text-xs">Avrupa & Anadolu Yakası</p>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Location Stats -->
                                <div class="p-3">
                                    <div class="grid grid-cols-2 gap-2 mb-3">
                                        <div class="text-center">
                                            <div class="text-sm font-bold text-red-600">150+</div>
                                            <div class="text-xs text-slate-600">Teknisyen</div>
                                        </div>
                                        <div class="text-center">
                                            <div class="text-sm font-bold text-green-600">%99.2</div>
                                            <div class="text-xs text-slate-600">Başarı Oranı</div>
                                        </div>
                                    </div>
                                    
                                    <div class="text-xs text-slate-600 mb-3">
                                        <p class="font-medium mb-1">Kapsadığımız İlçeler:</p>
                                        <p>Kadıköy, Beşiktaş, Şişli, Bakırköy, Üsküdar ve 35+ ilçe</p>
                                    </div>
                                    
                                    <a href="/bölgeler/istanbul" class="block w-full bg-red-600 hover:bg-red-700 text-white px-3 py-1.5 rounded-md text-xs font-semibold text-center transition-colors duration-200">
                                        İstanbul Hizmetleri
                                    </a>
                                </div>
                            </div>
                        </div>

                        <!-- Ankara Location Card -->
                        <div class="group bg-white rounded-lg shadow-md hover:shadow-lg transition-all duration-300 overflow-hidden border border-orange-100 hover:border-orange-300">
                            <div class="relative">
                                <!-- Location Header -->
                                <div class="bg-gradient-to-r from-orange-500 to-orange-600 p-3 text-white">
                                    <div class="flex items-center space-x-2">
                                        <div class="w-8 h-8 bg-white/20 rounded-lg flex items-center justify-center">
                                            <i class="fas fa-building text-white text-sm"></i>
                                        </div>
                                        <div>
                                            <h4 class="text-sm font-bold">Ankara</h4>
                                            <p class="text-orange-100 text-xs">Merkez & Çevre İlçeler</p>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Location Stats -->
                                <div class="p-3">
                                    <div class="grid grid-cols-2 gap-2 mb-3">
                                        <div class="text-center">
                                            <div class="text-sm font-bold text-orange-600">85+</div>
                                            <div class="text-xs text-slate-600">Teknisyen</div>
                                        </div>
                                        <div class="text-center">
                                            <div class="text-sm font-bold text-green-600">%98.8</div>
                                            <div class="text-xs text-slate-600">Başarı Oranı</div>
                                        </div>
                                    </div>
                                    
                                    <div class="text-xs text-slate-600 mb-3">
                                        <p class="font-medium mb-1">Kapsadığımız İlçeler:</p>
                                        <p>Çankaya, Kızılay, Ulus, Keçiören, Mamak ve 20+ ilçe</p>
                                    </div>
                                    
                                    <a href="/bölgeler/ankara" class="block w-full bg-orange-600 hover:bg-orange-700 text-white px-3 py-1.5 rounded-md text-xs font-semibold text-center transition-colors duration-200">
                                        Ankara Hizmetleri
                                    </a>
                                </div>
                            </div>
                        </div>

                        <!-- İzmir Location Card -->
                        <div class="group bg-white rounded-lg shadow-md hover:shadow-lg transition-all duration-300 overflow-hidden border border-blue-100 hover:border-blue-300">
                            <div class="relative">
                                <!-- Location Header -->
                                <div class="bg-gradient-to-r from-blue-500 to-blue-600 p-3 text-white">
                                    <div class="flex items-center space-x-2">
                                        <div class="w-8 h-8 bg-white/20 rounded-lg flex items-center justify-center">
                                            <i class="fas fa-anchor text-white text-sm"></i>
                                        </div>
                                        <div>
                                            <h4 class="text-sm font-bold">İzmir</h4>
                                            <p class="text-blue-100 text-xs">Merkez & Çevre İlçeler</p>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Location Stats -->
                                <div class="p-3">
                                    <div class="grid grid-cols-2 gap-2 mb-3">
                                        <div class="text-center">
                                            <div class="text-sm font-bold text-blue-600">70+</div>
                                            <div class="text-xs text-slate-600">Teknisyen</div>
                                        </div>
                                        <div class="text-center">
                                            <div class="text-sm font-bold text-green-600">%98.5</div>
                                            <div class="text-xs text-slate-600">Başarı Oranı</div>
                                        </div>
                                    </div>
                                    
                                    <div class="text-xs text-slate-600 mb-3">
                                        <p class="font-medium mb-1">Kapsadığımız İlçeler:</p>
                                        <p>Konak, Karşıyaka, Bornova, Alsancak, Bayraklı ve 15+ ilçe</p>
                                    </div>
                                    
                                    <a href="/bölgeler/izmir" class="block w-full bg-blue-600 hover:bg-blue-700 text-white px-3 py-1.5 rounded-md text-xs font-semibold text-center transition-colors duration-200">
                                        İzmir Hizmetleri
                                    </a>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <!-- Call to Action -->
                <div class="text-center mt-8">
                    <div class="bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg p-4 text-white">
                        <h3 class="text-lg font-bold mb-2">Bölgeniz Listede Yok mu?</h3>
                        <p class="text-blue-100 mb-3 text-sm">Sürekli genişleyen hizmet ağımızla her geçen gün yeni bölgelere ulaşıyoruz</p>
                        <div class="flex flex-col sm:flex-row gap-2 justify-center">
                            <a href="#hizmet-al" class="bg-white/20 hover:bg-white/30 border border-white/30 text-white px-4 py-2 rounded-md font-semibold transition-all duration-200 text-sm">
                                <i class="fas fa-map-marker-alt mr-1"></i>
                                Bölgenizi Bildirin
                            </a>
                            <a href="tel:05001234567" class="bg-amber-500 hover:bg-amber-600 text-blue-900 px-4 py-2 rounded-md font-semibold transition-all duration-200 text-sm">
                                <i class="fas fa-phone mr-1"></i>
                                Hemen Arayın
                            </a>
                        </div>
                    </div>
                </div>

            </div>
        </section>

        <!-- Modern Process Section -->
        <section class="py-16 bg-gradient-to-b from-white via-purple-25 to-purple-50">
            <div class="max-w-7xl mx-auto px-6">
                <!-- Kompakt Section Header -->
                <div class="text-center mb-6">
                    <div class="inline-flex items-center bg-gradient-to-r from-blue-100 to-purple-100 border border-blue-200 px-3 py-1 rounded-full mb-3">
                        <i class="fas fa-route text-blue-600 text-xs mr-1"></i>
                        <span class="text-blue-900 font-semibold text-xs">KOLAY SÜREÇ</span>
                    </div>
                    
                    <h2 class="text-xl md:text-2xl font-bold mb-2 bg-gradient-to-r from-blue-900 to-purple-900 bg-clip-text text-transparent">
                        HİZMET ALMA SÜRECİMİZ
                    </h2>
                    <p class="text-slate-600 text-sm font-medium mb-4 max-w-2xl mx-auto">
                        4 basit adımda profesyonel hizmet alın
                    </p>
                    
                    <!-- Kompakt Stats Cards -->
                    <div class="grid grid-cols-3 gap-2 max-w-lg mx-auto">
                        <div class="bg-white/70 backdrop-blur-sm border border-white/50 rounded-lg p-2 shadow-md hover:shadow-lg transition-all duration-300">
                            <div class="text-lg font-bold bg-gradient-to-r from-blue-600 to-blue-700 bg-clip-text text-transparent">5dk</div>
                            <div class="text-slate-600 text-xs font-medium">Ortalama Süre</div>
                        </div>
                        <div class="bg-white/70 backdrop-blur-sm border border-white/50 rounded-lg p-2 shadow-md hover:shadow-lg transition-all duration-300">
                            <div class="text-lg font-bold bg-gradient-to-r from-orange-500 to-orange-600 bg-clip-text text-transparent">7/24</div>
                            <div class="text-slate-600 text-xs font-medium">Canlı Destek</div>
                        </div>
                        <div class="bg-white/70 backdrop-blur-sm border border-white/50 rounded-lg p-2 shadow-md hover:shadow-lg transition-all duration-300">
                            <div class="text-lg font-bold bg-gradient-to-r from-green-500 to-green-600 bg-clip-text text-transparent">%100</div>
                            <div class="text-slate-600 text-xs font-medium">Güvenli</div>
                        </div>
                    </div>
                </div>

                <!-- Tam Kompakt Process Cards Container -->
                <div class="bg-white/70 backdrop-blur-lg rounded-lg p-3 border border-white/20 shadow-lg relative overflow-hidden">
                    
                    <!-- Modern Gradient Background -->
                    <div class="absolute inset-0 bg-gradient-to-br from-blue-50/50 via-purple-50/30 to-pink-50/20 rounded-lg"></div>
                    
                    <!-- Mini Section Header -->
                    <div class="text-center mb-3 relative z-10">
                        <div class="inline-flex items-center bg-gradient-to-r from-blue-50 to-purple-50 backdrop-blur-sm border border-blue-100/50 px-2 py-1 rounded-full mb-2 shadow-md">
                            <div class="w-4 h-4 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center mr-1 shadow-sm">
                                <i class="fas fa-shield-check text-white text-xs"></i>
                            </div>
                            <span class="font-bold text-sm">
                                <span class="text-slate-800">Garantor</span><span class="text-amber-500">360°</span>
                            </span>
                            <div class="w-1.5 h-1.5 bg-gradient-to-r from-green-400 to-emerald-500 rounded-full animate-pulse ml-1"></div>
                        </div>
                        <h2 class="text-xl font-bold text-slate-800 mb-1">4 Basit Adımda Güvenli Hizmet</h2>
                        <p class="text-slate-600 text-sm max-w-xl mx-auto">Modern teknoloji ile hızlı hizmet alma süreci</p>
                    </div>

                    <!-- Tam Kompakt 4-Step Process Cards -->
                    <div class="grid grid-cols-2 lg:grid-cols-4 gap-2 relative z-10">
                        
                        <!-- Step 1: Mini Card -->
                        <div class="group bg-white/80 backdrop-blur-md rounded-lg p-2 border border-white/30 hover:border-blue-200/50 hover:shadow-lg transition-all duration-300 relative overflow-hidden">
                            <!-- Gradient Background -->
                            <div class="absolute inset-0 bg-gradient-to-br from-blue-50/30 to-transparent rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                            
                            <!-- Step Number -->
                            <div class="absolute top-1 right-1 w-6 h-6 md:w-8 md:h-8 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center text-white font-bold text-xs md:text-sm shadow-lg">
                                1
                            </div>
                            
                            <!-- Mini Icon -->
                            <div class="flex justify-center mb-2 relative z-10">
                                <div class="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-br from-blue-500 via-blue-600 to-purple-600 rounded-lg flex items-center justify-center shadow-md group-hover:scale-105 transition-transform duration-300 relative">
                                    <i class="fas fa-edit text-white text-sm lg:text-lg"></i>
                                    <div class="absolute -top-0.5 -right-0.5 w-3 h-3 bg-gradient-to-r from-green-400 to-emerald-500 rounded-full border border-white shadow-sm">
                                        <i class="fas fa-shield-check text-white text-xs flex items-center justify-center h-full"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Mini Content -->
                            <div class="text-center relative z-10">
                                <h3 class="text-base font-bold text-slate-800 mb-1 group-hover:text-blue-600 transition-colors duration-300">Talep Oluştur</h3>
                                <p class="text-slate-600 text-sm leading-tight mb-2">Problem tanımlayın</p>
                                
                                <!-- Mini Time Badge -->
                                <div class="inline-flex items-center bg-gradient-to-r from-blue-50 to-blue-100 px-1.5 py-0.5 rounded-full mb-1">
                                    <i class="fas fa-clock text-blue-600 text-xs mr-0.5"></i>
                                    <span class="text-blue-700 font-semibold text-xs">2dk</span>
                                </div>
                                
                                <!-- Mini Security Badge -->
                                <div class="bg-gradient-to-r from-green-50 to-emerald-50 backdrop-blur-sm rounded-md p-1 border border-green-100/50">
                                    <div class="flex items-center justify-center space-x-0.5">
                                        <div class="w-2 h-2 bg-gradient-to-r from-green-500 to-emerald-500 rounded-full flex items-center justify-center">
                                            <i class="fas fa-lock text-white text-xs"></i>
                                        </div>
                                        <div class="text-center">
                                            <div class="text-xs font-bold text-slate-800">SSL</div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Mini Arrow (Desktop) -->
                            <div class="hidden lg:block absolute top-1/2 -right-2 transform -translate-y-1/2 z-20">
                                <div class="w-4 h-4 bg-white/90 backdrop-blur-sm rounded-full flex items-center justify-center border border-blue-200/50 shadow-md group-hover:scale-105 transition-all duration-300">
                                    <i class="fas fa-arrow-right text-blue-600 text-xs"></i>
                                </div>
                            </div>
                        </div>

                        <!-- Step 2: Mini Card -->
                        <div class="group bg-white/80 backdrop-blur-md rounded-lg p-2 border border-white/30 hover:border-green-200/50 hover:shadow-lg transition-all duration-300 relative overflow-hidden">
                            <!-- Gradient Background -->
                            <div class="absolute inset-0 bg-gradient-to-br from-green-50/30 to-transparent rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                            
                            <!-- Step Number -->
                            <div class="absolute top-1 right-1 w-6 h-6 md:w-8 md:h-8 bg-gradient-to-r from-green-500 to-green-600 rounded-full flex items-center justify-center text-white font-bold text-xs md:text-sm shadow-lg">
                                2
                            </div>
                            
                            <!-- Mini Icon -->
                            <div class="flex justify-center mb-2 relative z-10">
                                <div class="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-br from-green-500 via-green-600 to-emerald-600 rounded-lg flex items-center justify-center shadow-md group-hover:scale-105 transition-transform duration-300 relative">
                                    <i class="fas fa-users text-white text-sm lg:text-lg"></i>
                                    <div class="absolute -top-0.5 -right-0.5 w-3 h-3 bg-gradient-to-r from-blue-400 to-blue-500 rounded-full border border-white shadow-sm">
                                        <i class="fas fa-user-check text-white text-xs flex items-center justify-center h-full"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Mini Content -->
                            <div class="text-center relative z-10">
                                <h3 class="text-base font-bold text-slate-800 mb-1 group-hover:text-green-600 transition-colors duration-300">Uzman Eşleştirme</h3>
                                <p class="text-slate-600 text-sm leading-tight mb-2">En uygun uzmanları buluyoruz</p>
                                
                                <!-- Mini Time Badge -->
                                <div class="inline-flex items-center bg-gradient-to-r from-green-50 to-emerald-50 px-1.5 py-0.5 rounded-full mb-1">
                                    <i class="fas fa-bolt text-green-600 text-xs mr-0.5"></i>
                                    <span class="text-green-700 font-semibold text-xs">15sn</span>
                                </div>
                                
                                <!-- Mini Security Badge -->
                                <div class="bg-gradient-to-r from-blue-50 to-indigo-50 backdrop-blur-sm rounded-md p-1 border border-blue-100/50">
                                    <div class="flex items-center justify-center space-x-0.5">
                                        <div class="w-2 h-2 bg-gradient-to-r from-blue-500 to-indigo-500 rounded-full flex items-center justify-center">
                                            <i class="fas fa-id-card text-white text-xs"></i>
                                        </div>
                                        <div class="text-center">
                                            <div class="text-xs font-bold text-slate-800">Kimlik</div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Mini Arrow (Desktop) -->
                            <div class="hidden lg:block absolute top-1/2 -right-2 transform -translate-y-1/2 z-20">
                                <div class="w-4 h-4 bg-white/90 backdrop-blur-sm rounded-full flex items-center justify-center border border-green-200/50 shadow-md group-hover:scale-105 transition-all duration-300">
                                    <i class="fas fa-arrow-right text-green-600 text-xs"></i>
                                </div>
                            </div>
                        </div>

                        <!-- Step 3: Mini Card -->
                        <div class="group bg-white/80 backdrop-blur-md rounded-lg p-2 border border-white/30 hover:border-purple-200/50 hover:shadow-lg transition-all duration-300 relative overflow-hidden">
                            <!-- Gradient Background -->
                            <div class="absolute inset-0 bg-gradient-to-br from-purple-50/30 to-transparent rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                            
                            <!-- Step Number -->
                            <div class="absolute top-1 right-1 w-6 h-6 md:w-8 md:h-8 bg-gradient-to-r from-purple-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold text-xs md:text-sm shadow-lg">
                                3
                            </div>
                            
                            <!-- Mini Icon -->
                            <div class="flex justify-center mb-2 relative z-10">
                                <div class="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-br from-purple-500 via-purple-600 to-pink-600 rounded-lg flex items-center justify-center shadow-md group-hover:scale-105 transition-transform duration-300 relative">
                                    <i class="fas fa-handshake text-white text-sm lg:text-lg"></i>
                                    <div class="absolute -top-0.5 -right-0.5 w-3 h-3 bg-gradient-to-r from-amber-400 to-orange-500 rounded-full border border-white shadow-sm">
                                        <i class="fas fa-dollar-sign text-white text-xs flex items-center justify-center h-full"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Mini Content -->
                            <div class="text-center relative z-10">
                                <h3 class="text-base font-bold text-slate-800 mb-1 group-hover:text-purple-600 transition-colors duration-300">Fiyat & Randevu</h3>
                                <p class="text-slate-600 text-sm leading-tight mb-2">Şeffaf fiyat alın</p>
                                
                                <!-- Mini Price Badge -->
                                <div class="inline-flex items-center bg-gradient-to-r from-purple-50 to-pink-50 px-1.5 py-0.5 rounded-full mb-1">
                                    <i class="fas fa-coins text-purple-600 text-xs mr-0.5"></i>
                                    <span class="text-purple-700 font-semibold text-xs">Net</span>
                                </div>
                                
                                <!-- Mini Security Badge -->
                                <div class="bg-gradient-to-r from-amber-50 to-orange-50 backdrop-blur-sm rounded-md p-1 border border-amber-100/50">
                                    <div class="flex items-center justify-center space-x-0.5">
                                        <div class="w-2 h-2 bg-gradient-to-r from-amber-500 to-orange-500 rounded-full flex items-center justify-center">
                                            <i class="fas fa-shield-alt text-white text-xs"></i>
                                        </div>
                                        <div class="text-center">
                                            <div class="text-xs font-bold text-slate-800">Escrow</div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Mini Arrow (Desktop) -->
                            <div class="hidden lg:block absolute top-1/2 -right-2 transform -translate-y-1/2 z-20">
                                <div class="w-4 h-4 bg-white/90 backdrop-blur-sm rounded-full flex items-center justify-center border border-purple-200/50 shadow-md group-hover:scale-105 transition-all duration-300">
                                    <i class="fas fa-arrow-right text-purple-600 text-xs"></i>
                                </div>
                            </div>
                        </div>

                        <!-- Step 4: Mini Card -->
                        <div class="group bg-white/80 backdrop-blur-md rounded-lg p-2 border border-white/30 hover:border-orange-200/50 hover:shadow-lg transition-all duration-300 relative overflow-hidden">
                            <!-- Gradient Background -->
                            <div class="absolute inset-0 bg-gradient-to-br from-orange-50/30 to-transparent rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                            
                            <!-- Step Number -->
                            <div class="absolute top-1 right-1 w-6 h-6 md:w-8 md:h-8 bg-gradient-to-r from-orange-500 to-red-500 rounded-full flex items-center justify-center text-white font-bold text-xs md:text-sm shadow-lg">
                                4
                            </div>
                            
                            <!-- Mini Icon -->
                            <div class="flex justify-center mb-2 relative z-10">
                                <div class="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-br from-orange-500 via-red-500 to-pink-600 rounded-lg flex items-center justify-center shadow-md group-hover:scale-105 transition-transform duration-300 relative">
                                    <i class="fas fa-check-circle text-white text-sm lg:text-lg"></i>
                                    <div class="absolute -top-0.5 -right-0.5 w-3 h-3 bg-gradient-to-r from-yellow-400 to-amber-500 rounded-full border border-white shadow-sm">
                                        <i class="fas fa-star text-white text-xs flex items-center justify-center h-full"></i>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Mini Content -->
                            <div class="text-center relative z-10">
                                <h3 class="text-base font-bold text-slate-800 mb-1 group-hover:text-orange-600 transition-colors duration-300">Hizmet Tamamla</h3>
                                <p class="text-slate-600 text-sm leading-tight mb-2">Güvenle ödeme yapın</p>
                                
                                <!-- Mini Guarantee Badge -->
                                <div class="inline-flex items-center bg-gradient-to-r from-orange-50 to-red-50 px-1.5 py-0.5 rounded-full mb-1">
                                    <i class="fas fa-shield-check text-orange-600 text-xs mr-0.5"></i>
                                    <span class="text-orange-700 font-semibold text-xs">%100</span>
                                </div>
                                
                                <!-- Mini Security Badge -->
                                <div class="bg-gradient-to-r from-yellow-50 to-amber-50 backdrop-blur-sm rounded-md p-1 border border-yellow-100/50">
                                    <div class="flex items-center justify-center space-x-0.5">
                                        <div class="w-2 h-2 bg-gradient-to-r from-yellow-500 to-amber-500 rounded-full flex items-center justify-center">
                                            <i class="fas fa-award text-white text-xs"></i>
                                        </div>
                                        <div class="text-center">
                                            <div class="text-xs font-bold text-slate-800">6Ay</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Mini Mobile Progress Flow -->
                    <div class="lg:hidden mt-2 flex justify-center items-center space-x-1">
                        <div class="w-4 h-4 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center animate-bounce shadow-sm">
                            <i class="fas fa-arrow-down text-white text-xs"></i>
                        </div>
                        <div class="w-4 h-4 bg-gradient-to-r from-green-500 to-green-600 rounded-full flex items-center justify-center animate-bounce shadow-sm" style="animation-delay: 0.2s">
                            <i class="fas fa-arrow-down text-white text-xs"></i>
                        </div>
                        <div class="w-4 h-4 bg-gradient-to-r from-purple-500 to-purple-600 rounded-full flex items-center justify-center animate-bounce shadow-sm" style="animation-delay: 0.4s">
                            <i class="fas fa-arrow-down text-white text-xs"></i>
                        </div>
                        <div class="w-4 h-4 bg-gradient-to-r from-orange-500 to-red-500 rounded-full flex items-center justify-center animate-bounce shadow-sm" style="animation-delay: 0.6s">
                            <i class="fas fa-check text-white text-xs"></i>
                        </div>
                    </div>

                    <!-- Talep Gönder Butonu -->
                    <div class="mt-8 text-center relative z-10">
                        <button 
                            onclick="document.getElementById('customer-request-form').scrollIntoView({ behavior: 'smooth' })"
                            class="group inline-flex items-center bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 text-white font-bold py-3 px-6 rounded-xl shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 relative overflow-hidden">
                            
                            <!-- Gradient Background Animation -->
                            <div class="absolute inset-0 bg-gradient-to-r from-pink-600 via-purple-600 to-blue-600 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-xl"></div>
                            
                            <!-- Button Content -->
                            <div class="relative z-10 flex items-center">
                                <i class="fas fa-paper-plane text-base mr-2 group-hover:rotate-12 transition-transform duration-300"></i>
                                <span class="text-base tracking-wide">TALEP GÖNDER</span>
                                <i class="fas fa-arrow-right text-base ml-2 group-hover:translate-x-1 transition-transform duration-300"></i>
                            </div>
                            
                            <!-- Sparkle Animation -->
                            <div class="absolute top-1 right-1 w-1.5 h-1.5 bg-white rounded-full animate-ping"></div>
                            <div class="absolute bottom-1 left-1 w-1 h-1 bg-yellow-300 rounded-full animate-pulse"></div>
                        </button>
                        
                        <!-- Alt Açıklama -->
                        <p class="text-slate-600 text-sm mt-3 font-medium">
                            <i class="fas fa-clock text-blue-600 mr-1"></i>
                            2 dakikada talep oluşturun, hemen yanıt alın
                        </p>
                    </div>

                </div>


            </div>
        </section>

        <!-- AI-POWERED SMART RECOMMENDATION ENGINE -->
        <section id="ai-recommendation" class="py-16 bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 text-white">
            <div class="max-w-6xl mx-auto px-6">
                <div class="text-center mb-4">
                    <div class="inline-flex items-center bg-white/10 backdrop-blur-sm border border-white/20 px-4 py-1 rounded-full mb-2">
                        <i class="fas fa-user-tie text-purple-300 text-sm mr-2"></i>
                        <span class="text-white font-semibold text-sm">UZMAN DANIŞMAN</span>
                    </div>
                    <h2 class="text-2xl lg:text-3xl font-bold mb-2 bg-gradient-to-r from-purple-300 to-blue-300 bg-clip-text text-transparent">
                        Size Özel Çözüm Önerisi
                    </h2>
                    <p class="text-sm text-purple-100 max-w-3xl mx-auto leading-tight">
                        Probleminizi anlatın, deneyimli uzmanlarımız size en uygun çözümü hemen önersin!
                        7/24 canlı destek ile anında yardım.
                    </p>
                </div>

                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 items-stretch">
                    <!-- AI Problem Analysis Form -->
                    <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4">
                        <h3 class="text-lg font-bold text-white mb-3 flex items-center">
                            <i class="fas fa-headset text-purple-300 mr-2"></i>
                            Uzman Danışman Merkezi
                            <span class="ml-2 bg-green-500 text-white text-xs px-2 py-1 rounded-full animate-pulse">
                                7/24 CANLI
                            </span>
                        </h3>
                        
                        <div class="space-y-3">
                            <div>
                                <label class="block text-purple-200 text-xs font-semibold mb-2">
                                    Probleminizi Detaylı Anlatın
                                </label>
                                <textarea 
                                    id="problemDescription" 
                                    rows="3" 
                                    class="w-full p-3 bg-white/20 border border-white/30 rounded-lg text-white placeholder-purple-200 focus:outline-none focus:border-purple-300 focus:bg-white/25 transition-all text-sm"
                                    placeholder="Örn: Çamaşır makinesi su almıyor ve garip sesler çıkarıyor..."
                                ></textarea>
                                <div class="text-xs text-purple-200 mt-1">
                                    <span id="charCount">0</span>/500 karakter
                                </div>
                            </div>

                            <div class="grid grid-cols-2 gap-3">
                                <div>
                                    <label class="block text-purple-200 text-xs font-semibold mb-1">Aciliyet Durumu</label>
                                    <select id="urgencyLevel" class="w-full p-2 bg-white/20 border border-white/30 rounded-lg text-white focus:outline-none focus:border-purple-300 text-sm">
                                        <option value="normal">Normal (1-2 gün)</option>
                                        <option value="urgent">Acil (Aynı gün)</option>
                                        <option value="emergency">Çok Acil (1-2 saat)</option>
                                    </select>
                                </div>
                                <div>
                                    <label class="block text-purple-200 text-xs font-semibold mb-1">Şehir</label>
                                    <select id="serviceLocation" class="w-full p-2 bg-white/20 border border-white/30 rounded-lg text-white focus:outline-none focus:border-purple-300 text-sm">
                                        <option value="istanbul">İstanbul</option>
                                        <option value="ankara">Ankara</option>
                                        <option value="izmir">İzmir</option>
                                        <option value="bursa">Bursa</option>
                                        <option value="antalya">Antalya</option>
                                        <option value="adana">Adana</option>
                                        <option value="konya">Konya</option>
                                        <option value="gaziantep">Gaziantep</option>
                                    </select>
                                </div>
                            </div>

                            <button onclick="analyzeWithAI()" class="w-full bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white font-bold py-2 px-4 rounded-lg transition-all duration-300 shadow-lg text-sm">
                                <i class="fas fa-search mr-2"></i>
                                Hemen Analiz Et
                            </button>
                        </div>

                        <!-- AI Analysis States -->
                        <div id="aiAnalysisState" class="mt-4">
                            <!-- Default State (shown initially) -->
                            <div id="aiStateDefault" class="text-center py-4">
                                <div class="w-12 h-12 bg-purple-500/30 rounded-full flex items-center justify-center mx-auto mb-2">
                                    <i class="fas fa-lightbulb text-yellow-400 text-lg" style="
                                        animation: electricPowerOn 3s ease-in-out infinite;
                                        filter: drop-shadow(0 0 8px rgba(255, 255, 0, 0.6));
                                    "></i>
                                </div>
                                <p class="text-purple-200 text-sm">
                                    Probleminizi yazın ve hemen analiz başlayalım!
                                </p>
                            </div>

                            <!-- Loading State -->
                            <div id="aiStateLoading" class="hidden text-center py-4">
                                <div class="w-12 h-12 bg-blue-500/30 rounded-full flex items-center justify-center mx-auto mb-2 animate-spin">
                                    <i class="fas fa-cog text-blue-300 text-lg"></i>
                                </div>
                                <p class="text-blue-200 font-semibold text-sm">
                                    AI analiz ediyor...
                                </p>
                                <div class="w-full bg-white/20 rounded-full h-1 mt-2">
                                    <div class="bg-gradient-to-r from-purple-400 to-blue-400 h-1 rounded-full animate-pulse" style="width: 75%"></div>
                                </div>
                            </div>

                            <!-- Results State -->
                            <div id="aiStateResults" class="hidden">
                                <div class="bg-white/20 rounded-lg p-4">
                                    <h4 class="text-sm font-bold text-white mb-2">
                                        <i class="fas fa-check-circle text-green-400 mr-1"></i>
                                        AI Analiz Sonucu
                                    </h4>
                                    <div id="recommendedCategory" class="mb-2">
                                        <!-- AI recommendation will be populated here -->
                                    </div>
                                    <div id="alternativeOptions" class="space-y-1">
                                        <!-- Alternative options will be populated here -->
                                    </div>
                                    
                                    <div class="flex gap-2 mt-3">
                                        <button onclick="proceedWithRecommendation()" class="flex-1 bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded text-xs transition-colors">
                                            <i class="fas fa-arrow-right mr-1"></i>
                                            Bu Öneriyle Devam Et
                                        </button>
                                        <button onclick="tryDifferentAnalysis()" class="bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded text-xs transition-colors">
                                            <i class="fas fa-redo mr-1"></i>
                                            Tekrar Dene
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- AI Features Showcase -->
                    <div class="space-y-4 flex flex-col h-full">
                        <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4">
                            <h4 class="text-lg font-bold text-white mb-2">
                                Hizmet Özellikleri
                            </h4>
                            <div class="space-y-2">
                                <div class="flex items-start">
                                    <div class="w-6 h-6 bg-green-500/30 rounded-full flex items-center justify-center flex-shrink-0 mr-2">
                                        <i class="fas fa-percentage text-green-300 text-xs"></i>
                                    </div>
                                    <div>
                                        <div class="font-semibold text-white text-sm">%95 Doğruluk Oranı</div>
                                        <div class="text-purple-200 text-xs">8 ana kategoride yüksek eşleştirme başarısı</div>
                                    </div>
                                </div>
                                <div class="flex items-start">
                                    <div class="w-6 h-6 bg-blue-500/30 rounded-full flex items-center justify-center flex-shrink-0 mr-2">
                                        <i class="fas fa-clock text-blue-300 text-xs"></i>
                                    </div>
                                    <div>
                                        <div class="font-semibold text-white text-sm">Hızlı Analiz</div>
                                        <div class="text-purple-200 text-xs">Anında kategori önerisi ve fiyat tahmini</div>
                                    </div>
                                </div>
                                <div class="flex items-start">
                                    <div class="w-6 h-6 bg-purple-500/30 rounded-full flex items-center justify-center flex-shrink-0 mr-2">
                                        <i class="fas fa-brain text-purple-300 text-xs"></i>
                                    </div>
                                    <div>
                                        <div class="font-semibold text-white text-sm">Çoklu Öneriler</div>
                                        <div class="text-purple-200 text-xs">Ana öneri + 2 alternatif kategori</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Supported Categories -->
                        <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4 flex-1">
                            <h4 class="text-lg font-bold text-white mb-3 flex items-center">
                                <i class="fas fa-lightbulb text-yellow-400 mr-2" style="
                                    animation: electricPowerOn 3s ease-in-out infinite;
                                    filter: drop-shadow(0 0 8px rgba(255, 255, 0, 0.6));
                                "></i>
                                Desteklenen Kategoriler
                            </h4>
                            <div class="grid grid-cols-2 gap-2">
                                <div class="flex items-center p-1 hover:bg-white/10 rounded transition-all">
                                    <i class="fas fa-bolt text-yellow-300 mr-2 text-sm"></i>
                                    <span class="text-purple-200 text-xs">Ev Elektriği</span>
                                </div>
                                <div class="flex items-center p-1 hover:bg-white/10 rounded transition-all">
                                    <i class="fas fa-tools text-blue-300 mr-2 text-sm"></i>
                                    <span class="text-purple-200 text-xs">Beyaz Eşya</span>
                                </div>
                                <div class="flex items-center p-1 hover:bg-white/10 rounded transition-all">
                                    <i class="fas fa-tint text-cyan-300 mr-2 text-sm"></i>
                                    <span class="text-purple-200 text-xs">Su Tesisatı</span>
                                </div>
                                <div class="flex items-center p-1 hover:bg-white/10 rounded transition-all">
                                    <i class="fas fa-fire text-red-300 mr-2 text-sm"></i>
                                    <span class="text-purple-200 text-xs">Kombi & Kalorifer</span>
                                </div>
                                <div class="flex items-center p-1 hover:bg-white/10 rounded transition-all">
                                    <i class="fas fa-tv text-indigo-300 mr-2 text-sm"></i>
                                    <span class="text-purple-200 text-xs">Elektronik</span>
                                </div>
                                <div class="flex items-center p-1 hover:bg-white/10 rounded transition-all">
                                    <i class="fas fa-broom text-green-300 mr-2 text-sm"></i>
                                    <span class="text-purple-200 text-xs">Temizlik</span>
                                </div>
                                <div class="flex items-center p-1 hover:bg-white/10 rounded transition-all">
                                    <i class="fas fa-paint-roller text-pink-300 mr-2 text-sm"></i>
                                    <span class="text-purple-200 text-xs">Boyama</span>
                                </div>
                                <div class="flex items-center p-1 hover:bg-white/10 rounded transition-all">
                                    <i class="fas fa-door-open text-amber-300 mr-2 text-sm"></i>
                                    <span class="text-purple-200 text-xs">Kapı & Pencere</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Service Options Modal (for AI recommendations) -->
        <div id="serviceOptionsModal" class="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 hidden p-4">
            <div class="bg-white max-w-2xl w-full rounded-2xl shadow-2xl">
                <div class="bg-gradient-to-r from-purple-600 to-blue-600 text-white p-6 rounded-t-2xl">
                    <div class="flex items-center justify-between">
                        <h3 class="text-xl font-bold">Hizmet Seçenekleriniz</h3>
                        <button onclick="closeServiceOptionsModal()" class="text-white hover:text-gray-200">
                            <i class="fas fa-times text-xl"></i>
                        </button>
                    </div>
                </div>
                
                <div class="p-8">
                    <div class="text-center mb-8">
                        <div class="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                            <i class="fas fa-check-circle text-green-600 text-2xl"></i>
                        </div>
                        <h4 class="text-2xl font-bold text-gray-800 mb-2">Mükemmel! Kategori Belirlendi</h4>
                        <p class="text-gray-600">Şimdi nasıl devam etmek istersiniz?</p>
                    </div>

                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- WhatsApp Quick Option -->
                        <div class="border-2 border-green-200 rounded-xl p-6 hover:border-green-400 transition-all cursor-pointer" onclick="proceedWithWhatsApp('AI öneri sonrası hızlı teklif', document.getElementById('problemDescription').value)">
                            <div class="text-center">
                                <div class="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                    <i class="fab fa-whatsapp text-green-600 text-xl"></i>
                                </div>
                                <h5 class="font-bold text-gray-800 mb-2">Hızlı WhatsApp Teklifi</h5>
                                <p class="text-sm text-gray-600 mb-4">5 dakika içinde teklif alın</p>
                                <ul class="text-xs text-gray-500 text-left space-y-1">
                                    <li>✓ Anında iletişim</li>
                                    <li>✓ Hızlı fiyat bilgisi</li>
                                    <li>✓ Direkt uzman bağlantısı</li>
                                </ul>
                            </div>
                        </div>

                        <!-- Detailed Form Option -->
                        <div class="border-2 border-blue-200 rounded-xl p-6 hover:border-blue-400 transition-all cursor-pointer" onclick="proceedWithDetailedForm()">
                            <div class="text-center">
                                <div class="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                    <i class="fas fa-file-alt text-blue-600 text-xl"></i>
                                </div>
                                <h5 class="font-bold text-gray-800 mb-2">Detaylı Form Doldur</h5>
                                <p class="text-sm text-gray-600 mb-4">Kapsamlı teklif sürecinden geçin</p>
                                <ul class="text-xs text-gray-500 text-left space-y-1">
                                    <li>✓ Detaylı ihtiyaç analizi</li>
                                    <li>✓ Çoklu uzman teklifleri</li>
                                    <li>✓ Karşılaştırmalı fiyatlar</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Compact Customer Success Section -->
        <div class="max-w-6xl mx-auto px-6 mb-8">
            <div class="text-center mb-4">
                <h2 class="text-xl font-bold text-blue-900 mb-2">MUTLU MÜŞTERİLERİMİZ</h2>
                <p class="text-sm text-gray-600">TV-PC-Beyaz Eşya tamirinde başarılı hizmetler</p>
            </div>
            
            <!-- Compact Success Stories -->
            <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-3">
                <div class="grid grid-cols-2 md:grid-cols-4 gap-2">
                    <!-- Story 1 - TV Tamiri -->
                    <div class="bg-white rounded-lg shadow-sm p-2 text-center">
                        <img src="https://page.gensparksite.com/v1/base64_upload/613058d080d280f60ea12d55ae936a1d" 
                             alt="TV Tamiri" 
                             class="w-full h-25 object-cover rounded mb-2">
                        <h4 class="font-bold text-xs text-gray-800">TV Tamiri</h4>
                        <p class="text-xs text-gray-600">Fulya H. ⭐⭐⭐⭐⭐</p>
                    </div>
                    
                    <!-- Story 2 - Klima -->
                    <div class="bg-white rounded-lg shadow-sm p-2 text-center">
                        <img src="https://page.gensparksite.com/v1/base64_upload/a3350dc40a3a83a08928c6c46be858ad" 
                             alt="Klima Tamiri" 
                             class="w-full h-25 object-cover rounded mb-2">
                        <h4 class="font-bold text-xs text-gray-800">Klima Servisi</h4>
                        <p class="text-xs text-gray-600">Selim B. ⭐⭐⭐⭐⭐</p>
                    </div>

                    
                    <!-- Story 4 - Beyaz Eşya -->
                    <div class="bg-white rounded-lg shadow-sm p-2 text-center">
                        <img src="https://page.gensparksite.com/v1/base64_upload/bc6f58fb2e5abee6389e4a9c8ecdeeff" 
                             alt="Beyaz Eşya Tamiri" 
                             class="w-full h-25 object-cover rounded mb-2">
                        <h4 class="font-bold text-xs text-gray-800">Beyaz Eşya</h4>
                        <p class="text-xs text-gray-600">Nermin H. ⭐⭐⭐⭐⭐</p>
                    </div>
                    
                    <!-- Story 5 - TV Tamiri -->
                    <div class="bg-white rounded-lg shadow-sm p-2 text-center">
                        <img src="https://page.gensparksite.com/v1/base64_upload/ee6d91c41c837953855b76e06ba10fbc" 
                             alt="TV Tamiri" 
                             class="w-full h-25 object-cover rounded mb-2">
                        <h4 class="font-bold text-xs text-gray-800">TV Tamiri</h4>
                        <p class="text-xs text-gray-600">Fulya H. ⭐⭐⭐⭐⭐</p>
                    </div>
                </div>
                
                <!-- Compact Stats -->
                <div class="flex justify-center items-center mt-3 space-x-4 text-xs text-blue-700">
                    <div class="flex items-center">
                        <i class="fas fa-users mr-1"></i>
                        <span>47.500+ Memnun</span>
                    </div>
                    <div class="flex items-center">
                        <i class="fas fa-star mr-1"></i>
                        <span>4.8/5 Puan</span>
                    </div>
                    <div class="flex items-center">
                        <i class="fas fa-shield-check mr-1"></i>
                        <span>%98 Başarı</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Live Statistics -->
        <section id="stats" class="py-12 bg-slate-50">
            <div class="max-w-7xl mx-auto px-6">
                <!-- Customer Stats Header - Kompakt -->
                <div class="text-center mb-6">
                    <h2 class="text-2xl font-bold text-blue-900 mb-2 tracking-tight">
                        PLATFORM İSTATİSTİKLERİ
                    </h2>
                    <p class="text-blue-600 text-sm font-medium">Güvenilir hizmet verileri ve başarı oranları</p>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3 mb-8">
                    <div class="bg-blue-900 text-white p-4 minimal-corner card-corporate">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-blue-200 text-xs font-medium mb-1">BUGÜN TAMAMLANAN İŞ</p>
                                <p class="text-2xl font-bold stats-counter text-white" id="daily-jobs">357</p>
                            </div>
                            <div class="w-2 h-2 bg-amber-400 sharp-corner pulse-dot"></div>
                        </div>
                        <div class="mt-3 pt-2 border-t border-blue-700">
                            <span class="text-amber-400 text-sm font-semibold">
                                <i class="fas fa-arrow-up mr-1"></i>+34% önceki güne göre
                            </span>
                        </div>
                    </div>

                    <div class="bg-white border-2 border-blue-200 p-4 minimal-corner card-corporate">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-blue-600 text-xs font-medium mb-1">MÜŞTERİ MEMNUNİYET</p>
                                <p class="text-2xl font-bold stats-counter text-blue-900">98.7<span class="text-lg">%</span></p>
                            </div>
                            <div class="w-2 h-2 bg-amber-400 sharp-corner"></div>
                        </div>
                        <div class="mt-3 pt-2 border-t border-blue-100">
                            <span class="text-blue-600 text-xs font-semibold">
                                <i class="fas fa-star mr-1"></i>5 yıldız ortalama
                            </span>
                        </div>
                    </div>

                    <div class="bg-white border-2 border-blue-200 p-4 minimal-corner card-corporate">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-blue-600 text-xs font-medium mb-1">AKTİF HİZMET VEREN</p>
                                <p class="text-2xl font-bold stats-counter text-blue-900" id="active-dealers">67</p>
                            </div>
                            <div class="w-2 h-2 bg-amber-400 sharp-corner"></div>
                        </div>
                        <div class="mt-3 pt-2 border-t border-blue-100">
                            <span class="text-blue-600 text-xs font-semibold">
                                <i class="fas fa-users mr-1"></i>Doğrulanmış uzmanlar
                            </span>
                        </div>
                    </div>

                    <div class="bg-amber-500 text-white p-4 minimal-corner card-corporate">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-amber-100 text-xs font-medium mb-1">ORTALAMA YANIT SÜRESİ</p>
                                <p class="text-2xl font-bold stats-counter text-white"><span id="avg-response">12</span><span class="text-lg">dk</span></p>
                            </div>
                            <div class="w-2 h-2 bg-white sharp-corner pulse-dot"></div>
                        </div>
                        <div class="mt-3 pt-2 border-t border-amber-600">
                            <span class="text-amber-100 text-xs font-semibold">
                                <i class="fas fa-clock mr-1"></i>Hızlı çözüm
                            </span>
                        </div>
                    </div>
                </div>

                <!-- Modern Live Feed Dashboard - Kompakt -->
                <div class="bg-white border border-gray-200 rounded-xl shadow-sm overflow-hidden">
                    <div class="bg-gradient-to-r from-gray-50 to-gray-100 px-4 py-3 border-b border-gray-200">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-2">
                                <div class="w-2 h-2 bg-blue-500 rounded-full animate-pulse"></div>
                                <h3 class="text-gray-800 text-lg font-semibold tracking-tight">Canlı Talep Akışı</h3>
                                <div class="px-2 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-full">CANLI</div>
                            </div>
                            <div class="flex items-center space-x-2">
                                <span class="text-gray-500 text-xs">Son 10dk:</span>
                                <div class="bg-gray-800 text-white px-2 py-1 rounded-full text-xs font-semibold" id="recent-count">10</div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Anlık talep bölümü kaldırıldı -->
                </div>
            </div>
        </section>

        <!-- SOCIAL PROOF & CUSTOMER SUCCESS STORIES -->
        <section id="social-proof" class="py-2 bg-gradient-to-br from-blue-900 via-purple-900 to-indigo-900 text-white">
            <div class="max-w-6xl mx-auto px-6">
                <div class="text-center mb-8">
                    <div class="inline-flex items-center bg-white/10 backdrop-blur-sm border border-white/20 px-3 py-1 rounded-full mb-4">
                        <i class="fas fa-heart text-red-400 text-sm mr-1"></i>
                        <span class="font-semibold text-xs">MÜŞTERİ MEMNUNIYETI</span>
                    </div>
                    <h2 class="text-2xl lg:text-3xl font-bold mb-4 bg-gradient-to-r from-blue-300 to-purple-300 bg-clip-text text-transparent">
                        Mutlu Müşterilerimiz Konuşuyor
                    </h2>
                    <p class="text-sm text-blue-100 max-w-3xl mx-auto leading-relaxed mb-6">
                        47.500+ memnun müşterinin deneyimleri ve gerçek yorumları. 
                        Garantor360 ile hayatları nasıl kolaylaştıklarını keşfedin!
                    </p>
                    
                    <!-- Live Statistics Row -->
                    <div class="grid grid-cols-1 lg:grid-cols-3 gap-3 max-w-4xl mx-auto">
                        <!-- Active Users -->
                        <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-3">
                            <div class="flex items-center justify-center space-x-3">
                                <div class="flex items-center">
                                    <div class="w-3 h-3 bg-green-400 rounded-full animate-pulse mr-2"></div>
                                    <span class="text-green-300 font-semibold">ŞU ANDA CANLI:</span>
                                </div>
                                <div class="text-xl font-bold text-yellow-300" id="liveUserCount">${liveUserCount}</div>
                                <span class="text-blue-200">kişi</span>
                            </div>
                            <div class="text-xs text-blue-300 text-center mt-1">
                                <i class="fas fa-eye mr-1"></i>
                                Son 5 dakikada siteyi ziyaret eden kullanıcılar
                            </div>
                        </div>

                        <!-- Active Services -->
                        <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-3">
                            <div class="flex items-center justify-center space-x-3">
                                <div class="flex items-center">
                                    <div class="w-3 h-3 bg-blue-400 rounded-full animate-pulse mr-2"></div>
                                    <span class="text-blue-300 font-semibold">AKTİF HİZMET:</span>
                                </div>
                                <div class="text-xl font-bold text-yellow-300" id="activeServices">156</div>
                                <span class="text-blue-200">adet</span>
                            </div>
                            <div class="text-xs text-blue-300 text-center mt-1">
                                <i class="fas fa-tools mr-1"></i>
                                Şu anda devam eden servis çalışmaları
                            </div>
                        </div>

                        <!-- Expert Online -->
                        <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-3">
                            <div class="flex items-center justify-center space-x-3">
                                <div class="flex items-center">
                                    <div class="w-3 h-3 bg-orange-400 rounded-full animate-pulse mr-2"></div>
                                    <span class="text-orange-300 font-semibold">UZMAN ONLİNE:</span>
                                </div>
                                <div class="text-xl font-bold text-yellow-300" id="onlineExperts">156</div>
                                <span class="text-blue-200">usta</span>
                            </div>
                            <div class="text-xs text-blue-300 text-center mt-1">
                                <i class="fas fa-user-check mr-1"></i>
                                Şu anda hizmet verebilecek uzmanlar
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Live Statistics -->
                <div class="grid grid-cols-2 lg:grid-cols-4 gap-4 mb-4">
                    <div class="text-center">
                        <div class="text-xl lg:text-2xl font-bold text-blue-300 mb-1" id="liveCustomers">2,847</div>
                        <div class="text-blue-100 text-sm">Memnun Müşteri</div>
                    </div>
                    <div class="text-center">
                        <div class="text-xl lg:text-2xl font-bold text-green-300 mb-1">4.9</div>
                        <div class="text-blue-100 text-sm">Ortalama Puan</div>
                    </div>
                    <div class="text-center">
                        <div class="text-xl lg:text-2xl font-bold text-yellow-300 mb-1">%98</div>
                        <div class="text-blue-100 text-sm">Sorunsuz İş</div>
                    </div>
                    <div class="text-center">
                        <div class="text-xl lg:text-2xl font-bold text-purple-300 mb-1" id="liveJobs">1,523</div>
                        <div class="text-blue-100 text-sm">Tamamlanan İş</div>
                    </div>
                </div>

                <!-- Customer Reviews Carousel -->
                <div class="relative">
                    <div class="overflow-hidden rounded-2xl">
                        <div id="reviewsCarousel" class="flex transition-transform duration-500 ease-in-out">
                            <!-- Review 1 -->
                            <div class="w-full flex-shrink-0">
                                <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
                                    <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4 min-h-[240px] flex flex-col">
                                        <div class="flex items-center mb-3">
                                            <img src="https://images.unsplash.com/photo-1494790108755-2616c26d4c46?w=150&h=150&fit=crop&crop=face&auto=format&q=90" alt="Ayşe Kaya" class="w-9 h-9 md:w-11 md:h-11 rounded-full mr-3 object-cover" style="object-position: center 15%;">
                                            <div>
                                                <h4 class="text-lg font-bold text-white">Ayşe Kaya</h4>
                                                <div class="flex items-center">
                                                    <div class="flex text-yellow-400 mr-2">
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                    </div>
                                                    <span class="text-blue-200 text-sm">İstanbul, Kadıköy</span>
                                                </div>
                                            </div>
                                        </div>
                                        <blockquote class="text-blue-100 leading-relaxed mb-4 flex-grow">
                                            "Evdeki elektrik problemi için aradım. 2 saat içinde 3 farklı elektrikçi teklif verdi! 
                                            En uygun fiyatlısını seçtim, aynı gün geldi ve sorunu çözdü. Harika bir sistem!"
                                        </blockquote>
                                        <div class="text-xs text-blue-300 mt-auto">
                                            <i class="fas fa-check-circle mr-1"></i>
                                            Doğrulanmış Müşteri • 2 gün önce
                                        </div>
                                    </div>

                                    <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4 min-h-[240px] flex flex-col">
                                        <div class="flex items-center mb-3">
                                            <img src="https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face&auto=format&q=90" alt="Mehmet Öztürk" class="w-9 h-9 md:w-11 md:h-11 rounded-full mr-3 object-cover" style="object-position: center 20%;">
                                            <div>
                                                <h4 class="text-lg font-bold text-white">Mehmet Öztürk</h4>
                                                <div class="flex items-center">
                                                    <div class="flex text-yellow-400 mr-2">
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                    </div>
                                                    <span class="text-blue-200 text-sm">Ankara, Çankaya</span>
                                                </div>
                                            </div>
                                        </div>
                                        <blockquote class="text-blue-100 leading-relaxed mb-4 flex-grow">
                                            "Klima arızası için kullandım. Fiyat hesaplayıcı gerçekten çok başarılı, 
                                            önceden ne kadar ödeyeceğimi biliyordum. Garantor360 sayesinde dolandırılma korkum kalmadı!"
                                        </blockquote>
                                        <div class="text-xs text-blue-300 mt-auto">
                                            <i class="fas fa-check-circle mr-1"></i>
                                            Doğrulanmış Müşteri • 5 gün önce
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Review 2 -->
                            <div class="w-full flex-shrink-0">
                                <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
                                    <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4 min-h-[240px] flex flex-col">
                                        <div class="flex items-center mb-3">
                                            <img src="https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=100&h=100&fit=crop&crop=face&auto=format&q=80" alt="Zeynep Yılmaz" class="w-12 h-12 rounded-full mr-3">
                                            <div>
                                                <h4 class="text-lg font-bold text-white">Zeynep Yılmaz</h4>
                                                <div class="flex items-center">
                                                    <div class="flex text-yellow-400 mr-2">
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                    </div>
                                                    <span class="text-blue-200 text-sm">İzmir, Bornova</span>
                                                </div>
                                            </div>
                                        </div>
                                        <blockquote class="text-blue-100 leading-relaxed mb-4 flex-grow">
                                            "Ev temizliği için sürekli kullanıyorum. Uzman eşleştirme sistemi muhteşem! 
                                            Her seferinde kaliteli ve güvenilir temizlikçiler geliyor. Kesinlikle tavsiye ederim."
                                        </blockquote>
                                        <div class="text-xs text-blue-300 mt-auto">
                                            <i class="fas fa-check-circle mr-1"></i>
                                            Doğrulanmış Müşteri • 1 hafta önce
                                        </div>
                                    </div>

                                    <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4 min-h-[240px] flex flex-col">
                                        <div class="flex items-center mb-3">
                                            <img src="https://images.unsplash.com/photo-1566492031773-4f4e44671d66?w=150&h=150&fit=crop&crop=face&auto=format&q=90" alt="Ali Çelik" class="w-9 h-9 md:w-11 md:h-11 rounded-full mr-3 object-cover" style="object-position: center 20%;">
                                            <div>
                                                <h4 class="text-lg font-bold text-white">Ali Çelik</h4>
                                                <div class="flex items-center">
                                                    <div class="flex text-yellow-400 mr-2">
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                    </div>
                                                    <span class="text-blue-200 text-sm">Bursa, Osmangazi</span>
                                                </div>
                                            </div>
                                        </div>
                                        <blockquote class="text-blue-100 leading-relaxed mb-4 flex-grow">
                                            "Tesisatçı aradım, AI önerisi ile 10 dakikada sorunu tarif ettim ve uygun uzman buldu. 
                                            Bu kadar kolay olacağını hiç düşünmemiştim. Artık hep Garantor360 kullanacağım!"
                                        </blockquote>
                                        <div class="text-xs text-blue-300 mt-auto">
                                            <i class="fas fa-check-circle mr-1"></i>
                                            Doğrulanmış Müşteri • 3 gün önce
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Review 3 -->
                            <div class="w-full flex-shrink-0">
                                <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
                                    <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4 min-h-[240px] flex flex-col">
                                        <div class="flex items-center mb-3">
                                            <img src="https://images.unsplash.com/photo-1544725176-7c40e5a71c5e?w=150&h=150&fit=crop&crop=face&auto=format&q=90" alt="Fatma Demir" class="w-9 h-9 md:w-11 md:h-11 rounded-full mr-3 object-cover" style="object-position: center 20%;">
                                            <div>
                                                <h4 class="text-lg font-bold text-white">Fatma Demir</h4>
                                                <div class="flex items-center">
                                                    <div class="flex text-yellow-400 mr-2">
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                    </div>
                                                    <span class="text-blue-200 text-sm">Antalya, Muratpaşa</span>
                                                </div>
                                            </div>
                                        </div>
                                        <blockquote class="text-blue-100 leading-relaxed mb-4 flex-grow">
                                            "Televizyonum bozulmuştu, tamiri için 5 farklı teknisyenden teklif aldım. 
                                            En uygun fiyatlı ve en yakın olanı seçtim. Aynı gün gelip TV'mi tamir etti. 
                                            Garantor360'dan çok memnunum!"
                                        </blockquote>
                                        <div class="text-xs text-blue-300 mt-auto">
                                            <i class="fas fa-check-circle mr-1"></i>
                                            Doğrulanmış Müşteri • 4 gün önce
                                        </div>
                                    </div>

                                    <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4 min-h-[240px] flex flex-col">
                                        <div class="flex items-center mb-3">
                                            <img src="https://images.unsplash.com/photo-1560250097-0b93528c311a?w=150&h=150&fit=crop&crop=face&auto=format&q=90" alt="Hasan Koç" class="w-9 h-9 md:w-11 md:h-11 rounded-full mr-3 object-cover" style="object-position: center 25%;">
                                            <div>
                                                <h4 class="text-lg font-bold text-white">Hasan Koç</h4>
                                                <div class="flex items-center">
                                                    <div class="flex text-yellow-400 mr-2">
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                    </div>
                                                    <span class="text-blue-200 text-sm">Adana, Seyhan</span>
                                                </div>
                                            </div>
                                        </div>
                                        <blockquote class="text-blue-100 leading-relaxed mb-4 flex-grow">
                                            "Buzdolabım arızalandı, acil tamire ihtiyacım vardı. Uygulamayı indirdim, 
                                            hemen 3 beyaz eşya ustası ile iletişim kurdum. En hızlı gelebileni seçtim, 
                                            2 saatte geldi ve sorunu çözdü. Mükemmel!"
                                        </blockquote>
                                        <div class="text-xs text-blue-300 mt-auto">
                                            <i class="fas fa-check-circle mr-1"></i>
                                            Doğrulanmış Müşteri • 1 gün önce
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Review 4 -->
                            <div class="w-full flex-shrink-0">
                                <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
                                    <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4 min-h-[240px] flex flex-col">
                                        <div class="flex items-center mb-3">
                                            <img src="https://images.unsplash.com/photo-1489424731084-a5d8b219a5bb?w=150&h=150&fit=crop&crop=face&auto=format&q=90" alt="Elif Arslan" class="w-9 h-9 md:w-11 md:h-11 rounded-full mr-3 object-cover" style="object-position: center 15%;">
                                            <div>
                                                <h4 class="text-lg font-bold text-white">Elif Arslan</h4>
                                                <div class="flex items-center">
                                                    <div class="flex text-yellow-400 mr-2">
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                    </div>
                                                    <span class="text-blue-200 text-sm">Konya, Selçuklu</span>
                                                </div>
                                            </div>
                                        </div>
                                        <blockquote class="text-blue-100 leading-relaxed mb-4 flex-grow">
                                            "Laptopumun ekranı kırılmıştı, onarım için güvenilir bir yer arıyordum. 
                                            Garantor360 sayesinde hızlıca laptop tamircisi buldum. 
                                            Uygun fiyata, garantili onarım yaptı. Kesinlikle tavsiye ederim!"
                                        </blockquote>
                                        <div class="text-xs text-blue-300 mt-auto">
                                            <i class="fas fa-check-circle mr-1"></i>
                                            Doğrulanmış Müşteri • 6 gün önce
                                        </div>
                                    </div>

                                    <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4 min-h-[240px] flex flex-col">
                                        <div class="flex items-center mb-3">
                                            <img src="https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=150&h=150&fit=crop&crop=face&auto=format&q=90" alt="Mustafa Yıldız" class="w-9 h-9 md:w-11 md:h-11 rounded-full mr-3 object-cover" style="object-position: center 10%;">
                                            <div>
                                                <h4 class="text-lg font-bold text-white">Mustafa Yıldız</h4>
                                                <div class="flex items-center">
                                                    <div class="flex text-yellow-400 mr-2">
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                    </div>
                                                    <span class="text-blue-200 text-sm">Gaziantep, Şahinbey</span>
                                                </div>
                                            </div>
                                        </div>
                                        <blockquote class="text-blue-100 leading-relaxed mb-4 flex-grow">
                                            "Klimam çalışmıyordu, yaz ayında çok zorluk yaşıyorduk. 
                                            Garantor360'dan klima teknisyeni buldum, çok profesyonel bir ekip geldi. 
                                            Sorunu çözdüler ve bakım da yaptılar. Müthiş bir hizmet!"
                                        </blockquote>
                                        <div class="text-xs text-blue-300 mt-auto">
                                            <i class="fas fa-check-circle mr-1"></i>
                                            Doğrulanmış Müşteri • 8 gün önce
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Review 5 -->
                            <div class="w-full flex-shrink-0">
                                <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
                                    <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4 min-h-[240px] flex flex-col">
                                        <div class="flex items-center mb-3">
                                            <img src="https://images.unsplash.com/photo-1517841905240-472988babdf9?w=150&h=150&fit=crop&crop=face&auto=format&q=90" alt="Gamze Polat" class="w-9 h-9 md:w-11 md:h-11 rounded-full mr-3 object-cover" style="object-position: center 15%;">
                                            <div>
                                                <h4 class="text-lg font-bold text-white">Gamze Polat</h4>
                                                <div class="flex items-center">
                                                    <div class="flex text-yellow-400 mr-2">
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                    </div>
                                                    <span class="text-blue-200 text-sm">Eskişehir, Odunpazarı</span>
                                                </div>
                                            </div>
                                        </div>
                                        <blockquote class="text-blue-100 leading-relaxed mb-4 flex-grow">
                                            "Çamaşır makinam bozulmuştu, tamir ettirmeye korkuyordum çünkü daha önce 
                                            kötü deneyimler yaşamıştım. Garantor360'dan güvenilir bir usta buldum. 
                                            Hem ucuz hem de çok kaliteli iş yaptı!"
                                        </blockquote>
                                        <div class="text-xs text-blue-300 mt-auto">
                                            <i class="fas fa-check-circle mr-1"></i>
                                            Doğrulanmış Müşteri • 2 hafta önce
                                        </div>
                                    </div>

                                    <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4 min-h-[240px] flex flex-col">
                                        <div class="flex items-center mb-3">
                                            <img src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face&auto=format&q=90" alt="Emre Şahin" class="w-9 h-9 md:w-11 md:h-11 rounded-full mr-3 object-cover" style="object-position: center 15%;">
                                            <div>
                                                <h4 class="text-lg font-bold text-white">Emre Şahin</h4>
                                                <div class="flex items-center">
                                                    <div class="flex text-yellow-400 mr-2">
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                        <i class="fas fa-star"></i>
                                                    </div>
                                                    <span class="text-blue-200 text-sm">Samsun, İlkadım</span>
                                                </div>
                                            </div>
                                        </div>
                                        <blockquote class="text-blue-100 leading-relaxed mb-4 flex-grow">
                                            "PC'im çalışmıyordu, önemli dosyalarım vardı kaybetme korkusu yaşıyordum. 
                                            Garantor360'dan bilgisayar teknisyeni buldum. Hem verilerimi kurtardı 
                                            hem de bilgisayarımı tamir etti. İnanılmaz profesyonel!"
                                        </blockquote>
                                        <div class="text-xs text-blue-300 mt-auto">
                                            <i class="fas fa-check-circle mr-1"></i>
                                            Doğrulanmış Müşteri • 10 gün önce
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Navigation Dots -->
                    <div class="flex justify-center mt-6 space-x-3">
                        <button onclick="changeReviewSlide(0)" class="review-dot w-3 h-3 rounded-full bg-white transition-all"></button>
                        <button onclick="changeReviewSlide(1)" class="review-dot w-3 h-3 rounded-full bg-white/40 transition-all"></button>
                        <button onclick="changeReviewSlide(2)" class="review-dot w-3 h-3 rounded-full bg-white/40 transition-all"></button>
                        <button onclick="changeReviewSlide(3)" class="review-dot w-3 h-3 rounded-full bg-white/40 transition-all"></button>
                        <button onclick="changeReviewSlide(4)" class="review-dot w-3 h-3 rounded-full bg-white/40 transition-all"></button>
                    </div>
                </div>

                <!-- Live Activity - Side by Side -->
                <div class="mt-8 grid grid-cols-1 lg:grid-cols-2 gap-6">
                    <!-- Real-time Success Stories -->
                    <div class="bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-6">
                        <h3 class="text-xl font-bold text-center text-white mb-4">
                            <i class="fas fa-broadcast-tower text-green-400 mr-3"></i>
                            Canlı İş Tamamlama Bildirimleri
                        </h3>
                        
                        <div id="liveNotifications" class="space-y-2 max-h-40 overflow-hidden">
                            <div class="bg-white/10 border-l-4 border-green-400 p-3 text-white text-sm rounded-r-lg shadow-lg mb-2">
                                <div class="font-medium text-sm">Samsung QLED 4K TV Tamiri - 55" Ekran</div>
                                <div class="text-green-200 text-xs opacity-90">Istanbul, Besiktas • 2 dk once</div>
                            </div>
                            <div class="bg-white/10 border-l-4 border-blue-400 p-3 text-white text-sm rounded-r-lg shadow-lg mb-2">
                                <div class="font-medium text-sm">MacBook Tamiri - MacBook Pro 16" M2</div>
                                <div class="text-blue-200 text-xs opacity-90">Ankara, Cankaya • 1 dk once</div>
                            </div>
                        </div>
                        
                        <div class="text-center mt-4">
                            <div class="inline-flex items-center text-green-300 text-sm">
                                <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse mr-2"></div>
                                Gerçek zamanlı güncellemeler
                            </div>
                        </div>
                    </div>

                    <!-- Live Comments System -->
                    <div class="bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-4">
                        <h3 class="text-lg font-bold text-center text-white mb-2">
                            <i class="fas fa-comments text-blue-400 mr-2"></i>
                            Canlı Müşteri Yorumları
                        </h3>
                        
                        <div id="liveComments" class="space-y-2 max-h-40 overflow-hidden">
                            <div class="bg-white/10 p-3 text-white text-sm rounded-lg shadow-lg mb-2">
                                <div class="font-medium text-sm">Mehmet K.</div>
                                <div class="text-yellow-400 text-xs my-1">⭐⭐⭐⭐⭐</div>
                                <div class="text-blue-200 text-xs opacity-90">Hizmet mukemmel, cok tesekkurler!</div>
                            </div>
                            <div class="bg-white/10 p-3 text-white text-sm rounded-lg shadow-lg mb-2">
                                <div class="font-medium text-sm">Ayse Y.</div>
                                <div class="text-yellow-400 text-xs my-1">⭐⭐⭐⭐⭐</div>
                                <div class="text-blue-200 text-xs opacity-90">Cok hizli ve kaliteli servis.</div>
                            </div>
                        </div>
                        
                        <div class="text-center mt-2">
                            <div class="inline-flex items-center text-blue-300 text-sm">
                                <div class="w-2 h-2 bg-blue-400 rounded-full animate-pulse mr-2"></div>
                                Her saniye yeni yorumlar geliyor
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Garantor360 Güvence Sistemi - Minimal & Clean Design -->
        <section id="guarantee" class="bg-slate-50" style="padding-top: 50px; padding-bottom: 80px;">
            <div class="max-w-7xl mx-auto px-6">
                <!-- Security and Trust Section -->
                <div class="text-center mb-32">
                    <div class="section-divider w-20 mx-auto mb-6"></div>

                    <h2 class="text-4xl lg:text-5xl font-bold mb-6 tracking-tight leading-tight text-blue-900">
                        GÜVENLİ HİZMET ALMAK
                        <span class="block text-amber-600">ARTIK ÇOK KOLAY</span>
                    </h2>
                    <p class="text-lg text-slate-600 mb-8 max-w-3xl mx-auto leading-relaxed">
                        Piyasadaki güvenlik endişelerinize son veren kapsamlı güvence sistemiyle 
                        <span class="text-blue-700 font-semibold">tamamen risk-free hizmet alın</span>
                    </p>
                </div>

                <!-- Elegant Problem vs Solution Comparison -->
                <div class="relative mb-10 py-2 -mt-20">
                    
                    <div class="relative z-20 mx-auto px-4 md:px-6 max-w-5xl">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 items-start relative desktop-cards-container">
                            <style>
                                @media (min-width: 768px) {
                                    .desktop-cards-container {
                                        gap: 80px !important;
                                    }
                                }
                            </style>
                            
                            <!-- Superhero Between Containers -->
                            <div class="hidden md:block absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 z-30" style="transform: translate(calc(-50% - 25px), -50%);">
                                <img src="/static/garantor360-power-flying-superhero.png" 
                                     alt="Garantor360 Power Flying Superhero" 
                                     class="object-contain opacity-100 floating-animation" style="width: 316.8px; height: 316.8px;">
                            </div>
                            
                            <!-- Left: Problems Container -->
                            <div class="md:bg-transparent md:border-0 md:shadow-none md:hover:shadow-none md:hover:scale-100">
                                
                                <!-- MOBİL KART - SADECE MOBİL -->
                                <div class="md:hidden bg-white rounded-xl p-4 shadow-lg border border-slate-200 -mx-5">
                                    <!-- Mobil Header -->
                                    <div class="flex items-center justify-between mb-3">
                                        <h3 class="text-lg font-bold text-slate-800">GENEL PİYASA SORUNLARI</h3>
                                        <div class="w-3 h-3 bg-red-500 rounded-full animate-pulse"></div>
                                    </div>
                                    
                                    <!-- Mobil İçerik - PC'deki TÜM detaylar -->
                                    <div class="space-y-2">
                                        <div class="flex items-start p-3 hover:bg-slate-50 transition-colors duration-200 rounded-xl border border-slate-200">
                                            <div class="w-6 h-6 bg-slate-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-search text-slate-500 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-sm mb-1">Güvenilir Usta Bulamama</div>
                                                <div class="text-slate-600 text-xs">Hangi ustanın güvenilir olduğu belirsiz</div>
                                            </div>
                                        </div>
                                        
                                        <div class="flex items-start p-3 hover:bg-slate-50 transition-colors duration-200 rounded-xl border border-slate-200">
                                            <div class="w-6 h-6 bg-slate-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-question-circle text-slate-500 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-sm mb-1">Fiyat Belirsizliği</div>
                                                <div class="text-slate-600 text-xs">Ne kadar ödeyeceğiniz önceden bilinmiyor</div>
                                            </div>
                                        </div>
                                        
                                        <div class="flex items-start p-3 hover:bg-slate-50 transition-colors duration-200 rounded-xl border border-slate-200">
                                            <div class="w-6 h-6 bg-slate-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-tools text-slate-500 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-sm mb-1">İşçilik Garantisi Eksikliği</div>
                                                <div class="text-slate-600 text-xs">Yapılan işin garantisi belirsiz veya yok</div>
                                            </div>
                                        </div>
                                        
                                        <div class="flex items-start p-3 hover:bg-slate-50 transition-colors duration-200 rounded-xl border border-slate-200">
                                            <div class="w-6 h-6 bg-slate-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-lock-open text-slate-500 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-sm mb-1">Ödeme Güvensizliği</div>
                                                <div class="text-slate-600 text-xs">Para iade garantisi ve güvenli ödeme yok</div>
                                            </div>
                                        </div>
                                        
                                        <div class="flex items-start p-3 hover:bg-slate-50 transition-colors duration-200 rounded-xl border border-slate-200">
                                            <div class="w-6 h-6 bg-slate-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-phone-slash text-slate-500 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-sm mb-1">İletişim Sorunu</div>
                                                <div class="text-slate-600 text-xs">Sonradan ulaşamama ve destek alamama</div>
                                            </div>
                                        </div>
                                        
                                        <div class="flex items-start p-3 hover:bg-slate-50 transition-colors duration-200 rounded-xl border border-slate-200">
                                            <div class="w-6 h-6 bg-slate-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-shield-alt text-slate-500 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-sm mb-1">Sigorta ve Koruma Eksikliği</div>
                                                <div class="text-slate-600 text-xs">Hasar durumunda koruma ve tazminat yok</div>
                                            </div>
                                        </div>
                                        
                                        <div class="flex items-start p-3 hover:bg-amber-50 transition-colors duration-200 rounded-xl border border-amber-200 mt-4">
                                            <div class="w-6 h-6 bg-amber-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-user-times text-amber-600 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-sm mb-1">Dolandırıcılık Riski</div>
                                                <div class="text-amber-600 text-xs font-medium">Güvensiz platformlarda dolandırılma ihtimali</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Desktop wrapper with oval frame -->
                                <div class="hidden md:block relative">
                                    <!-- Oval Frame -->
                                    <div class="absolute -inset-4 border-2 border-slate-300 rounded-3xl opacity-50"></div>
                                    <div class="bg-white border border-slate-200 hover:border-slate-300 transition-all duration-300 rounded-2xl shadow-sm hover:shadow-md relative" style="min-height: 600px;">
                                
                                        <!-- PC Header (ESKİ TASARIM) -->
                                        <div class="px-3 py-1 border-b border-slate-100">
                                            <div class="text-center">
                                                <div class="inline-flex items-center justify-center w-8 h-8 bg-slate-100 rounded-lg mb-1">
                                                    <i class="fas fa-exclamation-circle text-slate-500 text-2xl"></i>
                                                </div>
                                                <h3 class="text-2xl font-bold text-slate-800 mb-1">GENEL PİYASA SORUNLARI</h3>
                                                <p class="text-slate-500 text-base">Bu endişeleri yaşıyor musunuz?</p>
                                            </div>
                                        </div>



                                        <!-- PC Problems List (ESKİ TASARIM) -->
                                        <div class="hidden md:block p-1 space-y-1">
                                            <div class="flex items-start p-3 hover:bg-slate-50 transition-colors duration-200 rounded-xl">
                                                <div class="w-8 h-8 bg-slate-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                    <i class="fas fa-search text-slate-500 text-lg"></i>
                                                </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-base mb-1">Güvenilir Usta Bulamama</div>
                                                <div class="text-slate-600 text-sm">Hangi ustanın güvenilir olduğu belirsiz</div>
                                            </div>
                                        </div>

                                        <div class="flex items-start p-3 hover:bg-slate-50 transition-colors duration-200 rounded-xl">
                                            <div class="w-8 h-8 bg-slate-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                <i class="fas fa-question-circle text-slate-500 text-lg"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-base mb-1">Fiyat Belirsizliği</div>
                                                <div class="text-slate-600 text-sm">Ne kadar ödeyeceğiniz önceden bilinmiyor</div>
                                            </div>
                                        </div>

                                        <div class="flex items-start p-3 hover:bg-slate-50 transition-colors duration-200 rounded-xl">
                                            <div class="w-8 h-8 bg-slate-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                <i class="fas fa-tools text-slate-500 text-lg"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-base mb-1">İşçilik Garantisi Eksikliği</div>
                                                <div class="text-slate-600 text-sm">Yapılan işin garantisi belirsiz veya yok</div>
                                            </div>
                                        </div>

                                        <div class="flex items-start p-3 hover:bg-slate-50 transition-colors duration-200 rounded-xl">
                                            <div class="w-8 h-8 bg-slate-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                <i class="fas fa-lock-open text-slate-500 text-lg"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-base mb-1">Ödeme Güvensizliği</div>
                                                <div class="text-slate-600 text-sm">Para iade garantisi ve güvenli ödeme yok</div>
                                            </div>
                                        </div>

                                        <div class="flex items-start p-3 hover:bg-slate-50 transition-colors duration-200 rounded-xl">
                                            <div class="w-8 h-8 bg-slate-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                <i class="fas fa-phone-slash text-slate-500 text-lg"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-base mb-1">İletişim Sorunu</div>
                                                <div class="text-slate-600 text-sm">Sonradan ulaşamama ve destek alamama</div>
                                            </div>
                                        </div>

                                        <div class="flex items-start p-3 hover:bg-slate-50 transition-colors duration-200 rounded-xl">
                                            <div class="w-8 h-8 bg-slate-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                <i class="fas fa-shield-alt text-slate-500 text-lg"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-base mb-1">Sigorta ve Koruma Eksikliği</div>
                                                <div class="text-slate-600 text-sm">Hasar durumunda koruma ve tazminat yok</div>
                                            </div>
                                        </div>

                                        <div class="flex items-start p-3 hover:bg-slate-50 transition-colors duration-200 border-t border-slate-100 mt-4 pt-4 rounded-xl">
                                            <div class="w-8 h-8 bg-amber-100 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                <i class="fas fa-user-times text-amber-600 text-sm"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-slate-800 text-base mb-1">Dolandırıcılık Riski</div>
                                                <div class="text-amber-600 text-xs font-medium">Güvensiz platformlarda dolandırılma ihtimali</div>
                                            </div>
                                        </div>


                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Right: Solutions Container -->
                            <div class="md:bg-transparent md:shadow-none md:hover:shadow-none md:hover:scale-100">
                                
                                <!-- MOBİL KART - SADECE MOBİL -->
                                <div class="md:hidden bg-gradient-to-br from-blue-600 to-blue-700 rounded-xl p-4 text-white shadow-lg border border-blue-400 -mx-5">
                                    <!-- Mobil Header -->
                                    <div class="flex items-center justify-between mb-3">
                                        <h3 class="text-lg font-bold text-white">GARANTOR360 KORUMA</h3>
                                        <div class="w-3 h-3 bg-green-400 rounded-full animate-pulse"></div>
                                    </div>
                                    
                                    <!-- Mobil İçerik - PC'deki TÜM detaylar -->
                                    <div class="space-y-2">
                                        <div class="flex items-start p-3 hover:bg-white/10 transition-colors duration-200 rounded-xl border border-blue-400/30">
                                            <div class="w-6 h-6 bg-amber-400/20 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-user-shield text-amber-400 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-sm mb-1">Doğrulanmış Uzmanlar</div>
                                                <div class="text-blue-200 text-xs">Kimlik, adres, referans kontrollü</div>
                                            </div>
                                        </div>
                                        
                                        <div class="flex items-start p-3 hover:bg-white/10 transition-colors duration-200 rounded-xl border border-blue-400/30">
                                            <div class="w-6 h-6 bg-amber-400/20 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-search-plus text-amber-400 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-sm mb-1">Sabıka Kaydı Sorgulama</div>
                                                <div class="text-blue-200 text-xs">Adli sicil kontrolü ve geçmiş sorgulaması</div>
                                            </div>
                                        </div>
                                        
                                        <div class="flex items-start p-3 hover:bg-white/10 transition-colors duration-200 rounded-xl border border-blue-400/30">
                                            <div class="w-6 h-6 bg-amber-400/20 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-money-check-alt text-amber-400 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-sm mb-1">Para İade Garantisi</div>
                                                <div class="text-blue-200 text-xs">Memnun kalmazsan tüm paran geri</div>
                                            </div>
                                        </div>
                                        
                                        <div class="flex items-start p-3 hover:bg-white/10 transition-colors duration-200 rounded-xl border border-blue-400/30">
                                            <div class="w-6 h-6 bg-amber-400/20 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-umbrella text-amber-400 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-sm mb-1">Sigorta Koruması</div>
                                                <div class="text-blue-200 text-xs">Hasar ve sorun durumunda sigorta tazminatı</div>
                                            </div>
                                        </div>
                                        
                                        <div class="flex items-start p-3 hover:bg-white/10 transition-colors duration-200 rounded-xl border border-blue-400/30">
                                            <div class="w-6 h-6 bg-amber-400/20 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-headset text-amber-400 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-sm mb-1">7/24 İzleme Sistemi</div>
                                                <div class="text-blue-200 text-xs">Sürekli takip, anında müdahale</div>
                                            </div>
                                        </div>
                                        
                                        <div class="flex items-start p-3 hover:bg-white/10 transition-colors duration-200 rounded-xl border border-blue-400/30">
                                            <div class="w-6 h-6 bg-amber-400/20 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-comments text-amber-400 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-sm mb-1">Danışmanlık Hizmeti</div>
                                                <div class="text-blue-200 text-xs">Uzman danışmanlardan ücretsiz rehberlik</div>
                                            </div>
                                        </div>
                                        
                                        <div class="flex items-start p-3 hover:bg-white/10 transition-colors duration-200 rounded-xl border border-amber-400/50 mt-4">
                                            <div class="w-6 h-6 bg-amber-400/30 rounded-lg flex items-center justify-center flex-shrink-0 mr-3 mt-1">
                                                <i class="fas fa-gavel text-amber-300 text-xs"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-sm mb-1">Hukuki Koruma</div>
                                                <div class="text-blue-200 text-xs">Sorun çıkarsa avukat devreye girer</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Desktop wrapper with oval frame -->
                                <div class="hidden md:block relative">
                                    <!-- Oval Frame -->
                                    <div class="absolute -inset-4 border-2 border-amber-300 rounded-3xl opacity-50"></div>
                                    <div class="bg-gradient-to-br from-blue-900 to-blue-800 border border-blue-300 hover:border-blue-200 transition-all duration-300 rounded-2xl shadow-sm hover:shadow-md relative" style="min-height: 600px;">
                                
                                        <!-- PC Header (ESKİ TASARIM) -->
                                        <div class="px-3 pt-1 pb-2 border-b border-blue-700">
                                            <div class="text-center">
                                                <div class="flex flex-col items-center justify-center mb-1">
                                                    <div class="text-lg font-bold mb-1">
                                                        <span class="text-white">Garantor</span><span class="text-amber-400">360°</span>
                                                    </div>
                                                    <h3 class="text-2xl font-bold text-white">KORUMA</h3>
                                                </div>
                                                <p class="text-blue-200 text-base text-center">Güvenle hizmet alın, rahat olun!</p>
                                            </div>
                                        </div>



                                        <!-- PC Solutions List (ESKİ TASARIM) -->
                                        <div class="hidden md:block p-1 space-y-1 text-white">
                                            <div class="flex items-start p-3 hover:bg-white/5 transition-colors duration-200 rounded-xl">
                                                <div class="w-8 h-8 bg-amber-400/20 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                <i class="fas fa-user-shield text-amber-400 text-lg"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-base mb-1">Doğrulanmış Uzmanlar</div>
                                                <div class="text-blue-200 text-sm">Kimlik, adres, referans kontrollü</div>
                                            </div>
                                        </div>

                                        <div class="flex items-start p-3 hover:bg-white/5 transition-colors duration-200 rounded-xl">
                                            <div class="w-8 h-8 bg-amber-400/20 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                <i class="fas fa-search-plus text-amber-400 text-lg"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-base mb-1">Sabıka Kaydı Sorgulama</div>
                                                <div class="text-blue-200 text-sm">Adli sicil kontrolü ve geçmiş sorgulaması</div>
                                            </div>
                                        </div>

                                        <div class="flex items-start p-3 hover:bg-white/5 transition-colors duration-200 rounded-xl">
                                            <div class="w-8 h-8 bg-amber-400/20 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                <i class="fas fa-money-check-alt text-amber-400 text-lg"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-base mb-1">Para İade Garantisi</div>
                                                <div class="text-blue-200 text-sm">Memnun kalmazsan tüm paran geri</div>
                                            </div>
                                        </div>

                                        <div class="flex items-start p-3 hover:bg-white/5 transition-colors duration-200 rounded-xl">
                                            <div class="w-8 h-8 bg-amber-400/20 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                <i class="fas fa-umbrella text-amber-400 text-lg"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-base mb-1">Sigorta Koruması</div>
                                                <div class="text-blue-200 text-sm">Hasar ve sorun durumunda sigorta tazminatı</div>
                                            </div>
                                        </div>

                                        <div class="flex items-start p-3 hover:bg-white/5 transition-colors duration-200 rounded-xl">
                                            <div class="w-8 h-8 bg-amber-400/20 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                <i class="fas fa-headset text-amber-400 text-lg"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-base mb-1">7/24 İzleme Sistemi</div>
                                                <div class="text-blue-200 text-sm">Sürekli takip, anında müdahale</div>
                                            </div>
                                        </div>

                                        <div class="flex items-start p-3 hover:bg-white/5 transition-colors duration-200 rounded-xl">
                                            <div class="w-8 h-8 bg-amber-400/20 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                <i class="fas fa-comments text-amber-400 text-lg"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-base mb-1">Danışmanlık Hizmeti</div>
                                                <div class="text-blue-200 text-sm">Uzman danışmanlardan ücretsiz rehberlik</div>
                                            </div>
                                        </div>

                                        <div class="flex items-start p-3 hover:bg-white/5 transition-colors duration-200 border-t border-blue-700 mt-4 pt-4 rounded-xl">
                                            <div class="w-8 h-8 bg-amber-400/30 rounded-lg flex items-center justify-center flex-shrink-0 mr-4 mt-1">
                                                <i class="fas fa-gavel text-amber-300 text-sm"></i>
                                            </div>
                                            <div class="flex-1">
                                                <div class="font-semibold text-white text-base mb-1">Hukuki Koruma</div>
                                                <div class="text-blue-200 text-sm">Sorun cikarsa avukat devreye girer</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>



                <!-- Service & Emergency Section -->
                <div class="bg-slate-100 text-gray-800 p-6 minimal-corner">
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 items-start">
                        <!-- Left: Service Call to Action -->
                        <div class="text-left">
                            <!-- Premium Badge -->
                            <div class="mb-6">
                                <div class="inline-flex items-center bg-amber-500 text-blue-900 px-4 py-2 rounded-full mb-4">
                                    <i class="fas fa-crown mr-2 text-sm"></i>
                                    <span class="font-bold text-sm">PREMİUM GÜVENLİK</span>
                                </div>
                            </div>
                            
                            <div class="mb-6">
                                <h3 class="text-4xl font-bold text-gray-800 mb-4 leading-tight">
                                    Güvenli Hizmet Almaya 
                                    <span class="text-amber-500">Başlayın</span>
                                </h3>
                                <p class="text-gray-600 text-xl leading-relaxed">Tüm güvencelerimizle korumalı, <span class="text-blue-600 font-semibold">risksiz</span> hizmet deneyimi</p>
                            </div>
                            
                            <div class="space-y-3">
                                <!-- Main Service Button -->
                                <button onclick="trackServiceRequest(); scrollToServices()" class="bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600 text-blue-900 px-6 py-3 rounded-lg font-semibold text-base inline-flex items-center space-x-2 transition-all duration-300 shadow-sm hover:shadow-md w-full justify-center">
                                    <i class="fas fa-arrow-right text-blue-900 text-sm"></i>
                                    <span>Hizmet Talep Et</span>
                                </button>
                                
                                <!-- Phone Button -->
                                <button onclick="scrollToServices()" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-semibold text-base inline-flex items-center justify-center space-x-2 transition-all duration-300 w-full">
                                    <i class="fas fa-comments text-white text-sm"></i>
                                    <span>Canlı Destek</span>
                                    <span class="text-sm opacity-80">7/24</span>
                                </button>
                                
                                <!-- Guarantee Notice -->
                                <div class="text-center text-gray-600 text-lg mt-4 font-medium">
                                    <i class="fas fa-shield-check text-green-500 mr-2 text-lg"></i>
                                    Tüm güvenceler yasal olarak garanti edilir
                                </div>
                            </div>
                        </div>

                        <!-- Right: Emergency Section -->
                        <div class="bg-white border border-gray-200 p-6 minimal-corner shadow-sm -mx-5 md:mx-0">
                            <!-- ACIL DURUM Badge -->
                            <div class="mb-4">
                                <div class="inline-flex items-center bg-amber-100 text-amber-800 px-3 py-1 rounded-full">
                                    <i class="fas fa-headset mr-2 text-sm"></i>
                                    <span class="font-medium text-sm">Destek Merkezi</span>
                                </div>
                            </div>
                            
                            <h4 class="text-xl font-bold text-gray-800 mb-3">Başka Yerden Aldığın Hizmette Sorun mu Yaşıyorsun?</h4>
                            <p class="text-gray-600 text-lg mb-4 leading-relaxed">Kandırıldın, paranı alamıyorsun veya işin yarım kaldı? Hemen yardım al.</p>
                            
                            <!-- Problem Icons -->
                            <div class="grid grid-cols-4 gap-2 mb-4">
                                <div class="text-center">
                                    <div class="bg-gray-50 border border-gray-200 p-3 minimal-corner mb-1">
                                        <i class="fas fa-user-times text-blue-500 text-lg"></i>
                                    </div>
                                    <div class="text-gray-700 text-xs">Kandirildin</div>
                                </div>
                                <div class="text-center">
                                    <div class="bg-gray-50 border border-gray-200 p-3 minimal-corner mb-1">
                                        <i class="fas fa-money-bill-wave text-blue-500 text-lg"></i>
                                    </div>
                                    <div class="text-gray-700 text-xs">Para Iadesi</div>
                                </div>
                                <div class="text-center">
                                    <div class="bg-gray-50 border border-gray-200 p-3 minimal-corner mb-1">
                                        <i class="fas fa-tools text-blue-500 text-lg"></i>
                                    </div>
                                    <div class="text-gray-700 text-xs">Yarim Is</div>
                                </div>
                                <div class="text-center">
                                    <div class="bg-gray-50 border border-gray-200 p-3 minimal-corner mb-1">
                                        <i class="fas fa-shield-alt text-blue-500 text-lg"></i>
                                    </div>
                                    <div class="text-gray-700 text-xs">Tehdit</div>
                                </div>
                            </div>
                            
                            <!-- Elegant Contact Button -->
                            <div class="text-center">
                                <button onclick="openWhatsAppChat()" class="inline-flex items-center bg-blue-600 hover:bg-blue-700 text-white font-medium px-6 py-3 rounded-lg transition-all duration-300 shadow-sm hover:shadow-md">
                                    <i class="fas fa-headset text-white text-sm mr-2"></i>
                                    <span>Hemen Danış</span>
                                </button>
                            </div>
                            
                            <div class="text-center text-gray-500 text-xs mt-2">
                                <i class="fas fa-clock mr-1"></i>
                                24/7 - Ücretsiz Danışma - Hukuki Destek
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>



        <!-- City Opportunities -->
        <section class="py-12 bg-white">
            <div class="max-w-7xl mx-auto px-6">
                <!-- Header with Premium Badge -->
                <div class="text-center mb-10">
                    <div class="mb-4">
                        <div class="inline-flex items-center bg-blue-100 text-blue-800 px-4 py-2 rounded-full">
                            <i class="fas fa-map-marker-alt mr-2 text-sm"></i>
                            <span class="font-medium text-sm">TÜRKİYE GENELİ HİZMET</span>
                        </div>
                    </div>
                    
                    <h2 class="text-3xl font-bold text-gray-800 mb-3 leading-tight">
                        Şehir Bazında <span class="text-blue-600">Hizmet İmkanları</span>
                    </h2>
                    <p class="text-gray-600 text-lg leading-relaxed">81 ilde güvenli hizmet alın, profesyonel çözümler</p>
                </div>

                <!-- Kompakt Şehir Kart Sistemi -->
                <div class="max-w-6xl mx-auto mt-8">
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                        
                        <!-- İSTANBUL -->
                        <div class="bg-gradient-to-br from-blue-600 to-blue-700 rounded-xl p-4 text-white shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 cursor-pointer" onclick="scrollToServices()">
                            <div class="flex items-center justify-between mb-3">
                                <h3 class="text-lg font-bold">İSTANBUL</h3>
                                <div class="w-3 h-3 bg-blue-300 rounded-full animate-pulse"></div>
                            </div>
                            <div class="space-y-2">
                                <div class="flex items-center justify-between">
                                    <span class="text-sm opacity-90">📍 Aktif Teknisyen</span>
                                    <span class="font-bold">347</span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm opacity-90">⚡ Yanıt Süresi</span>
                                    <span class="font-bold">8dk</span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm opacity-90">⭐ Memnuniyet</span>
                                    <span class="font-bold">4.9/5</span>
                                </div>
                                <div class="mt-3 pt-3 border-t border-blue-400">
                                    <div class="text-xs text-blue-200">🔥 En Popüler: TV Tamiri</div>
                                </div>
                            </div>
                        </div>

                        <!-- ANKARA -->
                        <div class="bg-gradient-to-br from-indigo-600 to-indigo-700 rounded-xl p-4 text-white shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 cursor-pointer" onclick="scrollToServices()">
                            <div class="flex items-center justify-between mb-3">
                                <h3 class="text-lg font-bold">ANKARA</h3>
                                <div class="w-3 h-3 bg-indigo-300 rounded-full animate-pulse"></div>
                            </div>
                            <div class="space-y-2">
                                <div class="flex items-center justify-between">
                                    <span class="text-sm opacity-90">📍 Aktif Teknisyen</span>
                                    <span class="font-bold">156</span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm opacity-90">⚡ Yanıt Süresi</span>
                                    <span class="font-bold">12dk</span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm opacity-90">⭐ Memnuniyet</span>
                                    <span class="font-bold">4.8/5</span>
                                </div>
                                <div class="mt-3 pt-3 border-t border-indigo-400">
                                    <div class="text-xs text-indigo-200">🔥 En Popüler: Kombi Servisi</div>
                                </div>
                            </div>
                        </div>

                        <!-- İZMİR -->
                        <div class="bg-gradient-to-br from-purple-600 to-purple-700 rounded-xl p-4 text-white shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 cursor-pointer" onclick="scrollToServices()">
                            <div class="flex items-center justify-between mb-3">
                                <h3 class="text-lg font-bold">İZMİR</h3>
                                <div class="w-3 h-3 bg-purple-300 rounded-full animate-pulse"></div>
                            </div>
                            <div class="space-y-2">
                                <div class="flex items-center justify-between">
                                    <span class="text-sm opacity-90">📍 Aktif Teknisyen</span>
                                    <span class="font-bold">89</span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm opacity-90">⚡ Yanıt Süresi</span>
                                    <span class="font-bold">15dk</span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm opacity-90">⭐ Memnuniyet</span>
                                    <span class="font-bold">4.7/5</span>
                                </div>
                                <div class="mt-3 pt-3 border-t border-purple-400">
                                    <div class="text-xs text-purple-200">🔥 En Popüler: Beyaz Eşya</div>
                                </div>
                            </div>
                        </div>

                        <!-- BURSA -->
                        <div class="bg-gradient-to-br from-blue-700 to-indigo-800 rounded-xl p-4 text-white shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 cursor-pointer" onclick="scrollToServices()">
                            <div class="flex items-center justify-between mb-3">
                                <h3 class="text-lg font-bold">BURSA</h3>
                                <div class="w-3 h-3 bg-blue-300 rounded-full animate-pulse"></div>
                            </div>
                            <div class="space-y-2">
                                <div class="flex items-center justify-between">
                                    <span class="text-sm opacity-90">📍 Aktif Teknisyen</span>
                                    <span class="font-bold">67</span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm opacity-90">⚡ Yanıt Süresi</span>
                                    <span class="font-bold">18dk</span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm opacity-90">⭐ Memnuniyet</span>
                                    <span class="font-bold">4.6/5</span>
                                </div>
                                <div class="mt-3 pt-3 border-t border-blue-400">
                                    <div class="text-xs text-blue-200">🔥 En Popüler: Teknik Onarım</div>
                                </div>
                            </div>
                        </div>

                    </div>

                    <!-- Alt Şehirler Satırı -->
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-4">
                        
                        <!-- ANTALYA -->
                        <div class="bg-gradient-to-br from-purple-600 to-indigo-700 rounded-lg p-3 text-white shadow-md hover:shadow-lg transition-all duration-300 hover:scale-105 cursor-pointer" onclick="scrollToServices()">
                            <div class="flex items-center justify-between mb-2">
                                <h4 class="text-sm font-bold">ANTALYA</h4>
                                <div class="w-2 h-2 bg-purple-300 rounded-full animate-pulse"></div>
                            </div>
                            <div class="grid grid-cols-3 gap-2 text-center">
                                <div>
                                    <div class="text-lg font-bold">54</div>
                                    <div class="text-xs opacity-80">Teknisyen</div>
                                </div>
                                <div>
                                    <div class="text-lg font-bold">20dk</div>
                                    <div class="text-xs opacity-80">Yanıt</div>
                                </div>
                                <div>
                                    <div class="text-lg font-bold">4.5</div>
                                    <div class="text-xs opacity-80">Puan</div>
                                </div>
                            </div>
                            <div class="text-xs text-purple-200 mt-2 text-center">Klima Bakımı</div>
                        </div>

                        <!-- ADANA -->
                        <div class="bg-gradient-to-br from-indigo-600 to-purple-700 rounded-lg p-3 text-white shadow-md hover:shadow-lg transition-all duration-300 hover:scale-105 cursor-pointer" onclick="scrollToServices()">
                            <div class="flex items-center justify-between mb-2">
                                <h4 class="text-sm font-bold">ADANA</h4>
                                <div class="w-2 h-2 bg-indigo-300 rounded-full animate-pulse"></div>
                            </div>
                            <div class="grid grid-cols-3 gap-2 text-center">
                                <div>
                                    <div class="text-lg font-bold">43</div>
                                    <div class="text-xs opacity-80">Teknisyen</div>
                                </div>
                                <div>
                                    <div class="text-lg font-bold">22dk</div>
                                    <div class="text-xs opacity-80">Yanıt</div>
                                </div>
                                <div>
                                    <div class="text-lg font-bold">4.4</div>
                                    <div class="text-xs opacity-80">Puan</div>
                                </div>
                            </div>
                            <div class="text-xs text-indigo-200 mt-2 text-center">Beyaz Eşya</div>
                        </div>

                        <!-- KONYA -->
                        <div class="bg-gradient-to-br from-blue-600 to-purple-600 rounded-lg p-3 text-white shadow-md hover:shadow-lg transition-all duration-300 hover:scale-105 cursor-pointer" onclick="scrollToServices()">
                            <div class="flex items-center justify-between mb-2">
                                <h4 class="text-sm font-bold">KONYA</h4>
                                <div class="w-2 h-2 bg-blue-300 rounded-full animate-pulse"></div>
                            </div>
                            <div class="grid grid-cols-3 gap-2 text-center">
                                <div>
                                    <div class="text-lg font-bold">38</div>
                                    <div class="text-xs opacity-80">Teknisyen</div>
                                </div>
                                <div>
                                    <div class="text-lg font-bold">25dk</div>
                                    <div class="text-xs opacity-80">Yanıt</div>
                                </div>
                                <div>
                                    <div class="text-lg font-bold">4.3</div>
                                    <div class="text-xs opacity-80">Puan</div>
                                </div>
                            </div>
                            <div class="text-xs text-blue-200 mt-2 text-center">Enerji & Isıtma</div>
                        </div>

                    </div>


                </div>
                
            </div>
        </section>

        <!-- Live Job Feed Section -->
        <section class="py-4 bg-gradient-to-br from-blue-900 via-purple-900 to-blue-800 text-white">
            <div class="max-w-7xl mx-auto px-6">
                <div class="text-center mb-3">
                    <h2 class="text-lg font-bold text-white mb-1">
                        <i class="fas fa-broadcast-tower mr-2 text-amber-400"></i>
                        CANLI HİZMET FIRSATLARI
                    </h2>
                    <p class="text-blue-200 text-sm">Şu anda talep edilen hizmetler - Gerçek zamanlı güncellemeler</p>
                </div>
                
                <div class="max-w-4xl mx-auto">
                    <div class="bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-3 min-h-[200px]">
                        <div class="flex items-center justify-between mb-2">
                            <div class="flex items-center space-x-2">
                                <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                                <span class="text-white font-medium text-xs">Canlı Yayın</span>
                            </div>
                            <div class="text-white/60 text-xs">Son güncelleme: Şimdi</div>
                        </div>
                        
                        <div id="job-feed" class="space-y-0.5 overflow-y-auto" style="max-height: 160px;">
                            <!-- Canlı job feed buraya eklenecek -->
                            <div class="text-center text-white/60 py-3">
                                <i class="fas fa-spinner fa-spin text-sm mb-1"></i>
                                <div class="text-xs">Canli hizmet firsatlari yukleniyor...</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Benefits Section -->


        </section>

        <!-- Benefits Section -->



        <!-- Customer Benefits Section -->
        <section class="py-20 bg-white">
            <div class="max-w-7xl mx-auto px-6">
                <!-- Customer Benefits moved after testimonials -->
                <div class="mb-16">
                    <div class="text-center mb-12">
                        <div class="section-divider w-20 mx-auto mb-6"></div>
                        <h2 class="text-3xl font-bold mb-4 tracking-tight text-blue-900">MÜŞTERİ GÜVENCELERİ</h2>
                        <p class="text-blue-600 font-medium">Garantor360 ile hizmet almanın avantajları</p>
                    </div>

                    <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
                        <!-- Odeme Guvencesi -->
                        <div class="bg-blue-50 p-4 minimal-corner text-center border border-blue-200 hover:border-amber-400 hover:bg-blue-100 transition-all duration-300 group">
                            <div class="w-8 h-8 bg-amber-500 minimal-corner mx-auto mb-3 flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                                <i class="fas fa-piggy-bank text-white text-lg"></i>
                            </div>
                            <h3 class="font-bold mb-2 text-sm text-amber-600">ÖDEME GÜVENCESİ</h3>
                            <p class="text-blue-700 text-xs leading-relaxed">Para iade garantisi</p>
                        </div>

                        <!-- Iscilik Garantisi -->
                        <div class="bg-blue-50 p-4 minimal-corner text-center border border-blue-200 hover:border-amber-400 hover:bg-blue-100 transition-all duration-300 group">
                            <div class="w-8 h-8 bg-green-500 minimal-corner mx-auto mb-3 flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                                <i class="fas fa-tools text-white text-lg"></i>
                            </div>
                            <h3 class="font-bold mb-2 text-sm text-green-600">İŞÇİLİK GARANTİSİ</h3>
                            <p class="text-blue-700 text-xs leading-relaxed">6 ay garanti</p>
                        </div>

                        <!-- Dogrulanmis Ustalar -->
                        <div class="bg-blue-50 p-4 minimal-corner text-center border border-blue-200 hover:border-amber-400 hover:bg-blue-100 transition-all duration-300 group">
                            <div class="w-8 h-8 bg-blue-500 minimal-corner mx-auto mb-3 flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                                <i class="fas fa-user-shield text-white text-lg"></i>
                            </div>
                            <h3 class="font-bold mb-2 text-sm text-blue-600">DOGRULANMIS USTALAR</h3>
                            <p class="text-blue-700 text-xs leading-relaxed">Kimlik kontrolu</p>
                        </div>

                        <!-- Sigorta Korumasi -->
                        <div class="bg-blue-50 p-4 minimal-corner text-center border border-blue-200 hover:border-amber-400 hover:bg-blue-100 transition-all duration-300 group">
                            <div class="w-8 h-8 bg-purple-500 minimal-corner mx-auto mb-3 flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                                <i class="fas fa-umbrella text-white text-lg"></i>
                            </div>
                            <h3 class="font-bold mb-2 text-sm text-purple-600">SIGORTA KORUMASI</h3>
                            <p class="text-blue-700 text-xs leading-relaxed">Hasar tazminati</p>
                        </div>

                        <!-- Hukuki Destek -->
                        <div class="bg-blue-50 p-4 minimal-corner text-center border border-blue-200 hover:border-amber-400 hover:bg-blue-100 transition-all duration-300 group">
                            <div class="w-8 h-8 bg-orange-500 minimal-corner mx-auto mb-3 flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                                <i class="fas fa-gavel text-white text-lg"></i>
                            </div>
                            <h3 class="font-bold mb-2 text-sm text-orange-600">HUKUKI DESTEK</h3>
                            <p class="text-blue-700 text-xs leading-relaxed">Avukat destegi</p>
                        </div>

                        <!-- 7/24 Destek -->
                        <div class="bg-blue-50 p-4 minimal-corner text-center border border-blue-200 hover:border-amber-400 hover:bg-blue-100 transition-all duration-300 group">
                            <div class="w-8 h-8 bg-pink-500 minimal-corner mx-auto mb-3 flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                                <i class="fas fa-headset text-white text-lg"></i>
                            </div>
                            <h3 class="font-bold mb-2 text-sm text-pink-600">7/24 DESTEK</h3>
                            <p class="text-blue-700 text-xs leading-relaxed">Surekli destek</p>
                        </div>
                    </div>
                </div>


            </div>
        </section>


        <!-- Service Request Form -->
        <section class="py-8 -mt-6 lg:mt-0 bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 text-white" id="hizmet-al">
            <div class="max-w-6xl mx-auto px-6">
                <div class="text-center mb-3">
                    <div class="inline-flex items-center bg-white/10 backdrop-blur-sm border border-white/20 px-4 py-2 rounded-full mb-2">
                        <i class="fas fa-shield-check text-green-300 mr-2"></i>
                        <span class="text-white font-semibold text-sm">%100 GÜVENLI HIZMET BASVURUSU</span>
                    </div>
                    <h2 class="text-2xl lg:text-3xl font-bold mb-2 text-green-300 tracking-tight">
                        GÜVENLİ HİZMET ALMAK ARTIK ÇOK KOLAY
                    </h2>
                </div>

                <div class="flex flex-col lg:flex-row gap-6 items-start" style="max-width: 100%;">
                    <!-- Form area - increased width by 50px -->
                    <!-- Service Request Form - LEFT SIDE - Width increased by 50px -->
                    <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-2xl p-4 shadow-lg flex-1 lg:max-w-[calc(100%-330px)]" style="min-width: 0;">
                        <form id="serviceRequestForm" class="space-y-3">


                            <!-- Location Information -->
                            <div data-step="1" class="form-step">
                                <div class="flex items-center justify-between mb-0.5">
                                    <h4 class="text-base font-bold text-white">1 Konum Bilgileri</h4>
                                    <div id="step1Reward" class="hidden bg-white/20 text-purple-200 px-2 py-1 rounded text-xs font-bold">
                                        <i class="fas fa-map-marker-alt mr-1"></i>En yakin ustalar bulunuyor...
                                    </div>
                                </div>
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-2">
                                    <div>
                                        <label class="block text-xs font-bold text-purple-200 mb-0.5">
                                            <i class="fas fa-map-marker-alt mr-1"></i>Sehir *
                                        </label>
                                        <select id="customerCity" name="customerCity" required 
                                                class="w-full p-1.5 bg-white/20 border border-white/30 rounded-lg text-white focus:border-purple-300 focus:outline-none transition duration-200 text-sm city-select"
                                                onchange="updateFormProgress(); validateStep(1); showNearbyExperts(); handleCityChange();">
                                            <option value="" class="bg-white text-gray-800">Şehir Seçin</option>
                                            <option value="İstanbul" class="bg-white text-gray-800">İstanbul</option>
                                            <option value="Ankara" class="bg-white text-gray-800">Ankara</option>
                                            <option value="İzmir" class="bg-white text-gray-800">İzmir</option>
                                            <option value="Bursa" class="bg-white text-gray-800">Bursa</option>
                                            <option value="Antalya" class="bg-white text-gray-800">Antalya</option>
                                            <option value="Adana" class="bg-white text-gray-800">Adana</option>
                                            <option value="Gaziantep" class="bg-white text-gray-800">Gaziantep</option>
                                            <option value="Konya" class="bg-white text-gray-800">Konya</option>
                                            <option value="Mersin" class="bg-white text-gray-800">Mersin</option>
                                            <option value="Kayseri" class="bg-white text-gray-800">Kayseri</option>
                                            <option value="Eskişehir" class="bg-white text-gray-800">Eskişehir</option>
                                            <option value="Diyarbakır" class="bg-white text-gray-800">Diyarbakır</option>
                                            <option value="Samsun" class="bg-white text-gray-800">Samsun</option>
                                            <option value="Denizli" class="bg-white text-gray-800">Denizli</option>
                                            <option value="Şanlıurfa" class="bg-white text-gray-800">Şanlıurfa</option>
                                            <option value="Adapazarı" class="bg-white text-gray-800">Adapazarı</option>
                                            <option value="Malatya" class="bg-white text-gray-800">Malatya</option>
                                            <option value="Kahramanmaraş" class="bg-white text-gray-800">Kahramanmaraş</option>
                                            <option value="Erzurum" class="bg-white text-gray-800">Erzurum</option>
                                            <option value="Van" class="bg-white text-gray-800">Van</option>
                                            <option value="Batman" class="bg-white text-gray-800">Batman</option>
                                            <option value="Elazığ" class="bg-white text-gray-800">Elazığ</option>
                                            <option value="İzmit" class="bg-white text-gray-800">İzmit</option>
                                            <option value="Manisa" class="bg-white text-gray-800">Manisa</option>
                                            <option value="Sivas" class="bg-white text-gray-800">Sivas</option>
                                            <option value="Gebze" class="bg-white text-gray-800">Gebze</option>
                                            <option value="Balıkesir" class="bg-white text-gray-800">Balıkesir</option>
                                            <option value="Tarsus" class="bg-white text-gray-800">Tarsus</option>
                                            <option value="Çorum" class="bg-white text-gray-800">Çorum</option>
                                            <option value="Diğer" class="bg-white text-gray-800">Diğer (Kendim Yazacağım)</option>
                                        </select>
                                        <!-- Custom City Input (hidden by default) -->
                                        <input type="text" id="customCityInput" 
                                               class="w-full p-1.5 bg-white/20 border border-white/30 rounded-lg text-white placeholder-purple-200 focus:border-purple-300 focus:outline-none transition duration-200 text-sm mt-2 hidden"
                                               placeholder="Şehrinizi yazın (örn: Trabzon, Ordu, vb.)"
                                               onchange="updateFormProgress();">
                                        <div id="cityValidation" class="text-xs mt-1 hidden">
                                            <span class="text-purple-200"><i class="fas fa-search mr-1"></i>Sehrinizde uzman araniyor...</span>
                                        </div>
                                    </div>
                                    <div>
                                        <label class="block text-xs font-bold text-purple-200 mb-0.5">
                                            <i class="fas fa-building mr-1"></i>Ilce
                                        </label>
                                        <input type="text" id="customerDistrict" name="customerDistrict" 
                                               class="w-full p-2 bg-white/20 border border-white/30 rounded-lg text-white placeholder-purple-200 focus:border-purple-300 focus:outline-none transition duration-200 text-sm"
                                               placeholder="Orn: Kadikoy"
                                               onchange="updateFormProgress();">
                                    </div>
                                </div>
                            </div>

                            <!-- Service Category & Contact Info -->
                            <div data-step="2" class="form-step">
                                <div class="flex items-center justify-between mb-0.5">
                                    <h4 class="text-base font-bold text-white">2 Hizmet Kategorisi ve Iletisim</h4>
                                    <div id="step2Reward" class="hidden bg-white/20 text-purple-200 px-2 py-1 rounded text-xs font-bold">
                                        <i class="fas fa-tools mr-1"></i>Fiyat hesaplaniyor...
                                    </div>
                                </div>
                                <div class="grid grid-cols-1 lg:grid-cols-3 gap-2">
                                    <!-- Hizmet Kategorisi - Kisaltilmis -->
                                    <div class="lg:col-span-1">
                                        <label class="block text-xs font-bold text-purple-200 mb-0.5">
                                            <i class="fas fa-tools mr-1"></i>Hizmet Kategorisi *
                                        </label>
                                        <select id="serviceCategory" name="serviceCategory" required 
                                                class="w-full p-1.5 text-sm bg-white/20 border border-white/30 rounded-lg text-white focus:border-purple-300 focus:outline-none transition duration-200 service-category-select"
                                                onchange="updateFormProgress(); validateStep(2); showEstimatedPrice();">
                                            <option value="" class="bg-white text-gray-800">Kategori Secin</option>
                                    
                                    <!-- DETAYLI KATEGORİLER -->
                                    
                                    <!-- TV TAMİRİ -->
                                    <optgroup label="📺 TV TAMİRİ">
                                        <option value="TV LCD">LCD TV Tamiri</option>
                                        <option value="TV LED">LED TV Tamiri</option>
                                        <option value="TV OLED">OLED TV Tamiri</option>
                                        <option value="TV Plazma">Plazma TV Tamiri</option>
                                        <option value="TV Smart">Smart TV Tamiri</option>
                                    </optgroup>
                                    
                                    <!-- PC TAMİRİ -->
                                    <optgroup label="💻 PC TAMİRİ">
                                        <option value="PC Masaüstü">Masaüstü PC Tamiri</option>
                                        <option value="PC Laptop">Laptop Tamiri</option>
                                        <option value="PC Monitör">Monitör Tamiri</option>
                                        <option value="PC Gaming">Gaming PC Tamiri</option>
                                        <option value="PC İş">İş Bilgisayarı Tamiri</option>
                                    </optgroup>
                                    
                                    <!-- BEYAZ EŞYA -->
                                    <optgroup label="🏠 BEYAZ EŞYA">
                                        <option value="Buzdolabı">Buzdolabı Tamiri</option>
                                        <option value="Çamaşır Makinesi">Çamaşır Makinesi Tamiri</option>
                                        <option value="Bulaşık Makinesi">Bulaşık Makinesi Tamiri</option>
                                        <option value="Fırın">Fırın Tamiri</option>
                                        <option value="Derin Dondurucu">Derin Dondurucu Tamiri</option>
                                    </optgroup>
                                    
                                    <!-- KLİMA SERVİSİ -->
                                    <optgroup label="❄️ KLİMA SERVİSİ">
                                        <option value="Klima Montaj">Klima Montajı</option>
                                        <option value="Klima Bakım">Klima Bakım & Temizlik</option>
                                        <option value="Klima Tamiri">Klima Tamiri</option>
                                        <option value="Klima Split">Split Klima</option>
                                        <option value="Klima VRV">VRV Sistem</option>
                                    </optgroup>
                                    
                                    <!-- KÜÇÜK EV ALETLERİ -->
                                    <optgroup label="🔌 KÜÇÜK EV ALETLERİ">
                                        <option value="Mikrodalga">Mikrodalga Tamiri</option>
                                        <option value="Blender">Blender & Mutfak Robotları</option>
                                        <option value="Ütü">Ütü Tamiri</option>
                                        <option value="Süpürge">Elektrikli Süpürge</option>
                                        <option value="Kahve Makinesi">Kahve Makinesi</option>
                                    </optgroup>
                                    
                                    <!-- ELEKTRONİK -->
                                    <optgroup label="📱 ELEKTRONİK">
                                        <option value="Telefon">Telefon Tamiri</option>
                                        <option value="Tablet">Tablet Tamiri</option>
                                        <option value="iPhone">iPhone Tamiri</option>
                                        <option value="Samsung">Samsung Tamiri</option>
                                        <option value="Kulaklık">Kulaklık Tamiri</option>
                                    </optgroup>
                                    
                                    <!-- DİĞER -->
                                    <optgroup label="🔧 DİĞER">
                                        <option value="Diğer">Diğer Hizmetler</option>
                                    </optgroup>
                                        </select>
                                        <div id="categoryValidation" class="text-xs mt-1 hidden">
                                            <span class="text-purple-200"><i class="fas fa-calculator mr-1"></i>Tahmini fiyat hesaplaniyor...</span>
                                        </div>
                                    </div>
                                    
                                    <!-- Isim Soyisim -->
                                    <div>
                                        <label class="block text-xs font-bold text-purple-200 mb-0.5">
                                            <i class="fas fa-user mr-1"></i>Isim Soyisim *
                                        </label>
                                        <input type="text" id="customerName" name="customerName" required 
                                               class="w-full p-2 bg-white/20 border border-white/30 rounded-lg text-white placeholder-purple-200 focus:border-purple-300 focus:outline-none transition duration-200 text-sm"
                                               placeholder="Orn: Ahmet Yilmaz"
                                               onchange="updateFormProgress();">
                                    </div>
                                    
                                    <!-- Telefon -->
                                    <div>
                                        <label class="block text-xs font-bold text-purple-200 mb-0.5">
                                            <i class="fas fa-phone mr-1"></i>Telefon *
                                        </label>
                                        <input type="tel" id="customerPhone" name="customerPhone" required 
                                               class="w-full p-2 bg-white/20 border border-white/30 rounded-lg text-white placeholder-purple-200 focus:border-purple-300 focus:outline-none transition duration-200 text-sm"
                                               placeholder="Orn: 0532 123 45 67"
                                               onchange="updateFormProgress();">
                                    </div>
                                </div>
                            </div>

                            <!-- Problem Description -->
                            <div data-step="3" class="form-step">
                                <div class="flex items-center justify-between mb-0.5">
                                    <h4 class="text-base font-bold text-white">3 Sorun Detayi</h4>
                                    <div id="step3Reward" class="hidden bg-white/20 text-purple-200 px-2 py-1 rounded text-xs font-bold">
                                        <i class="fas fa-brain mr-1"></i>AI analiz ediliyor...
                                    </div>
                                </div>
                                <div>
                                    <label class="block text-xs font-bold text-purple-200 mb-0.5">
                                        <i class="fas fa-edit mr-1"></i>Sorun Detayi *
                                    </label>
                                    <textarea id="problemDescription" name="problemDescription" required rows="3" 
                                              class="w-full p-1.5 text-sm bg-white/20 border border-white/30 rounded-lg text-white placeholder-purple-200 focus:border-purple-300 focus:outline-none transition duration-200"
                                              placeholder="Sorununuzu detayli sekilde aciklayin. Orn: Camasir makinesi calisiyor ama su almiyor, sesli calisiyor..."
                                              onchange="updateFormProgress(); validateStep(3); analyzeDescription();"></textarea>
                                    <div id="descriptionValidation" class="text-xs mt-1 hidden">
                                        <span class="text-orange-600"><i class="fas fa-robot mr-1"></i>Aciklama AI ile analiz ediliyor...</span>
                                    </div>
                                    <div class="text-sm text-yellow-300 mt-2 font-medium">
                                        <span id="charCount">0</span>/500 karakter - Daha detayli aciklama daha hizli cozum!
                                    </div>
                                </div>
                            </div>

                            <!-- Urgency Level -->
                            <div>
                                <label class="block text-sm font-bold text-white mb-2">
                                    <i class="fas fa-clock mr-2"></i>Aciliyet Durumu
                                </label>
                                <div class="flex flex-wrap justify-between">
                                    <label class="flex items-center justify-center p-1.5 border-2 border-purple-300 sharp-corner cursor-pointer hover:border-yellow-400 transition duration-200 bg-white/10 backdrop-blur-sm" style="width: calc(33.333% - 10px); margin: 0 2px;">
                                        <input type="radio" name="urgency" value="normal" checked class="mr-1">
                                        <span class="text-white font-medium text-xs">Normal</span>
                                    </label>
                                    <label class="flex items-center justify-center p-1.5 border-2 border-purple-300 sharp-corner cursor-pointer hover:border-yellow-400 transition duration-200 bg-white/10 backdrop-blur-sm" style="width: calc(33.333% - 10px); margin: 0 2px;">
                                        <input type="radio" name="urgency" value="urgent" class="mr-1">
                                        <span class="text-white font-medium text-xs">Acil</span>
                                    </label>
                                    <label class="flex items-center justify-center p-1.5 border-2 border-purple-300 sharp-corner cursor-pointer hover:border-yellow-400 transition duration-200 bg-white/10 backdrop-blur-sm" style="width: calc(33.333% - 10px); margin: 0 2px;">
                                        <input type="radio" name="urgency" value="emergency" class="mr-1">
                                        <span class="text-white font-medium text-xs">Çok Acil</span>
                                    </label>
                                </div>
                            </div>

                            <!-- Contact Preference -->
                            <!-- Submit Button Only -->
                            <div class="text-center pt-1">
                                <!-- Talep Gonder Butonu - En Üstte Ortalı -->
                                <button type="submit" 
                                        class="bg-gradient-to-r from-amber-500 to-orange-500 hover:from-amber-600 hover:to-orange-600 text-white px-8 py-2 minimal-corner font-bold text-lg transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl">
                                    <i class="fas fa-paper-plane mr-2"></i>
                                    TALEBI GONDER
                                </button>
                                
                                <!-- 15px Space + Status Info -->
                                <div style="margin-top: 15px;" class="text-center space-y-2">
                                    <p class="text-green-500 font-bold text-base" style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                                        <i class="fas fa-clock mr-2 text-blue-500"></i>
                                        Ortalama geri donus suresi: 10 dk
                                    </p>
                                    <p id="dynamicStatsText" class="floating-stats-text font-bold text-base" style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; transition: all 0.3s ease;">
                                        <i class="fas fa-chart-line mr-2 text-blue-400"></i>
                                        <strong>Aktif uzman sayisi: 847</strong>
                                    </p>
                                    <p id="dynamicActivityText" class="floating-activity-text font-bold text-base" style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; transition: all 0.3s ease;">
                                        <i class="fas fa-user-check mr-2 text-green-400"></i>
                                        <strong>Ahmet K. elektrik hizmeti aldi</strong>
                                    </p>
                                </div>
                                

                            </div>

                            <!-- Dynamic Notifications Collector -->
                            <!-- Floating Live Notifications Area -->
                            <div id="floating-notification-area" class="mt-2 pt-2 min-h-8 relative">
                                <div id="live-notification-display" class="text-center">
                                    <!-- Live notifications will appear here as floating text -->
                                </div>
                            </div>

                        </form>

                        <!-- Form Status Messages -->
                        <div id="formMessages" class="mt-2 hidden">
                            <div id="successMessage" class="bg-emerald-50 border-2 border-emerald-200 p-4 minimal-corner text-emerald-800 hidden">
                                <i class="fas fa-check-circle mr-2"></i>
                                <strong>Basarili!</strong> Talebiniz alindi. En kisa surede size donus yapilacak.
                            </div>
                            <div id="errorMessage" class="bg-red-50 border-2 border-red-200 p-4 minimal-corner text-red-800 hidden">
                                <i class="fas fa-exclamation-triangle mr-2"></i>
                                <strong>Hata!</strong> Talep gonderilirken bir sorun olustu. Lutfen tekrar deneyin.
                            </div>
                        </div>
                        




                        

                    </div>

                    <!-- Contact Options Sidebar - RIGHT SIDE - Width reduced by 50px -->
                    <div class="space-y-2 w-full md:w-auto md:max-w-none max-w-xs mx-auto px-3 md:px-0" style="flex: 0 0 auto; width: auto;"> 
                        <style>@media (min-width: 768px) { div[style*='margin-left: -18px'] { margin-left: 0 !important; margin-right: 0 !important; } }</style>
                        <!-- AI Live Chat - Compact -->
                        <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white p-2 relative overflow-hidden">
                            <div class="absolute top-0 right-0 w-10 h-10 bg-white/10 rounded-full -translate-y-6 translate-x-6"></div>
                            <div class="mb-1 relative z-10 text-center">
                                <div class="text-lg font-bold mb-1">
                                    <span class="text-white">Garantor</span><span class="text-amber-400">360°</span>
                                </div>
                                <h3 class="text-base font-bold text-white">
                                    <i class="fas fa-headset mr-1"></i>
                                    TEMSİLCİSİ
                                </h3>
                            </div>
                            <p class="text-sm mb-1 text-purple-100 relative z-10">
                                Sorularınızı anında cevaplayalım! <span class="text-yellow-300 font-bold">7/24</span> aktif temsilci.
                            </p>
                            <button onclick="toggleAIChat()" 
                                    class="w-full flex items-center justify-center p-1.5 bg-white/20 rounded-lg hover:bg-white/30 transition duration-200 relative z-10">
                                <i class="fas fa-comments mr-2"></i>
                                <div>
                                    <div class="font-bold text-base">Canlı Sohbet Başlat</div>
                                    <div class="text-sm opacity-90">Ücretsiz & Anında</div>
                                </div>
                            </button>
                        </div>

                        <!-- Quick Contact - Compact -->
                        <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl text-white p-2">
                            <h3 class="text-base font-bold mb-1 text-center">
                                <i class="fas fa-phone mr-1 text-yellow-400"></i>
                                <span class="fast-contact-text">HIZLI İLETİŞİM</span>
                            </h3>
                            <div class="space-y-1">
                                <a href="tel:+905001234567" onclick="trackPhoneCall('+905001234567')" 
                                   class="flex items-center p-1.5 bg-white/20 rounded-lg hover:bg-purple-600 transition duration-200">
                                    <i class="fas fa-phone mr-2"></i>
                                    <div>
                                        <div class="font-bold text-base">0 500 123 45 67</div>
                                        <div class="text-sm opacity-90">Anında Destek</div>
                                    </div>
                                </a>
                                <button onclick="showProcessFlow()" 
                                        class="flex items-center p-1.5 bg-blue-600 rounded-lg hover:bg-blue-700 transition duration-200 w-full">
                                    <i class="fas fa-list-ol mr-2"></i>
                                    <div>
                                        <div class="font-bold text-base">Süreç Nasıl İlerliyor</div>
                                        <div class="text-sm opacity-90">Adım Adım Rehber</div>
                                    </div>
                                </button>
                            </div>
                        </div>

                        <!-- Compact Security Guarantee -->
                        <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-1.5">
                            <div class="text-center mb-1">
                                <div class="w-4 h-4 bg-white/20 rounded mx-auto mb-1 flex items-center justify-center">
                                    <i class="fas fa-shield-alt text-purple-300 text-xs"></i>
                                </div>
                                <h4 class="text-sm font-bold text-white mb-1">
                                    GÜVENLİK GARANTİLERİ
                                </h4>
                            </div>
                            
                            
                            <!-- Dinamik Güvenlik Bilgileri -->
                            <div class="flex items-center p-1.5 bg-white/20 rounded mb-1">
                                <i id="securityIcon" class="fas fa-tools text-blue-300 mr-1 text-sm"></i>
                                <div>
                                    <div id="securityTitle" class="text-sm font-semibold text-white">İŞÇİLİK GARANTİSİ</div>
                                    <div id="securityDetail" class="text-sm text-purple-200">6 ay garanti</div>
                                </div>
                            </div>
                            
                            <!-- Risk-Free Badge -->
                            <div class="p-1.5 bg-green-500/20 border border-green-300/30 rounded text-center">
                                <p class="text-sm font-semibold text-green-300">
                                    <i class="fas fa-shield-alt mr-1"></i>
                                    %100 Risk-Free Hizmet
                                </p>
                            </div>
                        </div>

                        <!-- FAQ Section - Compact -->
                        <div class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-1.5">
                            <div class="text-center mb-1">
                                <div class="w-4 h-4 bg-white/20 rounded mx-auto mb-1 flex items-center justify-center">
                                    <i class="fas fa-question-circle text-amber-300 text-xs"></i>
                                </div>
                                <h4 class="text-sm font-bold text-white mb-1">
                                    BİLGİ MERKEZİ
                                </h4>
                            </div>
                            
                            <!-- FAQ Content -->
                            <div class="flex items-center p-1.5 bg-white/20 rounded mb-1">
                                <i class="fas fa-star text-amber-300 mr-1 text-sm"></i>
                                <div>
                                    <div class="text-sm font-semibold text-white">GARANTOR360 FAYDALARI</div>
                                    <div class="text-sm text-purple-200">Detaylı bilgiler</div>
                                </div>
                            </div>
                            
                            <!-- FAQ Button -->
                            <div class="p-1.5 bg-gradient-to-r from-blue-600 to-purple-600 rounded text-center">
                                <a href="/sss" target="_blank" class="text-sm font-semibold text-white hover:text-white">
                                    <i class="fas fa-external-link-alt mr-1"></i>
                                    SSS Sayfasını Gör
                                </a>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </section>


        <!-- AI Chat Modal/Widget -->
        <div id="aiChatWidget" class="fixed bottom-6 right-6 z-50 hidden">
            <div class="bg-white border-2 border-blue-200 minimal-corner shadow-2xl w-96 max-w-full">
                <!-- Chat Header -->
                <div class="bg-gradient-to-r from-purple-600 to-blue-600 text-white p-4 flex items-center justify-between">
                    <div class="flex items-center">
                        <div class="w-8 h-8 bg-amber-400 sharp-corner flex items-center justify-center mr-3">
                            <i class="fas fa-robot text-blue-900 text-sm"></i>
                        </div>
                        <div>
                            <div class="font-bold text-sm">Garantor AI Asistan</div>
                            <div class="text-xs opacity-90">
                                <span class="inline-block w-2 h-2 bg-green-400 rounded-full mr-1"></span>
                                Cevrimici
                            </div>
                        </div>
                    </div>
                    <button onclick="toggleAIChat()" class="text-white/80 hover:text-white">
                        <i class="fas fa-times"></i>
                    </button>
                </div>

                <!-- Chat Messages -->
                <div id="chatMessages" class="h-80 overflow-y-auto p-4 bg-slate-50">
                    <!-- Welcome Message -->
                    <div class="flex items-start mb-4">
                        <div class="w-8 h-8 bg-purple-600 sharp-corner flex items-center justify-center mr-3 mt-1">
                            <i class="fas fa-robot text-white text-sm"></i>
                        </div>
                        <div class="bg-white p-3 minimal-corner shadow-sm max-w-xs">
                            <div class="text-sm text-slate-800">
                                Merhaba! Ben Garantor360 yapay zeka asistaniyim.  
                                <br><br>
                                Size nasil yardimci olabilirim? Hizmet kategorileri, fiyatlar veya surecler hakkinda sorularinizi yanitlayabilirim.
                            </div>
                            <div class="text-xs text-slate-500 mt-2">Az once</div>
                        </div>
                    </div>

                    <!-- Quick Actions -->
                    <div class="mb-4">
                        <div class="text-xs text-slate-500 mb-2 text-center">Hizli Sorular:</div>
                        <div class="flex flex-wrap gap-2">
                            <button onclick="sendQuickMessage('Televizyon tamiri ne kadar surer?')" 
                                    class="bg-blue-100 text-blue-700 px-3 py-1 sharp-corner text-xs hover:bg-blue-200 transition duration-200">
                                TV tamiri suresi?
                            </button>
                            <button onclick="sendQuickMessage('Fiyatlar nasil belirleniyor?')" 
                                    class="bg-blue-100 text-blue-700 px-3 py-1 sharp-corner text-xs hover:bg-blue-200 transition duration-200">
                                Fiyat hesaplama?
                            </button>
                            <button onclick="sendQuickMessage('Odeme nasil yapiliyor?')" 
                                    class="bg-blue-100 text-blue-700 px-3 py-1 sharp-corner text-xs hover:bg-blue-200 transition duration-200">
                                Odeme sistemi?
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Chat Input -->
                <div class="border-t border-slate-200 p-4">
                    <form id="chatForm" class="flex space-x-2">
                        <input type="text" id="chatInput" 
                               placeholder="Mesajinizi yazin..." 
                               class="flex-1 p-2 border border-slate-300 sharp-corner text-sm focus:border-blue-500 focus:outline-none">
                        <button type="submit" 
                                class="bg-blue-600 text-white px-4 py-2 sharp-corner hover:bg-blue-700 transition duration-200">
                            <i class="fas fa-paper-plane text-sm"></i>
                        </button>
                    </form>
                    <div class="text-xs text-slate-500 mt-2 text-center">
                        <i class="fas fa-shield-alt mr-1"></i>
                        Yapay zeka destekli guvenli sohbet
                    </div>
                </div>
            </div>
        </div>

        <!-- AI Chat Float Button (when chat closed) -->
        <div id="aiChatButton" class="fixed bottom-6 right-6 z-40">
            <button onclick="toggleAIChat()" 
                    class="bg-gradient-to-br from-purple-600 to-blue-600 text-white w-16 h-16 rounded-full shadow-xl hover:shadow-2xl transition-all duration-300 transform hover:scale-110 group overflow-hidden border-2 border-white/20 relative">
                <img src="https://cdn1.genspark.ai/user-upload-image/5_generated/bd557d37-bf75-476f-9e79-266e782c5afa" 
                     alt="Danışman" 
                     class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-300">
                <!-- Küçük yeşil LED ışığı görselin içinde -->
                <div class="absolute top-2 right-2 w-2 h-2 bg-green-400 rounded-full animate-pulse shadow-lg"></div>
                <div class="absolute top-2 right-2 w-2 h-2 bg-green-300 rounded-full animate-ping"></div>
            </button>
        </div>

        <!-- Minimalist Mobile App Section for Customers -->
        <section class="py-16 bg-gradient-to-r from-blue-50 to-slate-50">
            <div class="max-w-6xl mx-auto px-6">
                <div class="bg-white minimal-corner border-2 border-blue-200 overflow-hidden shadow-xl">
                    <div class="grid grid-cols-1 lg:grid-cols-3 gap-0">
                        <!-- Left: App Info (Minimalist) -->
                        <div class="lg:col-span-2 p-8">
                            <div class="mb-6">
                                <div class="flex items-center justify-start mb-1">
                                    <div class="text-3xl font-bold">
                                        <span class="text-slate-800">Garantor</span><span class="text-amber-500">360°</span>
                                    </div>
                                </div>
                                <p class="text-slate-600 font-medium">Müşteri Mobil Uygulaması</p>
                            </div>
                            
                            <h3 class="text-2xl font-bold text-slate-800 mb-4">
                                HİZMET TAKİBİNİ CEBİNİZDEN YAPIN
                            </h3>
                            
                            <p class="text-slate-600 mb-6 leading-relaxed">
                                Mobil uygulamamızla hizmet talebinizi kolayca oluşturun, uzman ustalarla iletişim kurun 
                                ve işin ilerleyişini anlık takip edin.
                            </p>

                            <!-- Minimal Features -->
                            <div class="grid grid-cols-2 gap-3 mb-6">
                                <div class="flex items-center">
                                    <i class="fas fa-bell text-amber-500 mr-3"></i>
                                    <span class="text-slate-700 text-sm">Anlık Bildirimler</span>
                                </div>
                                <div class="flex items-center">
                                    <i class="fas fa-map-marker-alt text-amber-500 mr-3"></i>
                                    <span class="text-slate-700 text-sm">Konum Takibi</span>
                                </div>
                                <div class="flex items-center">
                                    <i class="fas fa-credit-card text-amber-500 mr-3"></i>
                                    <span class="text-slate-700 text-sm">Güvenli Ödeme</span>
                                </div>
                                <div class="flex items-center">
                                    <i class="fas fa-star text-amber-500 mr-3"></i>
                                    <span class="text-slate-700 text-sm">Usta Değerlendirme</span>
                                </div>
                            </div>

                            <!-- Web App Access Buttons -->
                            <div class="flex flex-col md:flex-row gap-2 justify-center md:justify-start items-center md:items-start">
                                <!-- Web Uygulamasi Butonu -->
                                <a href="#hizmet-al" class="bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white px-3 py-2 md:px-4 md:py-2 rounded-lg font-bold text-sm transition-all duration-300 transform hover:scale-105 shadow-lg flex items-center space-x-2 w-full md:w-auto justify-center md:justify-start">
                                    <i class="fas fa-globe text-sm"></i>
                                    <div>
                                        <div class="text-sm font-bold">WEB UYGULAMASI</div>
                                        <div class="text-xs opacity-90">Hemen Başla</div>
                                    </div>
                                </a>
                                
                                <!-- PWA Kurulum Rehberi -->
                                <button onclick="showPWAGuide()" class="bg-gradient-to-r from-emerald-600 to-emerald-700 hover:from-emerald-700 hover:to-emerald-800 text-white px-3 py-2 md:px-4 md:py-2 rounded-lg font-bold text-sm transition-all duration-300 transform hover:scale-105 shadow-lg flex items-center space-x-2 w-full md:w-auto justify-center md:justify-start">
                                    <i class="fas fa-mobile-alt text-sm"></i>
                                    <div>
                                        <div class="text-sm font-bold">ANA EKRANA EKLE</div>
                                        <div class="text-xs opacity-90">Nasıl Yapılır?</div>
                                    </div>
                                </button>
                            </div>
                        </div>

                        <!-- Right: Phone Mockup (Minimal) -->
                        <div class="p-8 bg-gradient-to-br from-blue-50 to-slate-100 flex items-center justify-center">
                            <div class="relative">
                                <!-- Phone Frame -->
                                <div class="w-52 h-96 bg-gray-900 rounded-3xl p-2 shadow-2xl">
                                    <div class="w-full h-full bg-white rounded-2xl overflow-hidden relative">
                                        <!-- Status Bar -->
                                        <div class="bg-blue-900 text-white text-xs p-2 flex justify-between items-center">
                                            <span class="font-medium">Garantor360</span>
                                            <span>---</span>
                                        </div>
                                        
                                        <!-- App Content -->
                                        <div class="p-3">
                                            <div class="text-center mb-3">
                                                <div class="w-8 h-8 bg-amber-400 rounded-lg mx-auto mb-2 flex items-center justify-center">
                                                    <i class="fas fa-tools text-white"></i>
                                                </div>
                                                <h6 class="font-bold text-gray-900 text-sm">TV Tamiri</h6>
                                                <p class="text-gray-600 text-xs">Istanbul, Kadikoy</p>
                                            </div>
                                            
                                            <!-- Status -->
                                            <div class="bg-green-50 border border-green-200 rounded-lg p-2 mb-3">
                                                <div class="flex items-center">
                                                    <div class="w-2 h-2 bg-green-500 rounded-full mr-2"></div>
                                                    <span class="text-green-700 text-xs font-medium">Usta yolda</span>
                                                </div>
                                                <p class="text-green-600 text-xs mt-1">Tahmini varis: 15 dk</p>
                                            </div>
                                            
                                            <!-- Actions -->
                                            <div class="space-y-2">
                                                <button class="w-full bg-blue-900 text-white py-2 rounded text-xs font-medium">
                                                    Ustayi Ara
                                                </button>
                                                <button class="w-full border border-gray-300 text-gray-700 py-2 rounded text-xs">
                                                    Mesaj Gonder
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Enhanced Footer -->
        <footer class="bg-blue-900 text-white" style="background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);">
            <!-- Main Footer Content -->
            <div class="py-16">
                <div class="max-w-7xl mx-auto px-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-8">
                        <!-- Company Info -->
                        <div class="lg:col-span-1">
                            <div class="mb-6">
                                <div class="flex items-center">
                                    <div class="text-2xl font-bold">
                                        <span class="text-white">Garantor</span><span class="text-amber-500">360°</span>
                                    </div>
                                </div>
                            </div>
                            <p class="text-blue-200 font-medium mb-6 leading-relaxed">
                                Türkiye'nin ilk tam güvenceli hizmet platformu. Müşteri odaklı yaklaşımla 
                                güvenli hizmet alma deneyimi sunan dijital ekosistem.
                            </p>
                            
                            <!-- Trust Indicators -->
                            <div class="grid grid-cols-2 gap-4 mb-6">
                                <div class="text-center">
                                    <div class="text-amber-400 font-bold text-2xl">67</div>
                                    <div class="text-blue-300 text-xs">Aktif Uzman</div>
                                </div>
                                <div class="text-center">
                                    <div class="text-amber-400 font-bold text-2xl">98.7%</div>
                                    <div class="text-blue-300 text-xs">Memnuniyet</div>
                                </div>
                            </div>

                            <!-- Certifications -->
                            <div class="flex flex-wrap gap-2">
                                <div class="bg-blue-800 px-3 py-1 sharp-corner">
                                    <span class="text-xs font-bold text-amber-400">ISO 9001</span>
                                </div>
                                <div class="bg-blue-800 px-3 py-1 sharp-corner">
                                    <span class="text-xs font-bold text-amber-400">6 AY GARANTI</span>
                                </div>
                                <div class="bg-blue-800 px-3 py-1 sharp-corner">
                                    <span class="text-xs font-bold text-amber-400">7/24 DESTEK</span>
                                </div>
                            </div>
                        </div>

                        <!-- Service Categories -->
                        <div>
                            <h4 class="font-bold text-lg mb-6 tracking-tight text-amber-400">HİZMET ALANLARI</h4>
                            <ul class="space-y-3">
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-tv mr-2 text-amber-500 text-sm"></i>TV Tamiri
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-laptop mr-2 text-amber-500 text-sm"></i>PC Tamiri
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-home mr-2 text-amber-500 text-sm"></i>Beyaz Eşya
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-snowflake mr-2 text-amber-500 text-sm"></i>Klima Servisi
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-blender mr-2 text-amber-500 text-sm"></i>Küçük Ev Aletleri
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-mobile-alt mr-2 text-amber-500 text-sm"></i>Elektronik
                                </a></li>
                            </ul>
                        </div>

                        <!-- Customer Resources -->
                        <div>
                            <h4 class="font-bold text-lg mb-6 tracking-tight text-amber-400">MÜŞTERİ KAYNAKLARI</h4>
                            <ul class="space-y-3">
                                <li><a href="#hizmet-al" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-search mr-2 text-amber-500 text-sm"></i>Hizmet Talebi
                                </a></li>
                                <li><a href="/bayi" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-user-tie mr-2 text-amber-500 text-sm"></i>Hizmet Veren Ol
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-shield-alt mr-2 text-amber-500 text-sm"></i>Güvence Sistemi
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-calculator mr-2 text-amber-500 text-sm"></i>Fiyat Hesaplama
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-question-circle mr-2 text-amber-500 text-sm"></i>SSS
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-book mr-2 text-amber-500 text-sm"></i>Müşteri Rehberi
                                </a></li>
                            </ul>
                        </div>

                        <!-- Contact & Support -->
                        <div>
                            <h4 class="font-bold text-lg mb-6 tracking-tight text-amber-400">İLETİŞİM & DESTEK</h4>
                            
                            <!-- Contact Methods -->
                            <div class="space-y-4 mb-6">
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-amber-500 sharp-corner flex items-center justify-center mr-3">
                                        <i class="fas fa-phone text-white text-sm"></i>
                                    </div>
                                    <div>
                                        <a href="tel:+905001234567" onclick="trackPhoneCall('+905001234567')" onclick="trackPhoneCall('+905001234567')" class="text-white font-medium hover:text-amber-400 transition duration-200">0 500 123 45 67</a>
                                        <p class="text-blue-300 text-xs">Müşteri Destek Hattı</p>
                                    </div>
                                </div>
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-amber-500 sharp-corner flex items-center justify-center mr-3">
                                        <i class="fas fa-envelope text-white text-sm"></i>
                                    </div>
                                    <div>
                                        <a href="mailto:destek@garantor360.com" class="text-white font-medium hover:text-amber-400 transition duration-200">destek@garantor360.com</a>
                                        <p class="text-blue-300 text-xs">Müşteri İletişim</p>
                                    </div>
                                </div>
                                <div class="flex items-center">
                                    <div class="w-8 h-8 bg-amber-500 sharp-corner flex items-center justify-center mr-3">
                                        <i class="fas fa-comments text-white text-sm"></i>
                                    </div>
                                    <div>
                                        <span class="text-white font-medium">Canlı Destek</span>
                                        <p class="text-blue-300 text-xs">7/24 Aktif</p>
                                    </div>
                                </div>
                            </div>

                            <!-- Working Hours -->
                            <div class="mb-6">
                                <h5 class="font-bold text-sm mb-3 text-amber-400 flex items-center">
                                    <i class="fas fa-clock mr-2"></i>ÇALIŞMA SAATLERİ
                                </h5>
                                <div class="text-blue-200 text-sm space-y-1">
                                    <div class="flex justify-between">
                                        <span>Pazartesi - Cuma:</span>
                                        <span class="text-white">08:00 - 18:00</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span>Cumartesi:</span>
                                        <span class="text-white">09:00 - 17:00</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span class="text-amber-400 font-medium">Acil Destek:</span>
                                        <span class="text-amber-400 font-bold">7/24</span>
                                    </div>
                                </div>
                            </div>

                            <!-- Social Media -->
                            <div>
                                <h5 class="font-bold text-sm mb-3 text-amber-400">SOSYAL MEDYA</h5>
                                <div class="flex space-x-2">
                                    <!-- Facebook - Brand Blue -->
                                    <a href="#" class="w-9 h-9 bg-[#1877f2] rounded-lg flex items-center justify-center text-white hover:bg-[#166fe5] hover:scale-105 hover:-translate-y-1 transition-all duration-300 shadow-md hover:shadow-lg">
                                        <i class="fab fa-facebook-f text-sm"></i>
                                    </a>
                                    <!-- Twitter/X - Brand Blue -->
                                    <a href="#" class="w-9 h-9 bg-[#1d9bf0] rounded-lg flex items-center justify-center text-white hover:bg-[#1a8cd8] hover:scale-105 hover:-translate-y-1 transition-all duration-300 shadow-md hover:shadow-lg">
                                        <i class="fab fa-twitter text-sm"></i>
                                    </a>
                                    <!-- Instagram - Gradient Pink/Orange -->
                                    <a href="#" class="w-9 h-9 bg-gradient-to-br from-[#833ab4] via-[#fd1d1d] to-[#fcb045] rounded-lg flex items-center justify-center text-white hover:from-[#7530a1] hover:via-[#e41a1a] hover:to-[#e39e3e] hover:scale-105 hover:-translate-y-1 transition-all duration-300 shadow-md hover:shadow-lg">
                                        <i class="fab fa-instagram text-sm"></i>
                                    </a>
                                    <!-- LinkedIn - Brand Blue -->
                                    <a href="#" class="w-9 h-9 bg-[#0077b5] rounded-lg flex items-center justify-center text-white hover:bg-[#006ba1] hover:scale-105 hover:-translate-y-1 transition-all duration-300 shadow-md hover:shadow-lg">
                                        <i class="fab fa-linkedin text-sm"></i>
                                    </a>
                                    <!-- YouTube - Brand Red -->
                                    <a href="#" class="w-9 h-9 bg-[#ff0000] rounded-lg flex items-center justify-center text-white hover:bg-[#e60000] hover:scale-105 hover:-translate-y-1 transition-all duration-300 shadow-md hover:shadow-lg">
                                        <i class="fab fa-youtube text-sm"></i>
                                    </a>
                                </div>
                            </div>
                        </div>

                        <!-- Corporate Services -->
                        <div>
                            <h4 class="font-bold text-lg mb-6 tracking-tight text-amber-400">KURUMSAL HİZMETLER</h4>
                            <ul class="space-y-3">
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-building mr-2 text-amber-500 text-sm"></i>Otel Tamir Servisi
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-industry mr-2 text-amber-500 text-sm"></i>Fabrika Bakım Hizmetleri
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-store mr-2 text-amber-500 text-sm"></i>Mağaza Teknik Destek
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-hospital mr-2 text-amber-500 text-sm"></i>Hastane Ekipman Bakımı
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-school mr-2 text-amber-500 text-sm"></i>Okul Teknoloji Servisi
                                </a></li>
                                <li><a href="#" class="text-blue-200 hover:text-amber-400 font-medium transition duration-200 flex items-center">
                                    <i class="fas fa-handshake mr-2 text-amber-500 text-sm"></i>Kurumsal Anlaşmalar
                                </a></li>
                            </ul>
                            <div class="mt-4 p-3 bg-amber-500/10 border border-amber-400/30 rounded-lg">
                                <p class="text-amber-300 text-xs font-semibold mb-1">
                                    <i class="fas fa-star mr-1"></i>KURUMSAL AVANTAJLAR
                                </p>
                                <ul class="text-blue-200 text-xs space-y-1">
                                    <li>• Toplu hizmet indirimleri</li>
                                    <li>• 7/24 öncelikli destek</li>
                                    <li>• Özel fiyatlandırma</li>
                                    <li>• Aylık bakım anlaşmaları</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Action Bar -->
            <div class="bg-amber-500 py-4">
                <div class="max-w-7xl mx-auto px-6">
                    <div class="flex flex-col lg:flex-row items-center justify-between">
                        <div class="flex items-center mb-4 lg:mb-0">
                            <i class="fas fa-search text-blue-900 text-xl mr-3"></i>
                            <div>
                                <h5 class="text-blue-900 font-bold">HEMEN HİZMET ALIN</h5>
                                <p class="text-blue-800 text-sm">Güvenli ödeme, 6 ay garanti</p>
                            </div>
                        </div>
                        <div class="flex space-x-4">
                            <button onclick="trackServiceRequest(); scrollToServices()" class="bg-blue-900 text-white px-6 py-3 sharp-corner font-bold hover:bg-blue-800 transition duration-200">
                                HİZMET AL
                            </button>
                            <a href="tel:+905001234567" onclick="trackPhoneCall('+905001234567')" class="border-2 border-blue-900 text-blue-900 px-6 py-3 sharp-corner font-bold hover:bg-blue-900 hover:text-white transition duration-200">
                                ARA
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Bottom Footer -->
            <div class="bg-blue-950 py-6">
                <div class="max-w-7xl mx-auto px-6">
                    <div class="flex flex-col lg:flex-row justify-between items-center">
                        <!-- Copyright -->
                        <div class="text-blue-300 text-sm mb-4 lg:mb-0">
                            &copy; 2024 Garantor360. Tüm hakları saklıdır. | Güvenli Hizmet Platformu
                        </div>

                        <!-- WhatsApp Support Info -->
                        <div class="text-center mb-4 lg:mb-0">
                            <div class="flex items-center justify-center space-x-4 text-sm">
                                <a href="https://wa.me/905001234567?text=Merhaba%20Garantor360%21%20Hizmet%20durumumu%20%C3%B6%C4%9Frenmek%20istiyorum." onclick="trackWhatsAppClick()" 
                                   target="_blank"
                                   class="flex items-center text-green-400 hover:text-green-300 transition duration-200 font-medium">
                                    <i class="fab fa-whatsapp mr-2"></i>
                                    WhatsApp Takip
                                </a>
                                <span class="text-blue-400">-</span>
                                <a href="#" class="text-blue-300 hover:text-amber-400 transition duration-200">Gizlilik</a>
                                <span class="text-blue-400">-</span>
                                <a href="/bayi" class="text-amber-400 hover:text-amber-300 font-medium transition duration-200">Bayi Ol</a>
                            </div>
                            <p class="text-blue-400 text-xs mt-1">
                                <i class="fas fa-clock mr-1"></i>
                                WhatsApp üzerinden 7/24 hizmet takibi
                            </p>
                        </div>

                        <!-- Security Badges -->
                        <div class="flex items-center space-x-3">
                            <span class="text-blue-400 text-xs">Güvenli Platform</span>
                            <div class="flex space-x-2">
                                <div class="bg-amber-500 text-blue-900 px-2 py-1 sharp-corner text-xs font-bold">SSL</div>
                                <div class="bg-amber-500 text-blue-900 px-2 py-1 sharp-corner text-xs font-bold">256BIT</div>
                                <div class="bg-amber-500 text-blue-900 px-2 py-1 sharp-corner text-xs font-bold">GÜVEN</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </footer>



        <script>
        /*
        // COMMENTED OUT DUE TO SYNTAX ERRORS - FUNCTIONALITY MOVED TO APP.JS
        // Hero Image Slider System
        let currentHeroSlide = 0;
        let heroSlideInterval;
        
        function initHeroSlider() {
            // Start auto-slide
            heroSlideInterval = setInterval(nextHeroSlide, 3000); // 3 seconds
            
            // Add CSS for active dots
            const style = document.createElement('style');
            style.textContent = '.hero-dot.active { background: white !important; } ' +
                               '.hero-slide.active { opacity: 1 !important; } ' +
                               '.mobile-hero-slide.active { opacity: 1 !important; }';
            document.head.appendChild(style);
        }
        
        function nextHeroSlide() {
            const totalSlides = 4;
            currentHeroSlide = (currentHeroSlide + 1) % totalSlides;
            showHeroSlide(currentHeroSlide);
        }
        
        function setHeroSlide(index) {
            currentHeroSlide = index;
            showHeroSlide(currentHeroSlide);
            
            // Reset auto-slide timer
            clearInterval(heroSlideInterval);
            heroSlideInterval = setInterval(nextHeroSlide, 3000);
        }
        
        // Make setHeroSlide globally accessible
        window.setHeroSlide = setHeroSlide;
        
        function showHeroSlide(index) {
            // Desktop slider
            const desktopSlides = document.querySelectorAll('.hero-slide');
            const desktopDots = document.querySelectorAll('.hero-dot');
            
            desktopSlides.forEach((slide, i) => {
                if (i === index) {
                    slide.classList.add('active');
                    slide.style.opacity = '1';
                } else {
                    slide.classList.remove('active');
                    slide.style.opacity = '0';
                }
            });
            
            desktopDots.forEach((dot, i) => {
                if (i === index) {
                    dot.classList.add('active');
                } else {
                    dot.classList.remove('active');
                }
            });
            
            // Mobile slider
            const mobileSlides = document.querySelectorAll('.mobile-hero-slide');
            mobileSlides.forEach((slide, i) => {
                if (i === index) {
                    slide.classList.add('active');
                    slide.style.opacity = '1';
                } else {
                    slide.classList.remove('active');
                    slide.style.opacity = '0';
                }
            });
        }

        // Customer page scroll functions
        function scrollToStats() {
            document.getElementById('stats').scrollIntoView({ behavior: 'smooth' });
        }
        
        function scrollToServices() {
            const servicesSection = document.querySelector('section:has(h2:contains("HIZMET KATEGORILERI"))') || 
                                  document.querySelector('[id*="service"]');
            if (servicesSection) {
                servicesSection.scrollIntoView({ behavior: 'smooth' });
            }
        }
        
        function scrollToGuarantee() {
            const guaranteeSection = document.querySelector('section:has(h2:contains("MUSTERI GUVENCELER\"))');
            if (guaranteeSection) {
                guaranteeSection.scrollIntoView({ behavior: 'smooth' });
            }
        }

        // Service Request Form Handling
        async function handleServiceRequest(event) {
            event.preventDefault();
            
            const form = document.getElementById('serviceRequestForm');
            const submitButton = form.querySelector('button[type="submit"]');
            const messagesContainer = document.getElementById('formMessages');
            const successMessage = document.getElementById('successMessage');
            const errorMessage = document.getElementById('errorMessage');
            
            // Hide previous messages
            successMessage.classList.add('hidden');
            errorMessage.classList.add('hidden');
            messagesContainer.classList.add('hidden');
            
            // Show loading state
            const originalText = submitButton.innerHTML;
            submitButton.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>GÖNDERİLİYOR...';
            submitButton.disabled = true;
            
            try {
                // Collect form data
                const formData = {
                    customerName: document.getElementById('customerName').value.trim(),
                    customerPhone: document.getElementById('customerPhone').value.trim(),
                    customerCity: document.getElementById('customerCity').value === 'Diğer' 
                        ? document.getElementById('customCityInput').value.trim() 
                        : document.getElementById('customerCity').value,
                    customerDistrict: document.getElementById('customerDistrict').value.trim(),
                    serviceCategory: document.getElementById('serviceCategory').value,
                    problemDescription: document.getElementById('problemDescription').value.trim(),
                    urgency: document.querySelector('input[name="urgency"]:checked')?.value || 'normal'
                };
                
                // Get contact preferences
                const contactPreferences = [];
                document.querySelectorAll('input[name="contactPreference"]:checked').forEach(input => {
                    contactPreferences.push(input.value);
                });
                formData.contactPreference = contactPreferences;
                
                // Client-side validation
                if (!formData.customerName || !formData.customerPhone || !formData.customerCity || !formData.serviceCategory || !formData.problemDescription) {
                    throw new Error('Lütfen gerekli alanları doldurun');
                }
                
                // Phone validation (basic)
                const phoneRegex = /^[0-9\s\+\(\)\-]{10,}$/;
                if (!phoneRegex.test(formData.customerPhone)) {
                    throw new Error('Lütfen geçerli bir telefon numarası girin');
                }
                
                // Send to API
                const response = await fetch('/api/service-request', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Show success message
                    successMessage.innerHTML = 
                        '<i class="fas fa-check-circle mr-2"></i>' +
                        '<strong>Basarili!</strong> Talebiniz alindi. Talep kodu: ' + result.requestCode +
                        '<br><small class="block mt-2">En kisa surede size donus yapilacak.</small>';
                    successMessage.classList.remove('hidden');
                    messagesContainer.classList.remove('hidden');
                    
                    // Reset form
                    form.reset();
                    
                    // Auto-scroll to success message
                    setTimeout(() => {
                        messagesContainer.scrollIntoView({ behavior: 'smooth' });
                    }, 500);
                    
                } else {
                    throw new Error(result.error || 'Talep gonderilirken hata olustu');
                }
                
            } catch (error) {
                console.error('Form submission error:', error);
                errorMessage.innerHTML = 
                    '<i class="fas fa-exclamation-triangle mr-2"></i>' +
                    '<strong>Hata!</strong> ' + error.message;
                errorMessage.classList.remove('hidden');
                messagesContainer.classList.remove('hidden');
            } finally {
                // Reset button state
                submitButton.innerHTML = originalText;
                submitButton.disabled = false;
            }
        }

        // Phone number formatting
        function formatPhoneNumber(input) {
            let value = input.value.replace(/\D/g, '');
            if (value.startsWith('90')) {
                value = value.substring(2);
            }
            if (value.startsWith('0')) {
                value = value.substring(1);
            }
            
            // Format as 0 5xx xxx xx xx
            if (value.length >= 10) {
                const formatted = '0 ' + value.substring(0, 3) + ' ' + value.substring(3, 6) + ' ' + value.substring(6, 8) + ' ' + value.substring(8, 10);
                input.value = formatted;
            } else if (value.length > 0) {
                input.value = '0 ' + value;
            }
        }

        // Initialize form handling when page loads
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize Hero Slider
            initHeroSlider();
            
            // Initialize Dynamic Notifications System - Direct Call
            setTimeout(() => {
                console.log('Starting notifications system directly...');
                if (typeof window.initializeDynamicNotifications === 'function') {
                    window.initializeDynamicNotifications();
                    console.log('Dynamic notifications initialized!');
                } else {
                    // Start notifications manually if function not found
                    console.log('Starting notifications manually...');
                    startNotificationsManually();
                }
            }, 2000);
            
            // Initialize Dynamic Stats and Activity Text
            setTimeout(() => {
                initDynamicStats();
                initDynamicActivity();
                initSecurityGuarantees();
            }, 2000);
        });

        // Manual notifications starter as fallback
        function startNotificationsManually() {
            console.log('Manual notification system starting...');
            
            const notifications = [
                { text: "İstanbul'da elektrik tamiri tamamlandı", type: "success", location: "İstanbul", service: "Elektrik", icon: "fas fa-bolt" },
                { text: "Ankara'da tesisatçı işini bitirdi", type: "success", location: "Ankara", service: "Tesisat", icon: "fas fa-wrench" },
                { text: "Bursa'da boyacı çalışması kabul edildi", type: "success", location: "Bursa", service: "Boyacı", icon: "fas fa-paint-brush" },
                { text: "İzmir'de klima tamiri başladı", type: "active", location: "İzmir", service: "Klima", icon: "fas fa-snowflake" }
            ];
            
            let notificationIndex = 0;
            
            function showNotification() {
                const notification = notifications[notificationIndex % notifications.length];
                notificationIndex++;
                
                // Add to liveNotifications container
                const liveContainer = document.getElementById('liveNotifications');
                if (liveContainer) {
                    addLiveNotification(liveContainer, notification);
                }
                
                // Also add to liveComments container
                const commentsContainer = document.getElementById('liveComments');
                if (commentsContainer) {
                    addLiveComment(commentsContainer, notification);
                }
            }
            

            
            // Start showing notifications every 4 seconds
            showNotification(); // Show first one immediately
            setInterval(showNotification, 4000);
        }
        
        // Function to add live notification to container
        function addLiveNotification(container, notification) {
            // Remove old notifications if too many
            while (container.children.length >= 3) {
                container.removeChild(container.firstChild);
            }
            
            const notificationEl = document.createElement('div');
            notificationEl.className = 'bg-white/10 backdrop-blur-sm border border-green-400/30 rounded-lg p-3 transform translate-x-full transition-all duration-500';
            
            const timeAgo = Math.floor(Math.random() * 5) + 1; // 1-5 dakika once
            
            notificationEl.innerHTML = 
                '<div class="flex items-center space-x-3">' +
                    '<div class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center">' +
                        '<i class="' + notification.icon + ' text-white text-xs"></i>' +
                    '</div>' +
                    '<div class="flex-1">' +
                        '<div class="text-white font-semibold text-sm">' + notification.text + '</div>' +
                        '<div class="text-green-300 text-xs">' +
                            '<i class="fas fa-clock mr-1"></i>' + timeAgo + ' dakika once' +
                        '</div>' +
                    '</div>' +
                '</div>';
            
            container.appendChild(notificationEl);
            
            // Animate in
            setTimeout(() => {
                notificationEl.classList.remove('translate-x-full');
            }, 100);
        }
        
        // Function to add live comment to container  
        function addLiveComment(container, notification) {
            // Remove old comments if too many
            while (container.children.length >= 4) {
                container.removeChild(container.firstChild);
            }
            
            const commentEl = document.createElement('div');
            commentEl.className = 'bg-white/10 backdrop-blur-sm border border-blue-400/30 rounded-lg p-2 transform translate-x-full transition-all duration-500';
            
            const customerNames = ['Ahmet K.', 'Zeynep M.', 'Mehmet Y.', 'Ayse T.', 'Murat S.', 'Fatma D.'];
            const customerName = customerNames[Math.floor(Math.random() * customerNames.length)];
            const rating = Math.random() > 0.2 ? 5 : 4; // Mostly 5 stars
            
            commentEl.innerHTML = 
                '<div class="flex items-start space-x-2">' +
                    '<div class="w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center text-white text-xs font-bold">' +
                        customerName.charAt(0) +
                    '</div>' +
                    '<div class="flex-1">' +
                        '<div class="text-white text-xs font-semibold">' + customerName + '</div>' +
                        '<div class="text-yellow-400 text-xs mb-1">' +
                            '★'.repeat(rating) + '☆'.repeat(5-rating) +
                        '</div>' +
                        '<div class="text-blue-100 text-xs">"' + notification.service + ' hizmeti mükemmeldi!"</div>' +
                    '</div>' +
                '</div>';
            
            container.appendChild(commentEl);
            
            // Animate in
            setTimeout(() => {
                commentEl.classList.remove('translate-x-full');
            }, 100);
        }
            
            // Form handler now in separate file
            // const form = document.getElementById('serviceRequestForm');
            // if (form) {
            //     form.addEventListener('submit', handleServiceRequest);
                
                // Phone number formatting
                const phoneInput = document.getElementById('customerPhone');
                if (phoneInput) {
                    phoneInput.addEventListener('input', function() {
                        formatPhoneNumber(this);
                    });
                }
            }
            
            // AI Chat form handling
            const chatForm = document.getElementById('chatForm');
            if (chatForm) {
                chatForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    sendAIMessage();
                });
            }
            
            // AI Chat input enter key
            const chatInput = document.getElementById('chatInput');
            if (chatInput) {
                chatInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter' && !e.shiftKey) {
                        e.preventDefault();
                        sendAIMessage();
                    }
                });
            }
            
            // Eski dinamik sistem kaldırıldı - Yeni temiz sistem dosyanın sonunda
        });

        // Canlı Talep Akışı - Dinamik Güncelleme Sistemi
        function startLiveRequestFlow() {
            const liveNotifications = document.getElementById('liveNotifications');
            const liveComments = document.getElementById('liveComments');
            
            if (!liveNotifications || !liveComments) return;
            
            // GENİŞLETİLMİŞ TV-PC-Beyaz Eşya Hizmet Verileri - 50+ Çeşit
            const serviceTypes = [
                // TV TAMİRLERİ
                { service: 'TV Tamiri', details: 'Samsung 75" Neo QLED 8K', location: 'İstanbul, Beşiktaş', color: 'green' },
                { service: 'TV Tamiri', details: 'LG 65" OLED C3', location: 'İstanbul, Kadıköy', color: 'green' },
                { service: 'TV Tamiri', details: 'Sony 55" Bravia XR', location: 'İstanbul, Şişli', color: 'green' },
                { service: 'TV Tamiri', details: 'TCL 50" QLED', location: 'İstanbul, Ümraniye', color: 'green' },
                { service: 'TV Panel Değişimi', details: 'Philips 43" 4K Smart', location: 'İstanbul, Bakırköy', color: 'emerald' },
                { service: 'TV Anakart Tamiri', details: 'Grundig 40" LED', location: 'İstanbul, Maltepe', color: 'teal' },
                
                // PC TAMİRLERİ
                { service: 'PC Tamiri', details: 'Gaming RTX 4090 Setup', location: 'Ankara, Kızılay', color: 'blue' },
                { service: 'PC Tamiri', details: 'İş Bilgisayarı Dell OptiPlex', location: 'Ankara, Çankaya', color: 'blue' },
                { service: 'PC Kurulum', details: 'AMD Ryzen 7 + RTX 4070', location: 'Ankara, Keçiören', color: 'cyan' },
                { service: 'PC Format', details: 'Windows 11 Kurulumu', location: 'Ankara, Mamak', color: 'sky' },
                { service: 'PC Temizlik', details: 'Desktop Deep Clean', location: 'Ankara, Etimesgut', color: 'indigo' },
                { service: 'Oyun PC Toplama', details: 'Intel i7 + RTX 4060 Ti', location: 'İzmir, Konak', color: 'violet' },
                
                // LAPTOP TAMİRLERİ
                { service: 'Laptop Tamiri', details: 'MacBook Pro 16" M2 Max', location: 'İzmir, Alsancak', color: 'purple' },
                { service: 'Laptop Tamiri', details: 'ASUS ROG Strix G15', location: 'İzmir, Bornova', color: 'purple' },
                { service: 'Laptop Tamiri', details: 'HP Pavilion 15.6"', location: 'İzmir, Karşıyaka', color: 'purple' },
                { service: 'Laptop Ekran Değişimi', details: 'Lenovo ThinkPad X1', location: 'İzmir, Bayraklı', color: 'fuchsia' },
                { service: 'Laptop Klavye Tamiri', details: 'Dell XPS 13 Plus', location: 'Bursa, Osmangazi', color: 'pink' },
                
                // BUZDOLABI TAMİRLERİ
                { service: 'Buzdolabı Tamiri', details: 'LG InstaView Door-in-Door', location: 'Bursa, Nilüfer', color: 'yellow' },
                { service: 'Buzdolabı Tamiri', details: 'Samsung Family Hub 4', location: 'Bursa, Yıldırım', color: 'yellow' },
                { service: 'Buzdolabı Gaz Dolumu', details: 'Bosch Serie 4 No-Frost', location: 'Antalya, Muratpaşa', color: 'amber' },
                { service: 'Buzdolabı Kompresör', details: 'Arçelik A++ 640 Lt', location: 'Antalya, Kepez', color: 'orange' },
                { service: 'Buzdolabı Termostat', details: 'Vestel NF640 X A++', location: 'Antalya, Konyaaltı', color: 'red' },
                
                // ÇAMAŞIR MAKİNESİ TAMİRLERİ
                { service: 'Çamaşır Makinesi', details: 'Bosch WAX32EH0TR 10kg', location: 'Gaziantep, Şahinbey', color: 'red' },
                { service: 'Çamaşır Makinesi', details: 'LG F4WV912P2 12kg', location: 'Konya, Selçuklu', color: 'red' },
                { service: 'Çamaşır M. Pompa', details: 'Samsung WW12T504DAW', location: 'Adana, Seyhan', color: 'rose' },
                { service: 'Çamaşır M. Rulman', details: 'Arçelik 9143 YP 9kg', location: 'Kayseri, Melikgazi', color: 'pink' },
                { service: 'Çamaşır M. Kilit', details: 'Beko WMY 91443 LB1', location: 'Eskişehir, Odunpazarı', color: 'fuchsia' },
                
                // KLİMA SERVİSLERİ
                { service: 'Klima Servisi', details: 'Daikin Ururu Sarara', location: 'İstanbul, Şişli', color: 'indigo' },
                { service: 'Klima Servisi', details: 'Mitsubishi Electric MSZ', location: 'İstanbul, Beyoğlu', color: 'indigo' },
                { service: 'Klima Montaj', details: 'LG Artcool Gallery 18K', location: 'Ankara, Yenimahalle', color: 'blue' },
                { service: 'Klima Gaz Dolumu', details: 'Samsung WindFree Elite', location: 'İzmir, Gaziemir', color: 'cyan' },
                { service: 'Klima Temizlik', details: 'Vestel Vega Plus 12K', location: 'Bursa, Gemlik', color: 'sky' },
                { service: 'VRV Klima Sistemi', details: 'Daikin VRV IV-S 8HP', location: 'Antalya, Aksu', color: 'teal' },
                
                // BULAŞIK MAKİNESİ TAMİRLERİ  
                { service: 'Bulaşık Makinesi', details: 'Siemens iQ700 speedMatic', location: 'Ankara, Bahçelievler', color: 'emerald' },
                { service: 'Bulaşık Makinesi', details: 'Bosch Serie 6 XXL', location: 'İzmir, Narlıdere', color: 'green' },
                { service: 'Bulaşık M. Motor', details: 'Beko DFN39430X', location: 'Bursa, Mudanya', color: 'lime' },
                { service: 'Bulaşık M. Pompa', details: 'Arçelik 6263 I 14 Kişilik', location: 'Mersin, Mezitli', color: 'emerald' },
                
                // KÜÇÜK EV ALETLERİ
                { service: 'Mikrodalga Tamiri', details: 'Panasonic NN-DS596M', location: 'İstanbul, Avcılar', color: 'slate' },
                { service: 'Fırın Tamiri', details: 'Bosch HBG635BS1 Ankastre', location: 'Ankara, Pursaklar', color: 'gray' },
                { service: 'Davlumbaz Tamiri', details: 'Siemens LC87KHM60 90cm', location: 'İzmir, Çiğli', color: 'zinc' },
                { service: 'Ocak Tamiri', details: 'Arçelik AFO 5652 B', location: 'Bursa, İnegöl', color: 'stone' },
                { service: 'Süpürge Tamiri', details: 'Dyson V15 Detect Absolute', location: 'Antalya, Serik', color: 'neutral' },
                { service: 'Ütü Tamiri', details: 'Philips PerfectCare Elite', location: 'Trabzon, Ortahisar', color: 'gray' },
                
                // ELEKTRONİK CİHAZLAR
                { service: 'Telefon Tamiri', details: 'iPhone 15 Pro Max', location: 'İstanbul, Taksim', color: 'purple' },
                { service: 'Tablet Tamiri', details: 'iPad Pro 12.9" M2', location: 'Ankara, Ulus', color: 'violet' },
                { service: 'Konsol Tamiri', details: 'PlayStation 5 Slim', location: 'İzmir, Foça', color: 'indigo' },
                { service: 'Hoparlör Tamiri', details: 'JBL PartyBox 710', location: 'Bursa, Orhangazi', color: 'blue' },
                { service: 'Kulaklık Tamiri', details: 'Sony WH-1000XM5', location: 'Antalya, Manavgat', color: 'sky' },
                
                // AKILLI EV CİHAZLARI
                { service: 'Akıllı TV Setup', details: 'Samsung Neo QLED 8K AI', location: 'İstanbul, Levent', color: 'emerald' },
                { service: 'Ses Sistemi', details: 'Bose Lifestyle 650', location: 'Ankara, Bilkent', color: 'teal' },
                { service: 'Projektör Kurulum', details: 'Epson EH-TW7100 4K', location: 'İzmir, Cesme', color: 'cyan' },
                { service: 'Güvenlik Kamera', details: 'Hikvision 4K NVR Sistem', location: 'Bursa, Karacabey', color: 'slate' },
                { service: 'Akıllı Ev Sistemi', details: 'Samsung SmartThings Hub', location: 'Antalya, Kas', color: 'zinc' }
            ];
            
            const customerNames = [
                'Mehmet K.', 'Ayse Y.', 'Can S.', 'Elif K.', 'Murat D.', 'Zeynep A.', 'Ali R.', 'Fatma B.',
                'Ahmet T.', 'Seda M.', 'Burak O.', 'Deniz L.', 'Cem Y.', 'Pinar G.', 'Oguz B.', 'Merve K.',
                'Emre D.', 'Selin A.', 'Baris C.', 'Gizem E.', 'Kaan P.', 'Tugba R.', 'Serkan M.', 'Ebru T.',
                'Volkan S.', 'Esra H.', 'Tolga K.', 'Nazli B.', 'Onur G.', 'Burcu Y.', 'Arda F.', 'Ipek L.'
            ];
            const comments = [
                // TV Yorumlari - ASCII Safe
                'TV mükemmel calisiyor! Goruntu kalitesi harika 📺✨',
                '8K TV kurulumu mukemmeldi, sinema keyfi evimde 🎬🔥', 
                'OLED TV tamiri cok basarili, renkler canli 🌈👍',
                'Smart TV ayarlari perfect, tum uygulamalar calisiyor 📱💯',
                'TV panel degisimi super oldu, yepyeni gibi 🆕🎉',
                
                // PC Yorumlari - ASCII Safe
                'Gaming PC simdi cok guclu, tum oyunlar Ultra ayarlarda 🎮⚡',
                'PC kurulum hizmetinden cok memnunum, hiz inanilmaz 🚀💪',
                'Is bilgisayarim artik cok hizli, verimliligim artti 💼⚡',
                'PC format islemi harika, Windows 11 cok smooth 🖥️✨',
                'Oyun PC toplama servisi mukemmel, RTX performansi 🔥🎯',
                
                // Laptop Yorumlari - ASCII Safe
                'MacBook tamiri profesyoneldi, M2 chip ucuyor 🍎💨',
                'Gaming laptop yeniden hayata dondu 🎮💥',
                'Laptop ekran degisimi perfect, 4K goruntu net 📱🌟',
                'Is laptop artik cok verimli calisiyor 💻📈',
                'Laptop klavye tamiri basarili, yazma keyfi geri geldi ⌨️😊',
                
                // Beyaz Esya Yorumlari - ASCII Safe
                'Buzdolabi mukemmel sogutuyor, enerji tasarrufu var ❄️💚',
                'Camasir makinem sessiz calisiyor, yeni gibi 🌊✨',
                'Bulasik makinesi tamiri super, temizlik mukemmel 🍽️💎',
                'Mikrodalga tamiri basarili, hizli isitma geri geldi 🔥⚡',
                'Firin tamiri harika, ekmeklerim artik perfect 🍞👨‍🍳',
                
                // Klima Yorumlari - ASCII Safe
                'Klima servisi mukemmeldi, evim cok serin ve sessiz ❄️🏠',
                'VRV sistem kurulumu professional, tum odalar ideal 🌡️✅',
                'Klima temizligi super, hava quality cok iyi 💨😌',
                'Split klima montaji perfect, enerji tasarruflu 💡💚',
                'Inverter klima tamiri basarili, sessiz calisiyor 🔇❄️',
                
                // Elektronik Yorumlari - ASCII Safe
                'iPhone tamiri mukemmel, ekran yepyeni gibi 📱✨',
                'PlayStation tamiri super, oyunlar lag-free 🎮🚀',
                'Tablet tamiri basarili, dokunma hassasiyeti perfect 📋👆',
                'Kulaklik tamiri harika, ses kalitesi muhtesem 🎧🎵',
                'Hoparlor tamiri excellent, bass performansi top 🔊🎶',
                
                // Genel Memnuniyet - ASCII Safe
                'Hizmet kalitesi A+, kesinlikle tavsiye ederim 👌⭐',
                'Teknisyen cok bilgili ve guler yuzlu 😊👨‍🔧',
                'Fiyat-performans orani mukemmel 💰✅',
                'Zamaninda geldi, isini hizli bitirdi ⏰💯',
                'Garantili hizmet, guvenle tercih edin 🛡️✨',
                'Problem tamamen cozuldu, tesekkurler 🙏💪',
                'Profesyonel ekip, kaliteli malzeme 👥🔧',
                'Ikinci kez hizmet aliyorum, yine mukemmel 🔄⭐'
            ];
            
            let notificationIndex = 0;
            let commentIndex = 0;
            
            // İlk yüklemede loading mesajını temizle
            function clearLoadingMessages() {
                // Bildirimlerdeki loading mesajını temizle
                const loadingNotification = liveNotifications.querySelector('div');
                if (loadingNotification && loadingNotification.textContent.includes('yukleniyor')) {
                    liveNotifications.innerHTML = '';
                }
                
                // Yorumlardaki loading mesajını temizle
                const loadingComment = liveComments.querySelector('div');
                if (loadingComment && loadingComment.textContent.includes('yukleniyor')) {
                    liveComments.innerHTML = '';
                }
            }
            
            // Yeni talep bildirimi ekleme - ÇOK DAHA DİNAMİK
            function addNewNotification() {
                clearLoadingMessages();
                const service = serviceTypes[Math.floor(Math.random() * serviceTypes.length)]; // Rastgele seçim
                const timeOptions = ['simdi', '1 dk once', '2 dk once', '3 dk once', '4 dk once', '5 dk once', '30 sn once', '45 sn once'];
                const timeAgo = timeOptions[Math.floor(Math.random() * timeOptions.length)];
                
                const notification = document.createElement('div');
                notification.className = 'bg-white/10 border-l-4 border-' + service.color + '-400 p-3 rounded-r-lg transform translate-x-full transition-all duration-500 shadow-lg';
                
                notification.innerHTML = 
                    '<div class="flex items-center justify-between">' +
                        '<div class="flex-1">' +
                            '<div class="text-white font-semibold text-sm">' + service.service + ' Tamamlandı</div>' +
                            '<div class="text-' + service.color + '-200 text-xs">' + service.details + ' - ' + service.location + '</div>' +
                        '</div>' +
                        '<div class="text-' + service.color + '-400 font-bold text-xs">' + timeAgo + '</div>' +
                    '</div>';
                
                // En üste ekle
                liveNotifications.insertBefore(notification, liveNotifications.firstChild);
                
                // Çarpıcı animasyon efekti + Ses
                setTimeout(() => {
                    notification.classList.remove('translate-x-full');
                    notification.classList.add('animate-pulse');
                    
                    // Yeni talep ses efekti (opsiyonel)
                    try {
                        const audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmEbBDGJ0fPQfS4ELnjK7+KURQ0PVK3n77BdGAg+ltryxnkpBSl+zPLaizsIGGS57+OXRBAUXrTp66hVFApGn+DyvmEbBDGJ0fPQfS4ELnjK7+KURQ0PVK3n77BdGAg+ltryxnkpBSl+zPLaizsIGGS57+OXRBAUXrTp66hVFApGn+DyvmEbBDGJ0fPQfS4ELnjK7+KURQ0PVK3n77BdGAg+ltryxnkpBSl+zPLaizsIGGS57+OXRBAUXrTp66hVFApGn+DyvmEbBDGJ0fPQfS4ELnjK7+KURQ0PVK3n77BdGAg+ltryxnkpBSl+zPLaizsIGGS57+OXRBAUXrTp66hVFA==');
                        audio.volume = 0.1; // Çok düşük ses seviyesi
                        audio.play().catch(() => {}); // Hata varsa sessizce devam et
                    } catch(e) {}
                    
                    setTimeout(() => {
                        notification.classList.remove('animate-pulse');
                    }, 1000);
                }, 100);
                
                // Fazla olanları sil (maksimum 4 tane - hızlı değişim için)
                while (liveNotifications.children.length > 4) {
                    liveNotifications.removeChild(liveNotifications.lastChild);
                }
                
                notificationIndex++;
            }
            
            // Yeni yorum ekleme - TAM RANDOMİZE
            function addNewComment() {
                clearLoadingMessages();
                const service = serviceTypes[Math.floor(Math.random() * serviceTypes.length)]; // Rastgele hizmet
                const customer = customerNames[Math.floor(Math.random() * customerNames.length)]; // Rastgele müşteri
                const comment = comments[Math.floor(Math.random() * comments.length)]; // Rastgele yorum
                const initials = customer.split(' ').map(n => n[0]).join('');
                const timeOptions = ['simdi', '1 dk', '2 dk', '3 dk', '30 sn', '45 sn', '1,5 dk', '2,5 dk'];
                const timeText = timeOptions[Math.floor(Math.random() * timeOptions.length)];
                
                const commentEl = document.createElement('div');
                commentEl.className = 'bg-white/10 p-3 rounded-lg transform translate-x-full transition-all duration-500 shadow-lg';
                
                commentEl.innerHTML = 
                    '<div class="flex items-start space-x-2">' +
                        '<div class="w-8 h-8 bg-' + service.color + '-500 rounded-full flex items-center justify-center">' +
                            '<span class="text-white text-xs font-bold">' + initials + '</span>' +
                        '</div>' +
                        '<div class="flex-1">' +
                            '<div class="text-white text-xs font-semibold">' + customer + '</div>' +
                            '<div class="text-' + service.color + '-200 text-xs">"' + comment + '"</div>' +
                            '<div class="text-' + service.color + '-300 text-xs mt-1">⭐⭐⭐⭐⭐ | ' + service.service + '</div>' +
                        '</div>' +
                        '<div class="text-' + service.color + '-400 text-xs">' + timeText + '</div>' +
                    '</div>';
                
                // En üste ekle
                liveComments.insertBefore(commentEl, liveComments.firstChild);
                
                // Çarpıcı animasyon efekti
                setTimeout(() => {
                    commentEl.classList.remove('translate-x-full');
                    commentEl.classList.add('animate-bounce');
                    setTimeout(() => {
                        commentEl.classList.remove('animate-bounce');
                    }, 1000);
                }, 100);
                
                // Fazla olanları sil (maksimum 3 tane - hızlı değişim için)
                while (liveComments.children.length > 3) {
                    liveComments.removeChild(liveComments.lastChild);
                }
                
                commentIndex++;
            }
            
            // ULTRA HIZLI SÜREKLI AKIŞ - Çok daha sık güncelleme!
            // Her 1-2 saniyede bir yeni talep bildirimi (ÇILGIN HIZLI!)
            setInterval(addNewNotification, 1000 + Math.random() * 1000);
            
            // Her 1.5-2.5 saniyede bir yeni yorum (ÇILGIN HIZLI!)
            setInterval(addNewComment, 1500 + Math.random() * 1000);
            
            // Sayfa yüklendiğinde HEMEN başlasın - çoklu dalga
            setTimeout(addNewNotification, 500);   // İlk bildirim
            setTimeout(addNewComment, 800);        // İlk yorum
            setTimeout(addNewNotification, 1200);  // İkinci bildirim
            setTimeout(addNewComment, 1600);       // İkinci yorum
            setTimeout(addNewNotification, 2100);  // Üçüncü bildirim
            setTimeout(addNewComment, 2400);       // Üçüncü yorum
        }
        
        // Simulated real-time data updates - DISABLED (using unified system)
        function updateStats() {
            // DISABLED - Now using unified statistics system
            return;
            // Daily jobs counter
            const dailyJobsEl = document.getElementById('daily-jobs');
            if (dailyJobsEl) {
                const current = parseInt(dailyJobsEl.textContent) || 127;
                const newValue = current + Math.floor(Math.random() * 3);
                dailyJobsEl.textContent = newValue;
            }

            // Daily earnings
            const earningsEl = document.getElementById('daily-earnings');
            if (earningsEl) {
                const current = parseInt(earningsEl.textContent.replace(',', '')) || 34520;
                const newValue = current + Math.floor(Math.random() * 500) + 100;
                earningsEl.textContent = newValue.toLocaleString('tr-TR');
            }

            // Active dealers - DISABLED: Now synchronized with main counter system
            // const dealersEl = document.getElementById('active-dealers');
            // if (dealersEl) {
            //     const current = parseInt(dealersEl.textContent) || 412;
            //     const change = Math.random() > 0.7 ? (Math.random() > 0.5 ? 1 : -1) : 0;
            //     dealersEl.textContent = current + change;
            // }

            // Average price
            const avgPriceEl = document.getElementById('avg-price');
            if (avgPriceEl) {
                const prices = [245, 267, 289, 234, 312, 198, 356, 276, 234, 287];
                avgPriceEl.textContent = prices[Math.floor(Math.random() * prices.length)];
            }
        }

        // Enhanced customer request feed simulation
        // ESKİ addJobToFeed FONKSIYONU KALDIRILDI

        // ESKİ KOD PARÇALARI KALDIRILDI

            const requestElement = document.createElement('div');
            requestElement.className = \`bg-white border border-slate-200 minimal-corner p-4 hover:border-orange-600 transition-all duration-200 \${request.urgent ? 'border-l-4 border-l-red-500' : ''}\`;
            requestElement.innerHTML = \`
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-3">
                        <div class="flex flex-col">
                            <div class="flex items-center space-x-2">
                                <span class="\${priorityColor} text-white px-2 py-1 sharp-corner text-xs font-bold">\${request.priority}</span>
                                <span class="text-slate-500 text-xs font-medium">#\${requestId}</span>
                                \${request.urgent ? '<span class="text-red-600 text-xs font-bold pulse-dot">ACIL</span>' : ''}
                            </div>
                            <div class="mt-1">
                                <span class="text-slate-800 font-bold text-sm">\${request.category}</span>
                                <span class="text-slate-600 text-sm ml-2">- \${customerName}</span>
                            </div>
                            <div class="text-slate-600 text-lg mt-1">
                                \${request.description}
                            </div>
                            <div class="text-slate-500 text-xs mt-1">
                                \${city} / \${district} - \${time}
                            </div>
                        </div>
                    </div>
                    <div class="text-right">
                        <div class="text-green-600 font-bold text-sm">
                            <i class="fas fa-user-check"></i>
                        </div>
                        <div class="text-slate-500 text-xs">Uzman Araniyor</div>
                    </div>
                </div>
            \`;

            // Add slide-in animation
            requestElement.style.opacity = '0';
            requestElement.style.transform = 'translateX(-20px)';
            
            feed.insertBefore(requestElement, feed.firstChild);

            // Animate in
            setTimeout(() => {
                requestElement.style.opacity = '1';
                requestElement.style.transform = 'translateX(0)';
                requestElement.style.transition = 'all 0.3s ease-out';
            }, 50);

            // Keep only last 12 requests
            while (feed.children.length > 12) {
                feed.removeChild(feed.lastChild);
            }

            // Update recent count
            const recentCountEl = document.getElementById('recent-count');
            if (recentCountEl) {
                const currentCount = parseInt(recentCountEl.textContent) || 8;
                const newCount = Math.min(currentCount + 1, 15);
                recentCountEl.textContent = newCount + ' Talep';
            }
        }

        // City opportunities function disabled - no city categories to display
        function populateCityOpportunities() {
            // Function disabled to remove city categories from "Sehir Bazinda Hizmet Imkanlari" section
            return;
        }

        // Anlık talep fonksiyonları kaldırıldı

        // Update live statistics
        function updateLiveStats() {
            // Update hourly total
            const hourlyEl = document.getElementById('hourly-total');
            if (hourlyEl) {
                const current = parseInt(hourlyEl.textContent) || 47;
                const change = Math.floor(Math.random() * 3);
                hourlyEl.textContent = (current + change) + ' Talep';
            }

            // Simulate chart updates (bars animation)
            const bars = document.querySelectorAll('[style*="height"]');
            bars.forEach(bar => {
                const randomHeight = Math.floor(Math.random() * 70 + 30) + '%';
                bar.style.height = randomHeight;
            });
        }

        // Scroll to services function
        function scrollToServices() {
            const servicesSection = document.getElementById('hizmet-al');
            if (servicesSection) {
                servicesSection.scrollIntoView({ behavior: 'smooth' });
            }
        }

        function scrollToGuarantee() {
            const guaranteeSection = document.getElementById('guarantee');
            if (guaranteeSection) {
                guaranteeSection.scrollIntoView({ behavior: 'smooth' });
            }
        }

        // AI Chat Functions
        let isChatOpen = false;

        function toggleAIChat() {
            const chatWidget = document.getElementById('aiChatWidget');
            const chatButton = document.getElementById('aiChatButton');
            
            if (isChatOpen) {
                // Close chat
                chatWidget.classList.add('hidden');
                chatButton.classList.remove('hidden');
                isChatOpen = false;
            } else {
                // Open chat
                chatWidget.classList.remove('hidden');
                chatButton.classList.add('hidden');
                isChatOpen = true;
                
                // Focus on input
                setTimeout(() => {
                    const chatInput = document.getElementById('chatInput');
                    if (chatInput) chatInput.focus();
                }, 100);
            }
        }

        function sendQuickMessage(message) {
            const chatInput = document.getElementById('chatInput');
            if (chatInput) {
                chatInput.value = message;
                sendAIMessage();
            }
        }

        async function sendAIMessage() {
            const chatInput = document.getElementById('chatInput');
            const chatMessages = document.getElementById('chatMessages');
            const message = chatInput.value.trim();
            
            if (!message) return;
            
            // Clear input
            chatInput.value = '';
            
            // Add user message
            addChatMessage(message, 'user');
            
            // Show typing indicator
            addTypingIndicator();
            
            try {
                // Simulate AI response (you'll connect this to your AI service)
                const response = await getAIResponse(message);
                
                // Remove typing indicator
                removeTypingIndicator();
                
                // Add AI response
                addChatMessage(response, 'ai');
                
            } catch (error) {
                // Remove typing indicator
                removeTypingIndicator();
                
                // Add error message
                addChatMessage('Uzgunum, su anda bir teknik sorun yasiyorum. Lutfen daha sonra tekrar deneyin veya telefon ile iletisime gecin.', 'ai');
            }
        }

        function addChatMessage(message, sender) {
            const chatMessages = document.getElementById('chatMessages');
            const messageDiv = document.createElement('div');
            const timestamp = new Date().toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' });
            
            if (sender === 'user') {
                messageDiv.innerHTML = \`
                    <div class="flex items-start mb-4 justify-end">
                        <div class="bg-blue-600 text-white p-3 minimal-corner max-w-xs mr-3">
                            <div class="text-sm">\${message}</div>
                            <div class="text-xs opacity-80 mt-2">\${timestamp}</div>
                        </div>
                        <div class="w-8 h-8 bg-blue-600 sharp-corner flex items-center justify-center mt-1">
                            <i class="fas fa-user text-white text-sm"></i>
                        </div>
                    </div>
                \`;
            } else {
                messageDiv.innerHTML = \`
                    <div class="flex items-start mb-4">
                        <div class="w-8 h-8 bg-purple-600 sharp-corner flex items-center justify-center mr-3 mt-1">
                            <i class="fas fa-robot text-white text-sm"></i>
                        </div>
                        <div class="bg-white p-3 minimal-corner shadow-sm max-w-xs">
                            <div class="text-sm text-slate-800">\${message}</div>
                            <div class="text-xs text-slate-500 mt-2">\${timestamp}</div>
                        </div>
                    </div>
                \`;
            }
            
            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function addTypingIndicator() {
            const chatMessages = document.getElementById('chatMessages');
            const typingDiv = document.createElement('div');
            typingDiv.id = 'typingIndicator';
            typingDiv.innerHTML = \`
                <div class="flex items-start mb-4">
                    <div class="w-8 h-8 bg-purple-600 sharp-corner flex items-center justify-center mr-3 mt-1">
                        <i class="fas fa-robot text-white text-sm"></i>
                    </div>
                    <div class="bg-white p-3 minimal-corner shadow-sm">
                        <div class="flex space-x-1">
                            <div class="w-2 h-2 bg-slate-400 rounded-full animate-bounce"></div>
                            <div class="w-2 h-2 bg-slate-400 rounded-full animate-bounce" style="animation-delay: 0.1s;"></div>
                            <div class="w-2 h-2 bg-slate-400 rounded-full animate-bounce" style="animation-delay: 0.2s;"></div>
                        </div>
                    </div>
                </div>
            \`;
            
            chatMessages.appendChild(typingDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function removeTypingIndicator() {
            const typingIndicator = document.getElementById('typingIndicator');
            if (typingIndicator) {
                typingIndicator.remove();
            }
        }

        // AI Response Generator - API Integration
        async function getAIResponse(message) {
            try {
                const response = await fetch('/api/ai-chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        message: message,
                        sessionId: 'web_session_' + Date.now()
                    })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    return data.response;
                } else {
                    throw new Error(data.error || 'API hatasi');
                }
                
            } catch (error) {
                console.error('AI API error:', error);
                throw error;
            }
        }

        // =============================================================================
        // AI-POWERED SMART RECOMMENDATION ENGINE
        // =============================================================================

        // Service categories with their keywords and details
        const serviceCategories = {
            'ev_elektrigi': {
                name: 'Ev Elektrigi',
                icon: 'fas fa-bolt',
                color: 'yellow',
                priceRange: 'TL150-800',
                keywords: ['elektrik', 'priz', 'sigorta', 'kablo', 'ampul', 'lamba', 'salter', 'kacak', 'kesinti', 'voltaj'],
                description: 'Elektrik tesisati, priz takma, sigorta degistirme',
                whatsappMessage: 'Merhaba! Elektrik isi icin destek istiyorum.',
                urgency: { emergency: '30dk', urgent: '1-2 saat', normal: '2-4 saat' }
            },
            'beyaz_esya': {
                name: 'Beyaz Esya Tamiri',
                icon: 'fas fa-home',
                color: 'blue',
                priceRange: 'TL200-1200',
                keywords: ['buzdolabi', 'camasir makinesi', 'bulasik makinesi', 'firin', 'ocak', 'mikrodalga', 'klima', 'sogutmuyor', 'calismiyor'],
                description: 'Buzdolabi, camasir makinesi, bulasik makinesi tamiri',
                whatsappMessage: 'Merhaba! Beyaz esya tamiri icin yardim istiyorum.',
                urgency: { emergency: '1 saat', urgent: '2-4 saat', normal: '4-8 saat' }
            },
            'su_tesisati': {
                name: 'Su Tesisati',
                icon: 'fas fa-tint',
                color: 'blue',
                priceRange: 'TL100-600',
                keywords: ['musluk', 'tikaniklik', 'su kacagi', 'boru', 'sifon', 'klozet', 'rezervuar', 'damla', 'akiyor', 'tikali'],
                description: 'Musluk tamiri, tikaniklik acma, su kacagi',
                whatsappMessage: 'Merhaba! Su tesisati sorunu icin yardim istiyorum.',
                urgency: { emergency: '30dk', urgent: '1 saat', normal: '2-3 saat' }
            },
            'kombi_kalorifer': {
                name: 'Kombi & Kalorifer',
                icon: 'fas fa-fire',
                color: 'orange',
                priceRange: 'TL200-800',
                keywords: ['kombi', 'kalorifer', 'radyator', 'isinmiyor', 'sicak su', 'dogalgaz', 'petek', 'termostat'],
                description: 'Kombi tamiri, kalorifer bakimi, termostat ayari',
                whatsappMessage: 'Merhaba! Kombi/kalorifer sorunu icin destek istiyorum.',
                urgency: { emergency: '1 saat', urgent: '2-3 saat', normal: '4-6 saat' }
            },
            'elektronik': {
                name: 'Elektronik Tamiri',
                icon: 'fas fa-tv',
                color: 'purple',
                priceRange: 'TL150-1000',
                keywords: ['televizyon', 'tv', 'bilgisayar', 'pc', 'laptop', 'tablet', 'ses sistemi', 'goruntu yok', 'acilmiyor'],
                description: 'TV tamiri, bilgisayar tamiri, ses sistemi',
                whatsappMessage: 'Merhaba! Elektronik cihaz tamiri icin yardim istiyorum.',
                urgency: { emergency: '2 saat', urgent: '4-6 saat', normal: '1-2 gun' }
            },
            'temizlik': {
                name: 'Temizlik Hizmetleri',
                icon: 'fas fa-broom',
                color: 'green',
                priceRange: 'TL120-500',
                keywords: ['temizlik', 'ev temizligi', 'ofis temizligi', 'derin temizlik', 'cam silme', 'hali yikama'],
                description: 'Ev temizligi, ofis temizligi, derin temizlik',
                whatsappMessage: 'Merhaba! Temizlik hizmeti icin randevu istiyorum.',
                urgency: { emergency: '3 saat', urgent: '6-8 saat', normal: '1-2 gun' }
            },
            'boyama': {
                name: 'Boyama & Badana',
                icon: 'fas fa-paint-roller',
                color: 'indigo',
                priceRange: 'TL300-1500',
                keywords: ['boya', 'badana', 'duvar boyama', 'ic boyama', 'dis boyama', 'alcipan', 'macun'],
                description: 'Duvar boyama, badana, alcipan isleri',
                whatsappMessage: 'Merhaba! Boyama isi icin teklif istiyorum.',
                urgency: { emergency: '1-2 gun', urgent: '2-3 gun', normal: '3-5 gun' }
            },
            'kapi_pencere': {
                name: 'Kapi & Pencere',
                icon: 'fas fa-door-open',
                color: 'red',
                priceRange: 'TL150-800',
                keywords: ['kapi', 'pencere', 'kilit', 'kol', 'mentese', 'cam', 'acilmiyor', 'kapanmiyor', 'sikisiyor'],
                description: 'Kapi tamiri, kilit degistirme, pencere tamiri',
                whatsappMessage: 'Merhaba! Kapi/pencere tamiri icin yardim istiyorum.',
                urgency: { emergency: '1 saat', urgent: '2-4 saat', normal: '4-8 saat' }
            }
        };

        // AI-powered problem analysis function
        async function analyzeWithAI() {
            const problemText = document.getElementById('problemDescription').value.trim();
            const urgencyLevel = document.getElementById('urgencyLevel').value;
            const serviceLocation = document.getElementById('serviceLocation').value;

            if (!problemText) {
                alert('Lutfen probleminizi detayli bir sekilde anlatin.');
                return;
            }

            // Show loading state
            showAIState('loading');

            try {
                // Simulate AI analysis delay
                await new Promise(resolve => setTimeout(resolve, 2000));

                // Analyze problem text and match to service categories
                const analysisResult = analyzeUserProblem(problemText, urgencyLevel, serviceLocation);

                // Show results
                displayAIResults(analysisResult);

            } catch (error) {
                console.error('AI Analysis error:', error);
                alert('Analiz sirasinda bir hata olustu. Lutfen tekrar deneyin.');
                showAIState('default');
            }
        }

        // Smart text analysis algorithm
        function analyzeUserProblem(problemText, urgencyLevel, serviceLocation) {
            const text = problemText.toLowerCase();
            let categoryScores = {};
            let matches = [];

            // Score each category based on keyword matches
            for (const [categoryId, category] of Object.entries(serviceCategories)) {
                let score = 0;
                let matchedKeywords = [];

                // Check keyword matches
                for (const keyword of category.keywords) {
                    if (text.includes(keyword.toLowerCase())) {
                        score += keyword.length; // Longer keywords get higher scores
                        matchedKeywords.push(keyword);
                    }
                }

                if (score > 0) {
                    categoryScores[categoryId] = {
                        category: category,
                        score: score,
                        matchedKeywords: matchedKeywords,
                        confidence: Math.min(score * 10, 95) // Convert to percentage
                    };
                }
            }

            // Sort categories by score
            const sortedCategories = Object.entries(categoryScores)
                .sort(([,a], [,b]) => b.score - a.score);

            // Get top recommendation and alternatives
            const topRecommendation = sortedCategories[0];
            const alternatives = sortedCategories.slice(1, 3);

            // Generate AI insights
            const insights = generateAIInsights(problemText, topRecommendation, urgencyLevel);

            return {
                recommendation: topRecommendation ? topRecommendation[1] : null,
                alternatives: alternatives.map(([id, data]) => ({ id, ...data })),
                insights: insights,
                urgencyLevel: urgencyLevel,
                serviceLocation: serviceLocation,
                originalText: problemText
            };
        }

        // Generate contextual insights
        function generateAIInsights(problemText, topRecommendation, urgencyLevel) {
            const insights = [];

            if (!topRecommendation) {
                insights.push({
                    type: 'warning',
                    title: 'Kategori Belirlenemedi',
                    message: 'Probleminizi daha detayli anlatirsaniz size daha iyi yardimci olabilirim.'
                });
                return insights;
            }

            const category = topRecommendation[1].category;
            const confidence = topRecommendation[1].confidence;

            // Confidence-based insights
            if (confidence >= 80) {
                insights.push({
                    type: 'success',
                    title: 'Yuksek Eslesme',
                    message: \`Problem taniminiz \\"\${category.name}\\" kategorisiyle %\${confidence} uyumlu.\`
                });
            } else if (confidence >= 60) {
                insights.push({
                    type: 'info',
                    title: 'Olasi Eslesme',
                    message: \`Problem taniminiz buyuk ihtimalle \\"\${category.name}\\" kategorisinde.\`
                });
            }

            // Urgency-based insights
            if (urgencyLevel === 'emergency') {
                insights.push({
                    type: 'urgent',
                    title: 'Acil Durum',
                    message: \`Acil durumunuz icin \${category.urgency.emergency} icinde uzman destegi saglanabilir.\`
                });
            }

            // Price insights
            insights.push({
                type: 'price',
                title: 'Tahmini Maliyet',
                message: \`Bu kategori icin ortalama hizmet bedeli \${category.priceRange} arasindadir.\`
            });

            return insights;
        }

        // Display AI analysis results
        function displayAIResults(result) {
            showAIState('results');

            const recommendedCategory = document.getElementById('recommendedCategory');
            const alternativeOptions = document.getElementById('alternativeOptions');

            if (result.recommendation) {
                const category = result.recommendation.category;
                const confidence = result.recommendation.confidence;

                recommendedCategory.innerHTML = \`
                    <div class="flex items-center mb-3">
                        <div class="w-8 h-8 bg-\${category.color}-500 minimal-corner flex items-center justify-center mr-4">
                            <i class="\${category.icon} text-white text-xl"></i>
                        </div>
                        <div>
                            <h4 class="font-bold text-white text-lg">\${category.name}</h4>
                            <p class="text-green-200 text-sm">%\${confidence} Eslesme</p>
                        </div>
                    </div>
                    <p class="text-white text-sm mb-3">\${category.description}</p>
                    <div class="grid grid-cols-2 gap-3 text-xs">
                        <div class="bg-white/20 p-2 minimal-corner text-center">
                            <div class="text-white/80">Fiyat Araligi</div>
                            <div class="text-white font-bold">\${category.priceRange}</div>
                        </div>
                        <div class="bg-white/20 p-2 minimal-corner text-center">
                            <div class="text-white/80">Yanit Suresi</div>
                            <div class="text-white font-bold">\${category.urgency[result.urgencyLevel]}</div>
                        </div>
                    </div>
                \`;

                // Store recommendation for later use
                window.currentRecommendation = {
                    category: category,
                    details: result
                };
            } else {
                recommendedCategory.innerHTML = \`
                    <div class="text-center">
                        <i class="fas fa-question-circle text-white text-3xl mb-3"></i>
                        <h4 class="font-bold text-white text-2xl mb-2">Kategori Belirlenemedi</h4>
                        <p class="text-white text-sm">
                            Probleminizi daha detayli anlatirsaniz size daha iyi yardimci olabilirim.
                            Ornegin hangi cihaz, nerede, nasil bir sorun yasiyorsunuz?
                        </p>
                    </div>
                \`;
            }

            // Display alternatives
            if (result.alternatives && result.alternatives.length > 0) {
                alternativeOptions.innerHTML = result.alternatives.map(alt => \`
                    <div class="flex items-center justify-between p-2 bg-white/10 minimal-corner hover:bg-white/20 transition-colors duration-200 cursor-pointer"
                         onclick="selectAlternative('\${alt.id}')">
                        <div class="flex items-center">
                            <i class="\${alt.category.icon} text-blue-200 mr-2"></i>
                            <span class="text-blue-200 text-sm">\${alt.category.name}</span>
                        </div>
                        <span class="text-blue-300 text-xs">%\${alt.confidence}</span>
                    </div>
                \`).join('');
            } else {
                alternativeOptions.innerHTML = \`
                    <p class="text-blue-200 text-sm text-center">Baska kategori onerisi bulunamadi.</p>
                \`;
            }

            // Display insights
            if (result.insights && result.insights.length > 0) {
                const insightsHtml = result.insights.map(insight => \`
                    <div class="bg-white/10 p-3 minimal-corner mb-2">
                        <div class="font-bold text-white text-sm mb-1">\${insight.title}</div>
                        <div class="text-blue-100 text-xs">\${insight.message}</div>
                    </div>
                \`).join('');

                // Add insights below alternatives
                alternativeOptions.insertAdjacentHTML('afterend', \`
                    <div class="mt-4">
                        <h5 class="font-bold text-blue-300 text-sm mb-2">
                            <i class="fas fa-lightbulb mr-1"></i>AI Analiz Sonuclari
                        </h5>
                        \${insightsHtml}
                    </div>
                \`);
            }
        }

        // Proceed with recommended service
        function proceedWithRecommendation() {
            if (window.currentRecommendation) {
                const category = window.currentRecommendation.category;
                const details = window.currentRecommendation.details;
                
                // Show service options modal
                showServiceOptionsModal(category, details);
            }
        }

        // Show service options modal (Form vs WhatsApp)
        function showServiceOptionsModal(category, details) {
            // Create modal if not exists
            let modal = document.getElementById('serviceOptionsModal');
            if (modal) {
                modal.remove();
            }

            modal = document.createElement('div');
            modal.id = 'serviceOptionsModal';
            modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
            modal.innerHTML = '<div class="bg-white minimal-corner max-w-lg mx-4 p-8">' +
                '<div class="text-center mb-6">' +
                    '<div class="w-16 h-16 bg-' + category.color + '-500 minimal-corner mx-auto mb-4 flex items-center justify-center">' +
                        '<i class="' + category.icon + ' text-white text-2xl"></i>' +
                    '</div>' +
                    '<h3 class="text-2xl font-bold text-gray-800 mb-2">' + category.name + '</h3>' +
                    '<p class="text-gray-600">' + category.description + '</p>' +
                    '<div class="mt-4 p-4 bg-gray-50 minimal-corner">' +
                        '<div class="text-sm text-gray-600 mb-2">Tahmini Maliyet</div>' +
                        '<div class="text-xl font-bold text-' + category.color + '-600">' + category.priceRange + '</div>' +
                    '</div>' +
                '</div>' +
                '<div class="space-y-4">' +
                    '<h4 class="text-lg font-bold text-gray-800 text-center mb-4">Nasil devam etmek istiyorsunuz?</h4>' +
                    '<button onclick="proceedWithWhatsApp(\'' + category.whatsappMessage + '\', \'' + (details.originalText || '') + '\')" class="w-full bg-green-500 hover:bg-green-600 text-white p-4 minimal-corner transition duration-200 flex items-center justify-center group">' +
                        '<i class="fab fa-whatsapp text-2xl mr-3 group-hover:animate-pulse"></i>' +
                        '<div class="text-left">' +
                            '<div class="font-bold">WhatsApp ile Hizli Teklif</div>' +
                            '<div class="text-sm opacity-90">5 dakikada teklif alin</div>' +
                        '</div>' +
                    '</button>' +
                    '<button onclick="proceedWithForm(\'' + JSON.stringify({category, details}).replace(/"/g, '&quot;') + '\')" class="w-full bg-blue-600 hover:bg-blue-700 text-white p-4 minimal-corner transition duration-200 flex items-center justify-center">' +
                        '<i class="fas fa-file-alt text-xl mr-3"></i>' +
                        '<div class="text-left">' +
                            '<div class="font-bold">Detayli Form Doldur</div>' +
                            '<div class="text-sm opacity-90">Kapsamli teklif icin</div>' +
                        '</div>' +
                    '</button>' +
                    '<button onclick="closeServiceOptionsModal()" class="w-full border-2 border-gray-300 text-gray-600 hover:bg-gray-50 p-3 minimal-corner transition duration-200">Iptal Et</button>' +
                '</div>' +
            '</div>';
            
            document.body.appendChild(modal);

            // Close on outside click
            modal.addEventListener('click', (e) => {
                if (e.target === modal) {
                    closeServiceOptionsModal();
                }
            });
        }

        // Proceed with WhatsApp
        function proceedWithWhatsApp(baseMessage, problemDescription) {
            const enhancedMessage = baseMessage + (problemDescription ? ('\n\nProbleminiz: ' + problemDescription) : '');
            const encodedMessage = encodeURIComponent(enhancedMessage);
            const whatsappUrl = 'https://wa.me/905001234567?text=' + encodedMessage;
            
            // Open WhatsApp
            window.open(whatsappUrl, '_blank');
            
            // Close modal
            closeServiceOptionsModal();
            
            // Show success notification
            showNotification('WhatsApp uzerinden size ulasacagiz! 5 dakika icinde uzmanimiz sizinle iletisime gececek.', 'success');
        }

        // Proceed with form
        function proceedWithForm(dataStr) {
            try {
                const data = JSON.parse(dataStr.replace(/&quot;/g, '"'));
                const category = data.category;
                const details = data.details;
                
                // Pre-fill the service form with AI recommendation
                fillServiceForm(category, details);
                
                // Close modal
                closeServiceOptionsModal();
                
                // Scroll to service form
                document.getElementById('hizmet-al').scrollIntoView({ behavior: 'smooth' });
                
                // Show success notification
                showNotification('AI onerisi form alanlarina aktarildi! Kisisel bilgilerinizi tamamlayip talebinizi gonderebilirsiniz.', 'success');
            } catch (error) {
                console.error('Form proceed error:', error);
                closeServiceOptionsModal();
                scrollToServices();
            }
        }

        // Close service options modal
        function closeServiceOptionsModal() {
            const modal = document.getElementById('serviceOptionsModal');
            if (modal) {
                modal.remove();
            }
        }

        // Try different analysis
        function tryDifferentAnalysis() {
            showAIState('default');
            document.getElementById('problemDescription').focus();
        }

        // Select alternative category
        function selectAlternative(categoryId) {
            const category = serviceCategories[categoryId];
            if (category) {
                window.currentRecommendation = {
                    category: category,
                    details: { serviceLocation: document.getElementById('serviceLocation').value }
                };
                proceedWithRecommendation();
            }
        }

        // Fill service form with AI recommendation
        function fillServiceForm(category, details) {
            // Fill service category
            const serviceSelect = document.querySelector('select[name="serviceCategory"]');
            if (serviceSelect) {
                // Try to match category name to select options
                for (let option of serviceSelect.options) {
                    if (option.text.toLowerCase().includes(category.name.toLowerCase().split(' ')[0])) {
                        serviceSelect.value = option.value;
                        break;
                    }
                }
            }

            // Fill problem description
            const problemDesc = document.querySelector('textarea[name="problemDescription"]');
            if (problemDesc && details.originalText) {
                problemDesc.value = details.originalText;
            }

            // Show success message
            showNotification('AI onerisi form alanlarina aktarildi! Kisisel bilgilerinizi tamamlayip talebinizi gonderebilirsiniz.', 'success');
        }

        // AI state management
        function showAIState(state) {
            const states = ['default', 'loading', 'results'];
            states.forEach(s => {
                const element = document.getElementById(\`ai\${s.charAt(0).toUpperCase() + s.slice(1)}State\`);
                if (element) {
                    element.classList.toggle('hidden', s !== state);
                }
            });
        }

        // Notification system
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = \`fixed top-4 right-4 p-4 minimal-corner z-50 max-w-sm \${
                type === 'success' ? 'bg-green-500 text-white' : 
                type === 'error' ? 'bg-red-500 text-white' : 
                'bg-blue-500 text-white'
            }\`;
            notification.innerHTML = \`
                <div class="flex items-center justify-between">
                    <span class="text-sm">\${message}</span>
                    <button onclick="this.parentElement.parentElement.remove()" class="ml-3 text-white/80 hover:text-white">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            \`;
            
            document.body.appendChild(notification);
            
            // Auto remove after 5 seconds
            setTimeout(() => {
                if (notification.parentElement) {
                    notification.remove();
                }
            }, 5000);
        }

        // =============================================================================
        // SOCIAL PROOF ENHANCEMENT SYSTEM
        // =============================================================================

        // Live service completion notifications data
        const serviceCompletions = [
            {
                customerName: 'Mehmet A.',
                location: 'Istanbul, Kadikoy',
                service: 'Camasir Makinesi Tamiri',
                rating: 5,
                price: 'TL450',
                duration: '2 saat',
                technician: 'Ahmet Usta',
                category: 'beyaz-esya'
            },
            {
                customerName: 'Ayse K.',
                location: 'Ankara, Cankaya',
                service: 'Elektrik Tesisati',
                rating: 5,
                price: 'TL280',
                duration: '1.5 saat',
                technician: 'Osman Usta',
                category: 'elektrik'
            },
            {
                customerName: 'Fatma D.',
                location: 'Izmir, Bornova',
                service: 'Su Tesisati Tamiri',
                rating: 5,
                price: 'TL320',
                duration: '45 dakika',
                technician: 'Mustafa Usta',
                category: 'su-tesisati'
            },
            {
                customerName: 'Ali S.',
                location: 'Bursa, Osmangazi',
                service: 'Kombi Servisi',
                rating: 5,
                price: 'TL680',
                duration: '3 saat',
                technician: 'Hasan Usta',
                category: 'kombi'
            },
            {
                customerName: 'Zeynep T.',
                location: 'Antalya, Muratpasa',
                service: 'Klima Temizligi',
                rating: 5,
                price: 'TL200',
                duration: '1 saat',
                technician: 'Emre Usta',
                category: 'klima'
            },
            {
                customerName: 'Okan Y.',
                location: 'Adana, Seyhan',
                service: 'TV Tamiri',
                rating: 5,
                price: 'TL520',
                duration: '2.5 saat',
                technician: 'Kemal Usta',
                category: 'elektronik'
            },
            {
                customerName: 'Elif M.',
                location: 'Konya, Selcuklu',
                service: 'Bulasik Makinesi',
                rating: 5,
                price: 'TL390',
                duration: '1.5 saat',
                technician: 'Serkan Usta',
                category: 'beyaz-esya'
            },
            {
                customerName: 'Huseyin B.',
                location: 'Gaziantep, Sahinbey',
                service: 'Kapi Kilidi Degisimi',
                rating: 5,
                price: 'TL180',
                duration: '30 dakika',
                technician: 'Yasin Usta',
                category: 'kapi-pencere'
            }
        ];

        // Add live service completion
        function addServiceCompletion() {
            const feed = document.getElementById('completionsFeed');
            if (!feed) return;

            // Select random completion
            const completion = serviceCompletions[Math.floor(Math.random() * serviceCompletions.length)];
            
            // Create completion element
            const completionElement = document.createElement('div');
            completionElement.className = 'p-4 hover:bg-gray-50 transition-colors duration-200 cursor-pointer';
            
            // Get current time
            const now = new Date();
            const timeString = now.toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit' });
            
            completionElement.innerHTML = \`
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-4">
                        <!-- Completion Status -->
                        <div class="w-10 h-10 bg-green-500 minimal-corner flex items-center justify-center">
                            <i class="fas fa-check text-white text-sm"></i>
                        </div>
                        
                        <!-- Service Details -->
                        <div>
                            <div class="flex items-center space-x-2 mb-1">
                                <span class="font-bold text-gray-800 text-sm">\${completion.customerName}</span>
                                <span class="text-gray-500 text-xs">-</span>
                                <span class="text-gray-600 text-xs">\${completion.location}</span>
                            </div>
                            <div class="text-gray-700 text-sm font-medium mb-1">\${completion.service}</div>
                            <div class="flex items-center space-x-4 text-xs text-gray-500">
                                <span><i class="fas fa-clock mr-1"></i>\${completion.duration}</span>
                                <span><i class="fas fa-user mr-1"></i>\${completion.technician}</span>
                                <span><i class="fas fa-money-bill-wave mr-1"></i>\${completion.price}</span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Rating and Time -->
                    <div class="text-right">
                        <div class="flex items-center justify-end mb-1">
                            <div class="flex text-yellow-400 text-xs mr-1">
                                \${'<i class="fas fa-star"></i>'.repeat(completion.rating)}
                            </div>
                            <span class="text-gray-600 text-xs">\${completion.rating}.0</span>
                        </div>
                        <div class="text-xs text-green-600 font-medium">
                            <i class="fas fa-clock mr-1"></i>\${timeString}
                        </div>
                        <div class="text-xs text-gray-500">Tamamlandi</div>
                    </div>
                </div>
            \`;

            // Add slide-in animation
            completionElement.style.opacity = '0';
            completionElement.style.transform = 'translateY(-10px)';
            
            feed.insertBefore(completionElement, feed.firstChild);

            // Animate in
            setTimeout(() => {
                completionElement.style.opacity = '1';
                completionElement.style.transform = 'translateY(0)';
                completionElement.style.transition = 'all 0.3s ease-out';
            }, 50);

            // Keep only last 8 completions
            while (feed.children.length > 8) {
                feed.removeChild(feed.lastChild);
            }

            // Update live user count
            updateLiveStats();
        }

        // Update live statistics
        function updateLiveStats() {
            // Update live user count (fluctuate between 35-55)
            const liveUserCountEl = document.getElementById('liveUserCount');
            if (liveUserCountEl) {
                const currentCount = parseInt(liveUserCountEl.textContent) || 47;
                const change = Math.floor(Math.random() * 3) - 1; // -1, 0, or 1
                const newCount = Math.max(35, Math.min(55, currentCount + change));
                liveUserCountEl.textContent = newCount;
            }

            // Update today's services (gradually increase)
            const todayServicesEl = document.getElementById('todayServices');
            if (todayServicesEl) {
                const currentCount = parseInt(todayServicesEl.textContent) || 284;
                if (Math.random() < 0.3) { // 30% chance to increase
                    todayServicesEl.textContent = currentCount + 1;
                }
            }

            // Update average rating (stay around 4.9)
            const avgRatingEl = document.getElementById('avgRating');
            if (avgRatingEl) {
                const ratings = [4.8, 4.9, 5.0];
                const randomRating = ratings[Math.floor(Math.random() * ratings.length)];
                avgRatingEl.textContent = randomRating;
            }

            // Update response time (vary between 8-15 minutes)
            const responseTimeEl = document.getElementById('responseTime');
            if (responseTimeEl) {
                const times = ['8dk', '10dk', '12dk', '15dk'];
                const randomTime = times[Math.floor(Math.random() * times.length)];
                responseTimeEl.textContent = randomTime;
            }

            // Update monthly services (gradual increase)
            const monthlyServicesEl = document.getElementById('monthlyServices');
            if (monthlyServicesEl) {
                const currentCount = parseFloat(monthlyServicesEl.textContent.replace('K', '')) || 8.4;
                if (Math.random() < 0.1) { // 10% chance to increase
                    const newCount = (currentCount + 0.1).toFixed(1);
                    monthlyServicesEl.textContent = newCount + 'K';
                }
            }
        }

        // Initialize social proof system
        function initializeSocialProof() {
            // Add initial service completions with varying delays
            for (let i = 0; i < 6; i++) {
                setTimeout(() => addServiceCompletion(), i * 800);
            }
        }

        // Real-time social proof notifications (floating notifications)
        function showSocialProofNotification() {
            const notifications = [
                {
                    icon: 'fas fa-user-check',
                    color: 'bg-green-500',
                    message: 'Ahmet K.     Elektrik hizmeti aldi',
                    location: 'Istanbul'
                },
                {
                    icon: 'fas fa-star',
                    color: 'bg-yellow-500',
                    message: 'Ayse D. 5  puan verdi',
                    location: 'Ankara'
                },
                {
                    icon: 'fas fa-check-circle',
                    color: 'bg-blue-500',
                    message: 'Mehmet S. hizmetini tamamladi',
                    location: 'Izmir'
                },
                {
                    icon: 'fas fa-handshake',
                    color: 'bg-purple-500',
                    message: 'Fatma A. uzman ile eslesti',
                    location: 'Bursa'
                }
            ];

            // Remove existing notification
            const existingNotification = document.getElementById('socialProofNotification');
            if (existingNotification) {
                existingNotification.remove();
            }

            // Select random notification
            const notification = notifications[Math.floor(Math.random() * notifications.length)];

            // Create notification element
            const notificationEl = document.createElement('div');
            notificationEl.id = 'socialProofNotification';
            notificationEl.className = \`fixed bottom-20 left-4 \${notification.color} text-white p-4 minimal-corner z-40 max-w-xs shadow-lg transform -translate-x-full transition-transform duration-500\`;
            
            notificationEl.innerHTML = \`
                <div class="flex items-center space-x-3">
                    <div class="w-8 h-8 bg-white/20 minimal-corner flex items-center justify-center">
                        <i class="\${notification.icon} text-sm"></i>
                    </div>
                    <div>
                        <div class="text-sm font-medium">\${notification.message}</div>
                        <div class="text-xs opacity-80">\${notification.location} - Simdi</div>
                    </div>
                </div>
            \`;

            document.body.appendChild(notificationEl);

            // Animate in
            setTimeout(() => {
                notificationEl.style.transform = 'translateX(0)';
            }, 100);

            // Auto remove after 4 seconds
            setTimeout(() => {
                notificationEl.style.transform = 'translateX(-100%)';
                setTimeout(() => {
                    if (notificationEl.parentElement) {
                        notificationEl.remove();
                    }
                }, 500);
            }, 4000);
        }

        // Live Comments System
        function initializeLiveComments() {
            // Add initial comments with varying delays
            for (let i = 0; i < 4; i++) {
                setTimeout(() => addLiveComment(), i * 1200);
            }
            
            // Update live user count
            updateLiveUserCount();
        }

        function addLiveComment() {
            const comments = [
                {
                    name: 'Zeynep K.',
                    location: 'İstanbul',
                    comment: 'Klima tamiri için çağırdığım usta çok profesyoneldi, teşekkürler! ⭐⭐⭐⭐⭐',
                    time: 'şimdi'
                },
                {
                    name: 'Murat A.',
                    location: 'Ankara', 
                    comment: 'Elektrik problemi 2 saatte çözüldü, fiyat da uygundu 👍',
                    time: '1dk önce'
                },
                {
                    name: 'Ayşe D.',
                    location: 'İzmir',
                    comment: 'Ev temizliği hizmeti mükemmeldi, kesinlikle tekrar kullanacağım!',
                    time: '2dk önce'
                },
                {
                    name: 'Hasan M.',
                    location: 'Bursa',
                    comment: 'Su kaçağı sorunu anında çözüldü, çok memnunum 💯',
                    time: '3dk önce'
                },
                {
                    name: 'Elif S.',
                    location: 'Antalya',
                    comment: 'Boyacı usta işini çok güzel yaptı, herkese tavsiye ederim!',
                    time: '4dk önce'
                },
                {
                    name: 'Ali R.',
                    location: 'Gaziantep',
                    comment: 'Kombi bakımı için gelen usta çok bilgiliydi ⭐⭐⭐⭐⭐',
                    time: '5dk önce'
                },
                {
                    name: 'Fatma T.',
                    location: 'Konya',
                    comment: 'Buzdolabı tamiri mükemmel oldu, çok teşekkürler! 🙏',
                    time: '6dk önce'
                },
                {
                    name: 'Mehmet G.',
                    location: 'Adana',
                    comment: 'Kapı-pencere montajı profesyonel yapıldı 👌',
                    time: '7dk önce'
                }
            ];

            const container = document.getElementById('liveComments');
            if (!container) return;

            const comment = comments[Math.floor(Math.random() * comments.length)];
            
            const commentEl = document.createElement('div');
            commentEl.className = 'bg-white/10 backdrop-blur-sm border border-white/20 rounded-xl p-4 opacity-0 transform translate-y-4 transition-all duration-500';
            
            commentEl.innerHTML = \`
                <div class="flex items-start space-x-3">
                    <div class="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white font-bold text-sm">
                        \${comment.name.charAt(0)}
                    </div>
                    <div class="flex-1">
                        <div class="flex items-center justify-between mb-1">
                            <span class="font-semibold text-white">\${comment.name}</span>
                            <span class="text-xs text-blue-300">\${comment.time}</span>
                        </div>
                        <div class="text-xs text-blue-200 mb-2">\${comment.location}</div>
                        <div class="text-blue-100 text-sm">\${comment.comment}</div>
                    </div>
                </div>
            \`;

            container.insertBefore(commentEl, container.firstChild);
            
            // Animate in
            setTimeout(() => {
                commentEl.classList.remove('opacity-0', 'translate-y-4');
            }, 100);

            // Remove old comments (keep only 5)
            const comments_list = container.children;
            while (comments_list.length > 5) {
                const oldComment = comments_list[comments_list.length - 1];
                oldComment.style.opacity = '0';
                oldComment.style.transform = 'translateY(-20px)';
                setTimeout(() => {
                    if (oldComment.parentElement) {
                        oldComment.remove();
                    }
                }, 500);
            }
        }

        function updateLiveUserCount() {
            // Update live user count
            const userCounter = document.getElementById('liveUserCount');
            if (userCounter) {
                const baseCount = 157;  // Realistic online user count
                const variation = Math.floor(Math.random() * 30) - 15; // ±15 (142-172 range)
                const newCount = baseCount + variation;
                userCounter.textContent = newCount.toLocaleString('tr-TR');
                
                // Add pulse effect
                userCounter.classList.add('animate-pulse');
                setTimeout(() => {
                    userCounter.classList.remove('animate-pulse');
                }, 1000);
            }
            
            // Update active services - AYNI DEĞER İKİ YERDE
            const minServices = 28;    // Realistic active service providers
            const maxServices = 67;    // Max 67 active providers (believable)
            const newServices = Math.floor(Math.random() * (maxServices - minServices + 1)) + minServices;
            const formattedServices = newServices.toLocaleString('tr-TR');
            
            // 1. Mutlu müşteriler bölümündeki AKTİF HİZMET
            const servicesCounter = document.getElementById('activeServices');
            if (servicesCounter) {
                servicesCounter.textContent = formattedServices;
                
                // Add pulse effect
                servicesCounter.classList.add('animate-pulse');
                setTimeout(() => {
                    servicesCounter.classList.remove('animate-pulse');
                }, 1000);
            }
            
            // 2. İstatistikler bölümündeki AKTİF HİZMET VEREN
            const activeDealers = document.getElementById('active-dealers');
            if (activeDealers) {
                activeDealers.textContent = formattedServices;
                
                // Add pulse effect
                activeDealers.classList.add('animate-pulse');
                setTimeout(() => {
                    activeDealers.classList.remove('animate-pulse');
                }, 1000);
            }
            
            // Update online experts
            const expertsCounter = document.getElementById('onlineExperts');
            if (expertsCounter) {
                const baseExperts = 23;  // Realistic online expert count
                const variation = Math.floor(Math.random() * 8) - 4; // ±4 (19-27 range)
                const newExperts = baseExperts + variation;
                expertsCounter.textContent = newExperts.toLocaleString('tr-TR');
                
                // Add pulse effect
                expertsCounter.classList.add('animate-pulse');
                setTimeout(() => {
                    expertsCounter.classList.remove('animate-pulse');
                }, 1000);
            }
        }

        // Auto-sliding customer reviews
        let currentSlideIndex = 0;
        
        function initializeAutoSlideReviews() {
            const reviews = [
                // Reviews data will be duplicated to create seamless loop
                {
                    name: 'Ayse K.', location: 'Istanbul', 
                    comment: 'Camasir makinesi tamiri cok basarili. 2 saatte geldi, 1 saatte tamir etti. Kesinlikle tavsiye ederim!',
                    category: 'Beyaz Esya', date: '15 Eylul',
                    avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b3bb?w=32&h=32&fit=crop&crop=face&auto=format&q=80',
                    bgColor: 'bg-blue-50', textColor: 'text-blue-600'
                },
                {
                    name: 'Mehmet O.', location: 'Ankara',
                    comment: 'Elektrik arizasi gece vakti cozuldu. 45 dakikada geldi, 6 ay garanti verdi. Profesyonel hizmet!',
                    category: 'Elektrik', date: '18 Eylul',
                    avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=32&h=32&fit=crop&crop=face&auto=format&q=80',
                    bgColor: 'bg-yellow-50', textColor: 'text-yellow-600'
                },
                {
                    name: 'Zeynep D.', location: 'Izmir',
                    comment: 'Kombi arizasi kis ortasinda cozuldu. 1 saatte teknisyen buldum. Is kalitesi mukemmel!',
                    category: 'Kombi', date: '14 Eylul',
                    avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=32&h=32&fit=crop&crop=face&auto=format&q=80',
                    bgColor: 'bg-orange-50', textColor: 'text-orange-600'
                }
            ];

            const container = document.getElementById('autoSlideReviews');
            if (!container) return;

            // Create all review cards (duplicate set for seamless loop)
            const allReviews = [...reviews, ...reviews]; // Double for seamless loop
            
            allReviews.forEach(review => {
                const reviewEl = document.createElement('div');
                reviewEl.className = 'bg-white p-4 rounded-lg shadow border border-gray-100 w-64 flex-shrink-0';
                
                reviewEl.innerHTML = \`
                    <div class="flex items-center mb-2">
                        <img src="\${review.avatar}" alt="\${review.name}" class="w-8 h-8 rounded-full mr-2">
                        <div class="flex-1">
                            <div class="font-medium text-sm text-gray-800">\${review.name}</div>
                            <div class="text-xs text-gray-500">\${review.location}</div>
                        </div>
                        <div class="flex text-yellow-400 text-xs">
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                        </div>
                    </div>
                    <p class="text-xs text-gray-600 leading-relaxed">
                        "\${review.comment}"
                    </p>
                    <div class="flex justify-between items-center mt-2">
                        <span class="\${review.bgColor} \${review.textColor} px-2 py-1 rounded text-xs">\${review.category}</span>
                        <span class="text-xs text-gray-400">\${review.date}</span>
                    </div>
                \`;
                
                container.appendChild(reviewEl);
            });
        }

        function autoSlideReviews() {
            const container = document.getElementById('autoSlideReviews');
            if (!container) return;

            const cardWidth = 272; // 256px + 16px margin
            currentSlideIndex++;
            
            // Reset to beginning for seamless loop (when reaching halfway point)
            if (currentSlideIndex >= 3) {
                currentSlideIndex = 0;
                container.style.transition = 'none';
                container.style.transform = 'translateX(0px)';
                
                // Re-enable transition after a brief moment
                setTimeout(() => {
                    container.style.transition = 'transform 500ms ease-in-out';
                }, 50);
                return;
            }
            
            const translateX = -(currentSlideIndex * cardWidth);
            container.style.transform = \`translateX(\${translateX}px)\`;
        }

        // Missing Live Notifications Functions - RESTORED
        window.populateCityOpportunities = function() {
            // Populate city opportunities in the stats section
            console.log('Populating city opportunities...');
        }
        
        // Anlık talep fonksiyonları kaldırıldı - müşteri arayüzünden çıkarıldı
        
        window.updateStats = function() {
            // Update various statistics counters
            const dailyJobs = document.getElementById('daily-jobs');
            const activeDealer = document.getElementById('active-dealers');
            const avgResponse = document.getElementById('avg-response');
            const recentCount = document.getElementById('recent-count');
            
            if (dailyJobs) {
                const current = parseInt(dailyJobs.textContent) || 357;
                dailyJobs.textContent = current + Math.floor(Math.random() * 3);
            }
            
            if (activeDealer) {
                const current = parseInt(activeDealer.textContent.replace(',', '')) || 1247;
                const change = Math.floor(Math.random() * 5) - 2; // -2 to +2
                activeDealer.textContent = (current + change).toLocaleString('tr-TR');
            }
            
            if (avgResponse) {
                const times = [10, 11, 12, 13, 14, 15];
                avgResponse.textContent = times[Math.floor(Math.random() * times.length)];
            }
            
            if (recentCount) {
                const count = Math.floor(Math.random() * 5) + 8; // 8-12
                recentCount.textContent = count;
            }
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded, starting all systems...');
            
            // Anlık talep başlatma kodu kaldırıldı
            
            if (window.populateCityOpportunities) window.populateCityOpportunities();
            initializeSocialProof();
            initializeLiveComments();
            initializeAutoSlideReviews();
            
            // Update stats every 10 seconds
            setInterval(updateStats, 10000);
            
            // Update live stats every 15 seconds (original + social proof)
            setInterval(updateLiveStats, 15000);
            
            // Anlık talep interval kodu kaldırıldı
            
            // Add service completions every 12 seconds
            setInterval(addServiceCompletion, 12000);
            
            // Show social proof notifications every 20 seconds
            setInterval(showSocialProofNotification, 20000);
            
            // Show first social proof notification after 5 seconds
            setTimeout(showSocialProofNotification, 5000);
            
            // Add live comments every 6 seconds
            setInterval(addLiveComment, 6000);
            
            // Update live user count every 30 seconds
            setInterval(updateLiveUserCount, 30000);
            
            // Auto-slide reviews every 4 seconds
            setInterval(autoSlideReviews, 4000);
        });

        // Show all 81 cities modal
        function showAllCities() {
            // Create modal if not exists
            let modal = document.getElementById('citiesModal');
            if (!modal) {
                modal = document.createElement('div');
                modal.id = 'citiesModal';
                modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden';
                modal.innerHTML = 
                    '<div class="bg-white minimal-corner max-w-6xl max-h-[90vh] overflow-y-auto m-4 relative">' +
                        '<div class="sticky top-0 bg-white border-b border-slate-200 p-6 flex justify-between items-center">' +
                            '<div>' +
                                '<h2 class="text-2xl font-bold text-slate-800">TURKIYE GENELI HIZMET FIYATLARI</h2>' +
                                '<p class="text-slate-600 mt-1">81 ilde guncel fiyatlar ve hizmet kalitesi</p>' +
                            '</div>' +
                            '<button onclick="closeAllCities()" class="text-slate-400 hover:text-slate-600 text-2xl">' +
                                '<i class="fas fa-times"></i>' +
                            '</button>' +
                        '</div>' +
                        '<div class="p-6" id="allCitiesContainer">' +
                            '<!-- All cities will be populated here -->' +
                        '</div>' +
                    '</div>';
                document.body.appendChild(modal);
            }

            // Populate all 81 cities
            const allCitiesContainer = document.getElementById('allCitiesContainer');
            const allCities = [
                // Major cities
                { name: 'Istanbul', avgPrice: 'TL280-450', responseTime: '2-4 saat', satisfaction: '4.8', region: 'Marmara' },
                { name: 'Ankara', avgPrice: 'TL240-380', responseTime: '1-3 saat', satisfaction: '4.7', region: 'Ic Anadolu' },
                { name: 'Izmir', avgPrice: 'TL250-400', responseTime: '2-4 saat', satisfaction: '4.9', region: 'Ege' },
                { name: 'Bursa', avgPrice: 'TL220-350', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Marmara' },
                { name: 'Antalya', avgPrice: 'TL260-420', responseTime: '2-3 saat', satisfaction: '4.6', region: 'Akdeniz' },
                { name: 'Adana', avgPrice: 'TL210-340', responseTime: '1-3 saat', satisfaction: '4.7', region: 'Akdeniz' },
                
                // Additional cities (75 more cities)
                { name: 'Konya', avgPrice: 'TL200-320', responseTime: '1-2 saat', satisfaction: '4.9', region: 'Ic Anadolu' },
                { name: 'Gaziantep', avgPrice: 'TL190-310', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Guneydogu Anadolu' },
                { name: 'Sanliurfa', avgPrice: 'TL160-270', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Guneydogu Anadolu' },
                { name: 'Kocaeli', avgPrice: 'TL230-360', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Marmara' },
                { name: 'Mersin', avgPrice: 'TL220-340', responseTime: '1-3 saat', satisfaction: '4.7', region: 'Akdeniz' },
                { name: 'Diyarbakir', avgPrice: 'TL170-280', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Guneydogu Anadolu' },
                { name: 'Kayseri', avgPrice: 'TL180-290', responseTime: '30dk-2 saat', satisfaction: '4.9', region: 'Ic Anadolu' },
                { name: 'Eskisehir', avgPrice: 'TL200-320', responseTime: '45dk-2 saat', satisfaction: '4.8', region: 'Ic Anadolu' },
                { name: 'Erzurum', avgPrice: 'TL150-250', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Dogu Anadolu' },
                { name: 'Elazig', avgPrice: 'TL160-260', responseTime: '45dk-2 saat', satisfaction: '4.7', region: 'Dogu Anadolu' },
                { name: 'Malatya', avgPrice: 'TL170-280', responseTime: '45dk-2 saat', satisfaction: '4.8', region: 'Dogu Anadolu' },
                { name: 'Manisa', avgPrice: 'TL190-300', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Ege' },
                { name: 'Samsun', avgPrice: 'TL190-310', responseTime: '1-3 saat', satisfaction: '4.6', region: 'Karadeniz' },
                { name: 'Van', avgPrice: 'TL140-240', responseTime: '1-3 saat', satisfaction: '4.6', region: 'Dogu Anadolu' },
                { name: 'Aydin', avgPrice: 'TL180-290', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Ege' },
                { name: 'Balikesir', avgPrice: 'TL170-280', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Marmara' },
                { name: 'Denizli', avgPrice: 'TL180-300', responseTime: '30dk-2 saat', satisfaction: '4.9', region: 'Ege' },
                { name: 'Trabzon', avgPrice: 'TL180-290', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Karadeniz' },
                { name: 'Ordu', avgPrice: 'TL160-270', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Karadeniz' },
                { name: 'Mugla', avgPrice: 'TL210-340', responseTime: '1-3 saat', satisfaction: '4.6', region: 'Ege' },
                { name: 'Tekirdag', avgPrice: 'TL200-320', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Marmara' },
                { name: 'Sakarya', avgPrice: 'TL210-330', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Marmara' },
                { name: 'Afyonkarahisar', avgPrice: 'TL160-260', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Ege' },
                { name: 'Mardin', avgPrice: 'TL150-250', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Guneydogu Anadolu' },
                { name: 'Kahramanmaras', avgPrice: 'TL170-280', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Akdeniz' },
                { name: 'Zonguldak', avgPrice: 'TL170-280', responseTime: '1-2 saat', satisfaction: '4.6', region: 'Karadeniz' },
                { name: 'Batman', avgPrice: 'TL140-240', responseTime: '1-2 saat', satisfaction: '4.6', region: 'Guneydogu Anadolu' },
                { name: 'Usak', avgPrice: 'TL160-260', responseTime: '45dk-2 saat', satisfaction: '4.8', region: 'Ege' },
                { name: 'Duzce', avgPrice: 'TL180-290', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Karadeniz' },
                { name: 'Bolu', avgPrice: 'TL170-280', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Karadeniz' },
                { name: 'Isparta', avgPrice: 'TL160-270', responseTime: '45dk-2 saat', satisfaction: '4.8', region: 'Akdeniz' },
                { name: 'Corum', avgPrice: 'TL160-260', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Ic Anadolu' },
                { name: 'Tokat', avgPrice: 'TL150-250', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Karadeniz' },
                { name: 'Kirklareli', avgPrice: 'TL180-290', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Marmara' },
                { name: 'Rize', avgPrice: 'TL170-280', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Karadeniz' },
                { name: 'Edirne', avgPrice: 'TL180-290', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Marmara' },
                
                // Complete the remaining cities to reach 81
                { name: 'Aksaray', avgPrice: 'TL140-240', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Ic Anadolu' },
                { name: 'Amasya', avgPrice: 'TL150-250', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Karadeniz' },
                { name: 'Artvin', avgPrice: 'TL150-250', responseTime: '1-3 saat', satisfaction: '4.6', region: 'Karadeniz' },
                { name: 'Bilecik', avgPrice: 'TL170-280', responseTime: '45dk-2 saat', satisfaction: '4.7', region: 'Marmara' },
                { name: 'Bingol', avgPrice: 'TL130-230', responseTime: '1-2 saat', satisfaction: '4.6', region: 'Dogu Anadolu' },
                { name: 'Bitlis', avgPrice: 'TL130-230', responseTime: '1-2 saat', satisfaction: '4.5', region: 'Dogu Anadolu' },
                { name: 'Burdur', avgPrice: 'TL150-250', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Akdeniz' },
                { name: 'Canakkale', avgPrice: 'TL170-280', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Marmara' },
                { name: 'Cankiri', avgPrice: 'TL140-240', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Ic Anadolu' },
                { name: 'Giresun', avgPrice: 'TL160-260', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Karadeniz' },
                { name: 'Gumushane', avgPrice: 'TL140-240', responseTime: '1-2 saat', satisfaction: '4.6', region: 'Karadeniz' },
                { name: 'Hakkari', avgPrice: 'TL120-220', responseTime: '2-4 saat', satisfaction: '4.4', region: 'Dogu Anadolu' },
                { name: 'Hatay', avgPrice: 'TL190-310', responseTime: '1-3 saat', satisfaction: '4.6', region: 'Akdeniz' },
                { name: 'Igdir', avgPrice: 'TL130-230', responseTime: '1-3 saat', satisfaction: '4.5', region: 'Dogu Anadolu' },
                { name: 'Karaman', avgPrice: 'TL150-250', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Ic Anadolu' },
                { name: 'Kars', avgPrice: 'TL130-230', responseTime: '1-3 saat', satisfaction: '4.5', region: 'Dogu Anadolu' },
                { name: 'Kastamonu', avgPrice: 'TL150-250', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Karadeniz' },
                { name: 'Kirikkale', avgPrice: 'TL150-250', responseTime: '1-2 saat', satisfaction: '4.6', region: 'Ic Anadolu' },
                { name: 'Kirsehir', avgPrice: 'TL140-240', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Ic Anadolu' },
                { name: 'Kutahya', avgPrice: 'TL160-260', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Ege' },
                { name: 'Nevsehir', avgPrice: 'TL150-250', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Ic Anadolu' },
                { name: 'Nigde', avgPrice: 'TL140-240', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Ic Anadolu' },
                { name: 'Siirt', avgPrice: 'TL130-230', responseTime: '1-2 saat', satisfaction: '4.5', region: 'Guneydogu Anadolu' },
                { name: 'Sinop', avgPrice: 'TL150-250', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Karadeniz' },
                { name: 'Sivas', avgPrice: 'TL150-250', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Ic Anadolu' },
                { name: 'Sirnak', avgPrice: 'TL120-220', responseTime: '1-3 saat', satisfaction: '4.4', region: 'Guneydogu Anadolu' },
                { name: 'Tunceli', avgPrice: 'TL130-230', responseTime: '1-3 saat', satisfaction: '4.5', region: 'Dogu Anadolu' },
                { name: 'Yalova', avgPrice: 'TL200-320', responseTime: '1-2 saat', satisfaction: '4.8', region: 'Marmara' },
                { name: 'Yozgat', avgPrice: 'TL140-240', responseTime: '1-2 saat', satisfaction: '4.6', region: 'Ic Anadolu' },
                { name: 'Karabuk', avgPrice: 'TL160-260', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Karadeniz' },
                { name: 'Kilis', avgPrice: 'TL140-240', responseTime: '1-2 saat', satisfaction: '4.6', region: 'Guneydogu Anadolu' },
                { name: 'Osmaniye', avgPrice: 'TL160-270', responseTime: '1-2 saat', satisfaction: '4.6', region: 'Akdeniz' },
                { name: 'Bartin', avgPrice: 'TL150-250', responseTime: '1-2 saat', satisfaction: '4.7', region: 'Karadeniz' },
                { name: 'Ardahan', avgPrice: 'TL120-220', responseTime: '1-3 saat', satisfaction: '4.4', region: 'Dogu Anadolu' },
                { name: 'Bayburt', avgPrice: 'TL130-230', responseTime: '1-2 saat', satisfaction: '4.6', region: 'Karadeniz' }
            ];

            // Group cities by region
            const regions = {};
            allCities.forEach(city => {
                if (!regions[city.region]) {
                    regions[city.region] = [];
                }
                regions[city.region].push(city);
            });

            // Create HTML content
            let html = '';
            Object.keys(regions).forEach(region => {
                html += \`
                    <div class="mb-8">
                        <h3 class="text-xl font-bold text-blue-900 mb-4 border-b-2 border-blue-200 pb-2">
                            <i class="fas fa-map-marker-alt mr-2"></i>\${region}
                        </h3>
                        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                \`;
                
                regions[region].forEach(city => {
                    html += \`
                        <div class="bg-slate-50 border border-slate-200 minimal-corner p-4 hover:border-orange-600 transition duration-200">
                            <div class="flex justify-between items-start mb-2">
                                <h4 class="font-bold text-slate-800">\${city.name}</h4>
                                <div class="flex items-center space-x-1 text-amber-500">
                                    <i class="fas fa-star text-xs"></i>
                                    <span class="text-slate-700 text-sm">\${city.satisfaction}</span>
                                </div>
                            </div>
                            <div class="space-y-1 text-sm">
                                <div class="flex justify-between">
                                    <span class="text-slate-600">Fiyat:</span>
                                    <span class="font-medium text-orange-600">\${city.avgPrice}</span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-slate-600">Sure:</span>
                                    <span class="font-medium text-green-600">\${city.responseTime}</span>
                                </div>
                            </div>
                        </div>
                    \`;
                });
                
                html += \`
                        </div>
                    </div>
                \`;
            });

            allCitiesContainer.innerHTML = html;
            
            // Show modal
            modal.classList.remove('hidden');
        }

        function closeAllCities() {
            const modal = document.getElementById('citiesModal');
            if (modal) {
                modal.classList.add('hidden');
            }
        }

        // Quick Price Comparison System Functions
        const priceData = {
            elektrik: {
                name: 'Elektrik Isleri',
                basePrice: { min: 150, max: 500 },
                cityMultiplier: { istanbul: 1.3, ankara: 1.1, izmir: 1.2, bursa: 1.0, antalya: 1.1, adana: 0.9, konya: 0.9, gaziantep: 0.8 },
                complexityMultiplier: { 1: 0.8, 2: 1.0, 3: 1.4 }
            },
            'beyaz-esya': {
                name: 'Beyaz Esya Tamiri',
                basePrice: { min: 200, max: 600 },
                cityMultiplier: { istanbul: 1.4, ankara: 1.2, izmir: 1.3, bursa: 1.1, antalya: 1.2, adana: 1.0, konya: 0.9, gaziantep: 0.8 },
                complexityMultiplier: { 1: 0.7, 2: 1.0, 3: 1.5 }
            },
            'su-tesisati': {
                name: 'Su Tesisati',
                basePrice: { min: 180, max: 450 },
                cityMultiplier: { istanbul: 1.2, ankara: 1.0, izmir: 1.1, bursa: 0.9, antalya: 1.0, adana: 0.8, konya: 0.8, gaziantep: 0.7 },
                complexityMultiplier: { 1: 0.8, 2: 1.0, 3: 1.3 }
            },
            kombi: {
                name: 'Kombi & Kalorifer',
                basePrice: { min: 250, max: 800 },
                cityMultiplier: { istanbul: 1.3, ankara: 1.1, izmir: 1.2, bursa: 1.0, antalya: 1.1, adana: 0.9, konya: 0.9, gaziantep: 0.8 },
                complexityMultiplier: { 1: 0.7, 2: 1.0, 3: 1.6 }
            },
            elektronik: {
                name: 'Elektronik Tamiri',
                basePrice: { min: 150, max: 1000 },
                cityMultiplier: { istanbul: 1.4, ankara: 1.2, izmir: 1.3, bursa: 1.1, antalya: 1.2, adana: 1.0, konya: 0.9, gaziantep: 0.8 },
                complexityMultiplier: { 1: 0.6, 2: 1.0, 3: 1.8 }
            },
            temizlik: {
                name: 'Temizlik Hizmetleri',
                basePrice: { min: 120, max: 500 },
                cityMultiplier: { istanbul: 1.3, ankara: 1.1, izmir: 1.2, bursa: 1.0, antalya: 1.1, adana: 0.9, konya: 0.8, gaziantep: 0.7 },
                complexityMultiplier: { 1: 0.8, 2: 1.0, 3: 1.2 }
            },
            boyama: {
                name: 'Boyama & Badana',
                basePrice: { min: 300, max: 1500 },
                cityMultiplier: { istanbul: 1.2, ankara: 1.0, izmir: 1.1, bursa: 0.9, antalya: 1.0, adana: 0.8, konya: 0.8, gaziantep: 0.7 },
                complexityMultiplier: { 1: 0.7, 2: 1.0, 3: 1.4 }
            },
            'kapi-pencere': {
                name: 'Kapi & Pencere',
                basePrice: { min: 150, max: 800 },
                cityMultiplier: { istanbul: 1.3, ankara: 1.1, izmir: 1.2, bursa: 1.0, antalya: 1.1, adana: 0.9, konya: 0.9, gaziantep: 0.8 },
                complexityMultiplier: { 1: 0.8, 2: 1.0, 3: 1.3 }
            }
        };

        function updateComplexityDisplay() {
            const slider = document.getElementById('complexitySlider');
            const display = document.getElementById('complexityDisplay');
            const description = document.getElementById('complexityDescription');
            
            const value = parseInt(slider.value);
            const complexityLabels = {
                1: { label: 'Basit', desc: 'Hizli cozum, standart malzeme' },
                2: { label: 'Orta', desc: 'Standart islem suresi ve malzeme' },
                3: { label: 'Karmasik', desc: 'Uzun sure, ozel malzeme gerekebilir' }
            };
            
            display.textContent = complexityLabels[value].label;
            description.textContent = complexityLabels[value].desc;
            
            updatePriceCalculation();
        }

        function updatePriceCalculation() {
            const serviceCategory = document.getElementById('priceServiceCategory').value;
            const city = document.getElementById('priceCity').value;
            const urgencyLevel = document.querySelector('input[name="priceUrgency"]:checked')?.value || 'normal';
            const complexity = parseInt(document.getElementById('complexitySlider').value);

            if (!serviceCategory || !city) {
                // Reset to default display
                document.getElementById('priceRange').textContent = 'TL200-600';
                document.getElementById('priceCity_display').textContent = city ? 
                    city.charAt(0).toUpperCase() + city.slice(1) : 'Sehir seciniz';
                document.getElementById('basePrice').textContent = 'TL200-400';
                document.getElementById('urgencyFee').textContent = 'TL0';
                document.getElementById('complexityFee').textContent = 'Standart';
                document.getElementById('totalPriceRange').textContent = 'TL200-600';
                return;
            }

            const data = priceData[serviceCategory];
            if (!data) return;

            // Calculate base price with city multiplier
            const cityMultiplier = data.cityMultiplier[city] || 1.0;
            const baseMin = Math.round(data.basePrice.min * cityMultiplier);
            const baseMax = Math.round(data.basePrice.max * cityMultiplier);

            // Apply complexity multiplier
            const complexityMultiplier = data.complexityMultiplier[complexity];
            const complexityMin = Math.round(baseMin * complexityMultiplier);
            const complexityMax = Math.round(baseMax * complexityMultiplier);

            // Apply urgency multiplier
            const urgencyMultipliers = { normal: 1.0, urgent: 1.25, emergency: 1.5 };
            const urgencyMultiplier = urgencyMultipliers[urgencyLevel];
            const finalMin = Math.round(complexityMin * urgencyMultiplier);
            const finalMax = Math.round(complexityMax * urgencyMultiplier);

            // Calculate urgency fee
            const urgencyFeeMin = Math.round(complexityMin * (urgencyMultiplier - 1));
            const urgencyFeeMax = Math.round(complexityMax * (urgencyMultiplier - 1));

            // Update display
            document.getElementById('priceRange').textContent = 'TL' + finalMin + '-' + finalMax;
            document.getElementById('priceCity_display').textContent = 
                city.charAt(0).toUpperCase() + city.slice(1) + ' - ' + data.name;
            document.getElementById('basePrice').textContent = 'TL' + baseMin + '-' + baseMax;
            
            if (urgencyFeeMin > 0) {
                document.getElementById('urgencyFee').textContent = 'TL' + urgencyFeeMin + '-' + urgencyFeeMax;
            } else {
                document.getElementById('urgencyFee').textContent = 'TL0';
            }
            
            const complexityLabels = { 1: 'Basit (-20%)', 2: 'Standart', 3: 'Karmasik (+40%)' };
            document.getElementById('complexityFee').textContent = complexityLabels[complexity] || 'Standart';
            document.getElementById('totalPriceRange').textContent = 'TL' + finalMin + '-' + finalMax;

            // Store current calculation for later use
            window.currentPriceCalculation = {
                serviceCategory: serviceCategory,
                serviceName: data.name,
                city: city,
                urgencyLevel: urgencyLevel,
                complexity: complexity,
                priceRange: 'TL' + finalMin + '-' + finalMax,
                breakdown: {
                    base: 'TL' + baseMin + '-' + baseMax,
                    urgency: urgencyFeeMin > 0 ? ('TL' + urgencyFeeMin + '-' + urgencyFeeMax) : 'TL0',
                    complexity: complexityLabels[complexity],
                    total: 'TL' + finalMin + '-' + finalMax
                }
            };
        }

        function proceedWithPriceCalculation() {
            const calc = window.currentPriceCalculation;
            if (!calc) {
                alert('Lutfen once tum secimleri yapiniz.');
                return;
            }

            // Fill form with calculated information
            const serviceRequestForm = document.getElementById('serviceRequestForm');
            if (serviceRequestForm) {
                // Pre-fill service category if available
                const categorySelect = document.getElementById('serviceCategory');
                if (categorySelect) {
                    // Try to match the selected category with form options
                    const categoryMap = {
                        'elektrik': 'elektrik',
                        'beyaz-esya': 'beyaz_esya',
                        'su-tesisati': 'su_tesisati',
                        'kombi': 'kombi_kalorifer',
                        'elektronik': 'elektronik',
                        'temizlik': 'temizlik',
                        'boyama': 'boyama_badana',
                        'kapi-pencere': 'kapi_pencere'
                    };
                    const formCategory = categoryMap[calc.serviceCategory];
                    if (formCategory) {
                        categorySelect.value = formCategory;
                    }
                }

                // Pre-fill location
                const locationInput = document.getElementById('serviceLocation');
                if (locationInput) {
                    locationInput.value = calc.city.charAt(0).toUpperCase() + calc.city.slice(1);
                }

                // Pre-fill problem description with price information
                const problemInput = document.getElementById('problemDescription');
                if (problemInput) {
                    const urgencyText = {
                        normal: 'Normal (1-2 gun icinde)',
                        urgent: 'Acil (Ayni gun)',
                        emergency: 'Cok Acil (1-2 saat icinde)'
                    };
                    
                    problemInput.value = calc.serviceName + ' hizmeti icin tahmini maliyet: ' + calc.priceRange + '\n\n' +
                        'Aciliyet: ' + urgencyText[calc.urgencyLevel] + '\n' +
                        'Karmasiklik: ' + calc.breakdown.complexity + '\n\n' +
                        'Detaylari asagiya yazabilirsiniz:';
                }

                // Scroll to form
                serviceRequestForm.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
        }

        function sharePrice() {
            const calc = window.currentPriceCalculation;
            if (!calc) {
                alert('Lutfen once fiyat hesaplamasi yapiniz.');
                return;
            }

            const whatsappUrl = createWhatsAppMessage(calc);
            
            // Mobile check
            const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
            
            if (isMobile) {
                // On mobile, try to open WhatsApp app
                window.location.href = whatsappUrl;
            } else {
                // On desktop, open in new tab
                window.open(whatsappUrl, '_blank');
            }

            // Show confirmation
            const shareButton = event.target;
            const originalText = shareButton.innerHTML;
            shareButton.innerHTML = '<i class="fas fa-check mr-2"></i>PAYLAŞILDI!';
            shareButton.classList.add('bg-green-700');
            
            setTimeout(() => {
                shareButton.innerHTML = originalText;
                shareButton.classList.remove('bg-green-700');
            }, 2000);
        }

        // Initialize price calculator on page load
        document.addEventListener('DOMContentLoaded', function() {
            updatePriceCalculation();
        });

        // Instant Expert Matching System Functions
        let searchInProgress = false;
        let foundExperts = [];

        // Expert database simulation
        const expertDatabase = {
            elektrik: [
                { 
                    name: 'Ahmet Usta', 
                    rating: 4.9, 
                    distance: 0.8, 
                    experience: '12 yil', 
                    price: 'TL200-500',
                    specialties: ['Ev elektrigi', 'Sigorta kutulari', 'LED montaji'],
                    responseTime: '15 dakika',
                    availability: 'Su an musait'
                },
                { 
                    name: 'Mehmet Usta', 
                    rating: 4.8, 
                    distance: 1.2, 
                    experience: '8 yil', 
                    price: 'TL180-450',
                    specialties: ['Priz montaji', 'Kablo doseme', 'Elektrik arizalari'],
                    responseTime: '25 dakika',
                    availability: 'Bu aksam musait'
                },
                { 
                    name: 'Ali Usta', 
                    rating: 4.7, 
                    distance: 2.1, 
                    experience: '15 yil', 
                    price: 'TL250-550',
                    specialties: ['Elektrik panosu', 'Aydinlatma', 'Guvenlik sistemleri'],
                    responseTime: '35 dakika',
                    availability: 'Yarin sabah musait'
                }
            ],
            'beyaz-esya': [
                {
                    name: 'Osman Usta',
                    rating: 4.9,
                    distance: 0.5,
                    experience: '10 yil',
                    price: 'TL300-800',
                    specialties: ['Camasir makinesi', 'Bulasik makinesi', 'Buzdolabi'],
                    responseTime: '20 dakika',
                    availability: 'Su an musait'
                },
                {
                    name: 'Hasan Usta',
                    rating: 4.8,
                    distance: 1.5,
                    experience: '14 yil',
                    price: 'TL280-750',
                    specialties: ['Beyaz esya tamiri', 'Motor degisimi', 'Elektronik kart'],
                    responseTime: '30 dakika',
                    availability: 'Bu aksam musait'
                },
                {
                    name: 'Ibrahim Usta',
                    rating: 4.6,
                    distance: 2.3,
                    experience: '9 yil',
                    price: 'TL250-700',
                    specialties: ['Klima servisi', 'Firin tamiri', 'Mikrodalga'],
                    responseTime: '45 dakika',
                    availability: 'Yarin musait'
                }
            ]
        };

        function getCurrentLocation() {
            const locationInput = document.getElementById('quickLocation');
            
            if (navigator.geolocation) {
                locationInput.value = 'Konum aliniyor...';
                
                navigator.geolocation.getCurrentPosition(function(position) {
                    // Simulated address from coordinates
                    const mockAddresses = [
                        'Kadikoy, Istanbul',
                        'Cankaya, Ankara', 
                        'Bornova, Izmir',
                        'Nilufer, Bursa',
                        'Muratpasa, Antalya'
                    ];
                    
                    const address = mockAddresses[Math.floor(Math.random() * mockAddresses.length)];
                    locationInput.value = address;
                    
                    startExpertSearch();
                }, function(error) {
                    locationInput.value = '';
                    alert('Konum alinamadi. Manuel olarak girebilirsiniz.');
                });
            } else {
                alert('Tarayiciniz konum ozelligini desteklemiyor.');
            }
        }

        function startExpertSearch() {
            const serviceType = document.getElementById('quickServiceType').value;
            const location = document.getElementById('quickLocation').value;
            const urgency = document.querySelector('input[name="quickUrgency"]:checked')?.value;

            if (!serviceType || !location) {
                return; // Don't start search if required fields are empty
            }

            if (searchInProgress) {
                return; // Prevent multiple searches
            }

            searchInProgress = true;
            showSearchProgress();
        }

        function showSearchProgress() {
            // Hide previous results
            document.getElementById('foundExpertsList').classList.add('hidden');
            document.getElementById('liveChatSystem').classList.add('hidden');
            
            // Show matching status
            const statusDiv = document.getElementById('matchingStatus');
            statusDiv.classList.remove('hidden');
            
            // Reset progress
            document.getElementById('searchProgress').style.width = '0%';
            
            // Simulate search progress
            let progress = 0;
            const messages = [
                'Lokasyonunuza gore uzmanlar taraniyor...',
                'Uygun uzmanlar filtreleniyor...',  
                'Musaitlik durumlari kontrol ediliyor...',
                'En iyi eslesmeler bulunuyor...',
                'Sonuclar hazirlaniyor...'
            ];
            
            const progressInterval = setInterval(() => {
                progress += 20;
                document.getElementById('searchProgress').style.width = progress + '%';
                
                const messageIndex = Math.floor((progress - 20) / 20);
                if (messageIndex >= 0 && messageIndex < messages.length) {
                    document.getElementById('statusMessage').textContent = messages[messageIndex];
                }
                
                if (progress >= 100) {
                    clearInterval(progressInterval);
                    setTimeout(() => {
                        showFoundExperts();
                    }, 500);
                }
            }, 800);
        }

        function showFoundExperts() {
            const serviceType = document.getElementById('quickServiceType').value;
            const urgency = document.querySelector('input[name="quickUrgency"]:checked')?.value;
            
            // Hide search progress
            document.getElementById('matchingStatus').classList.add('hidden');
            
            // Get experts for this service type
            const experts = expertDatabase[serviceType] || expertDatabase['elektrik'];
            foundExperts = experts;
            
            // Show results
            const resultsDiv = document.getElementById('foundExpertsList');
            const container = document.getElementById('expertsContainer');
            
            container.innerHTML = '';
            
            experts.forEach((expert, index) => {
                // Apply urgency multiplier to price
                let priceMultiplier = 1;
                if (urgency === 'urgent') priceMultiplier = 1.25;
                if (urgency === 'emergency') priceMultiplier = 1.5;
                
                // Parse price range and apply multiplier
                const priceMatch = expert.price.match(/TL(\d+)-(\d+)/);
                const minPrice = Math.round(parseInt(priceMatch[1]) * priceMultiplier);
                const maxPrice = Math.round(parseInt(priceMatch[2]) * priceMultiplier);
                const adjustedPrice = 'TL' + minPrice + '-' + maxPrice;
                
                const expertCard = document.createElement('div');
                expertCard.className = 'bg-white/90 backdrop-blur p-4 minimal-corner border-2 border-white/50 hover:border-yellow-300 transition-all duration-300 cursor-pointer transform hover:scale-105';
                const stars = ' '.repeat(Math.floor(expert.rating));
                const specialtyTags = expert.specialties.map(specialty => 
                    '<span class="bg-emerald-100 text-emerald-700 px-2 py-1 text-xs minimal-corner">' + specialty + '</span>'
                ).join('');
                
                expertCard.innerHTML = 
                    '<div class="flex items-start justify-between">' +
                        '<div class="flex items-center">' +
                            '<div class="w-8 h-8 bg-gradient-to-br from-emerald-400 to-green-500 minimal-corner flex items-center justify-center mr-4">' +
                                '<i class="fas fa-user text-white text-lg"></i>' +
                        '</div><div>' +
                        '<h4 class="font-bold text-gray-800 text-lg">' + expert.name + '</h4>' +
                        '<div class="flex items-center text-sm text-gray-600 mb-1">' +
                            '<div class="flex text-yellow-400 mr-2">' + stars + '</div>' +
                            '<span class="font-bold">' + expert.rating + '</span>' +
                            '<span class="mx-2">-</span>' +
                            '<i class="fas fa-map-marker-alt text-emerald-600 mr-1"></i>' +
                            '<span>' + expert.distance + 'km uzaklikta</span>' +
                        '</div>' +
                        '<div class="text-xs text-gray-500">' + expert.experience + ' deneyim - ' + expert.responseTime + ' icinde yanit</div>' +
                        '</div></div>' +
                        '<div class="text-right">' +
                            '<div class="font-bold text-emerald-600 text-lg">' + adjustedPrice + '</div>' +
                            '<div class="text-xs text-gray-600">' + expert.availability + '</div>' +
                        '</div></div>' +
                        '<div class="mt-3 pt-3 border-t border-gray-200">' +
                            '<div class="text-xs text-gray-600 mb-2">Uzmanlik Alanlari:</div>' +
                            '<div class="flex flex-wrap gap-1">' + specialtyTags + '</div>' +
                        '</div>' +
                        '<div class="mt-4 flex gap-2">' +
                            '<button onclick="callExpert(\'' + expert.name + '\')" class="flex-1 bg-green-600 hover:bg-green-700 text-white py-2 px-3 minimal-corner text-sm transition duration-200">' +
                                '<i class="fas fa-phone mr-1"></i>Ara</button>' +
                            '<button onclick="messageExpert(\'' + expert.name + '\')" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white py-2 px-3 minimal-corner text-sm transition duration-200">' +
                                '<i class="fas fa-message mr-1"></i>Mesaj</button>' +
                            '<button onclick="getQuote(\'' + expert.name + '\')" class="flex-1 bg-orange-600 hover:bg-orange-700 text-white py-2 px-3 minimal-corner text-sm transition duration-200">' +
                                '<i class="fas fa-file-invoice mr-1"></i>Teklif</button>' +
                        '</div>';
                
                container.appendChild(expertCard);
            });
            
            resultsDiv.classList.remove('hidden');
            searchInProgress = false;
            
            // Scroll to results
            resultsDiv.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }

        // Handle city selection change - show/hide custom input
        function handleCityChange() {
            const citySelect = document.getElementById('customerCity');
            const customInput = document.getElementById('customCityInput');
            
            if (citySelect && customInput) {
                if (citySelect.value === 'Diğer') {
                    customInput.classList.remove('hidden');
                    customInput.focus();
                } else {
                    customInput.classList.add('hidden');
                    customInput.value = ''; // Clear custom input when not used
                }
            }
        }

        function proceedToChat() {
            const chatSystem = document.getElementById('liveChatSystem');
            chatSystem.classList.remove('hidden');
            chatSystem.scrollIntoView({ behavior: 'smooth', block: 'center' });
            
            // Simulate incoming messages after a delay
            setTimeout(() => {
                addChatMessage(1, 'Ahmet Usta', 'Merhaba! Size nasil yardimci olabilirim?');
            }, 2000);
            
            setTimeout(() => {
                addChatMessage(2, 'Mehmet Usta', 'Probleminizi anlattiniz mi? Fotograf gonderebilir misiniz?');
            }, 4000);
            
            setTimeout(() => {
                addChatMessage(3, 'Osman Usta', 'Teklif verebilirim, ne zaman musaitsiniz?');
            }, 6000);
        }

        function addChatMessage(chatIndex, expertName, message) {
            const chatDiv = document.getElementById('chat' + chatIndex);
            const messageDiv = document.createElement('div');
            messageDiv.className = 'bg-blue-500 text-white p-2 minimal-corner max-w-xs ml-auto';
            messageDiv.textContent = message;
            
            chatDiv.appendChild(messageDiv);
            chatDiv.scrollTop = chatDiv.scrollHeight;
        }

        function closeLiveChat() {
            document.getElementById('liveChatSystem').classList.add('hidden');
        }

        function callExpert(expertName) {
            alert('  ' + expertName + ' araniyor...\n\nGercek uygulamada telefon aramasi baslatilacak.');
        }

        function messageExpert(expertName) {
            alert('  ' + expertName + ' ile mesajlasma basliyor...\n\nCanli sohbet sistemi aciliyor.');
            proceedToChat();
        }

        function getQuote(expertName) {
            const serviceType = document.getElementById('quickServiceType').value;
            const location = document.getElementById('quickLocation').value;
            
            const message = '  *Garantor360 - Teklif Talebi*\n\n' +
                '   *Uzman:* ' + expertName + '\n' +
                ' *Hizmet:* ' + serviceType + '\n' +
                '  *Lokasyon:* ' + location + '\n\n' +
                '  *Hemen teklif almak icin:* https://wa.me/905301234567\n\n' +
                '  Aninda teklif\n' +
                '  Garantili hizmet\n' +
                '  Guvenli odeme';

            const whatsappUrl = 'https://wa.me/905301234567?text=' + encodeURIComponent(message);
            
            // Mobile check
            const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
            
            if (isMobile) {
                window.location.href = whatsappUrl;
            } else {
                window.open(whatsappUrl, '_blank');
            }
        }

        // Guarantee & Security Showcase System Functions
        function scrollToService() {
            const serviceSection = document.getElementById('hizmet-al') || document.querySelector('section:has(h2:contains("TALEBINIZI BILDIRIN"))');
            if (serviceSection) {
                serviceSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
            } else {
                // Fallback: scroll to bottom of page if service section not found
                window.scrollTo({ 
                    top: document.body.scrollHeight, 
                    behavior: 'smooth' 
                });
            }
        }
        
        // END OF COMMENTED BLOCK - MOVED TO APP.JS
        */
        
        // Simple floating notifications starter
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize floating notifications from app.js
            setTimeout(() => {
                if (window.initializeFloatingNotifications) {
                    window.initializeFloatingNotifications();
                }
            }, 3000);
            
            // FORCE START NOTIFICATIONS - IMMEDIATELY
            // console.log('FORCING NOTIFICATION START NOW!');
            setTimeout(() => {
                // console.log('Starting job feed...');
                // Initialize job feed
                if (document.getElementById('job-feed')) {
                    console.log('Found job-feed container, starting...');
                    initializeJobFeed();
                    setInterval(addJobToFeed, 8000);
                } else {
                    // Job feed container not available on this page
                }
                
                // Initialize other systems - SAFELY
                try { initializeSocialProof(); } catch(e) { console.log('initializeSocialProof not found'); }
                try { initializeLiveComments(); } catch(e) { console.log('initializeLiveComments not found'); }
                
                // Start stats updates
                try { setInterval(updateStats, 10000); } catch(e) { console.log('updateStats not found'); }
                try { setInterval(updateLiveStats, 15000); } catch(e) { console.log('updateLiveStats not found'); }
                try { setInterval(addServiceCompletion, 12000); } catch(e) { console.log('addServiceCompletion not found'); }
                try { setInterval(showSocialProofNotification, 20000); } catch(e) { console.log('showSocialProofNotification not found'); }
                try { setInterval(addLiveComment, 6000); } catch(e) { console.log('addLiveComment not found'); }
                // Disabled to prevent high counter values (uses updateLiveStats instead)
                // try { setInterval(updateLiveUserCount, 30000); } catch(e) { console.log('updateLiveUserCount not found'); }
                
                // Update ALL LIVE STATS - COMPREHENSIVE DYNAMIC UPDATES
                setInterval(() => {
                    console.log('Updating all dynamic stats...');
                    
                    // Update daily jobs
                    const dailyJobs = document.getElementById('daily-jobs');
                    if (dailyJobs) {
                        const current = parseInt(dailyJobs.textContent) || 357;
                        dailyJobs.textContent = current + Math.floor(Math.random() * 3);
                    }
                    
                    // Update active dealers - DISABLED: Now synchronized with main counter system  
                    // const activeDealer = document.getElementById('active-dealers');
                    // if (activeDealer) {
                    //     const current = parseInt(activeDealer.textContent.replace(',', '')) || 1247;
                    //     const change = Math.floor(Math.random() * 5) - 2;
                    //     activeDealer.textContent = (current + change).toLocaleString('tr-TR');
                    // }
                    
                    // Update avg response
                    const avgResponse = document.getElementById('avg-response');
                    if (avgResponse) {
                        const times = [10, 11, 12, 13, 14, 15];
                        avgResponse.textContent = times[Math.floor(Math.random() * times.length)];
                    }
                    
                    // Update live user count (ŞU ANDA CANLI) - DISABLED to prevent conflicts
                    // Multiple functions updating same counter causes high values
                    // Using updateLiveStats instead (35-55 range)
                    /*
                    const liveUserCount = document.getElementById('liveUserCount');
                    if (liveUserCount) {
                        const baseCount = 157;  // Realistic online user count 
                        const variation = Math.floor(Math.random() * 30) - 15; // ±15 (142-172 range)
                        const newCount = baseCount + variation;
                        liveUserCount.textContent = newCount.toLocaleString('tr-TR');
                    }
                    */"
                    
                    // Active services güncelleme devre dışı (çakışmayı engellemek için)
                    // updateLiveUserCount fonksiyonu zaten güncelleme yapıyor
                    
                    // Update online experts (UZMAN ONLİNE)
                    const onlineExperts = document.getElementById('onlineExperts');
                    if (onlineExperts) {
                        const baseExperts = 23;  // Realistic online expert count
                        const variation = Math.floor(Math.random() * 8) - 4; // ±4 (19-27 range)
                        const newExperts = baseExperts + variation;
                        onlineExperts.textContent = newExperts.toLocaleString('tr-TR');
                    }
                    
                    // Update hourly total (Son 6 Saat)
                    const hourlyTotal = document.getElementById('hourly-total');
                    if (hourlyTotal) {
                        const baseTalep = 45;
                        const variation = Math.floor(Math.random() * 15) - 7;
                        const newTalep = baseTalep + variation;
                        hourlyTotal.textContent = newTalep;
                    }
                    
                    // Update recent count (Son 10dk)
                    const recentCount = document.getElementById('recent-count');
                    if (recentCount) {
                        const count = Math.floor(Math.random() * 5) + 8;
                        recentCount.textContent = count;
                    }
                    
                    // Update dynamic stats text (Aktif uzman sayisi: 847)
                    const dynamicStatsText = document.getElementById('dynamicStatsText');
                    if (dynamicStatsText) {
                        const statsMessages = [
                            { icon: 'fas fa-users', text: 'Aktif uzman sayısı: ' + (800 + Math.floor(Math.random() * 100)), color: 'text-blue-500' },
                            { icon: 'fas fa-chart-line', text: 'Bugünkü tamamlanan iş: ' + (1200 + Math.floor(Math.random() * 100)), color: 'text-green-500' },
                            { icon: 'fas fa-smile', text: 'Müşteri memnuniyeti: %' + (97 + Math.floor(Math.random() * 3)), color: 'text-yellow-500' },
                            { icon: 'fas fa-fire', text: 'Günlük talep sayısı: ' + (2800 + Math.floor(Math.random() * 100)), color: 'text-red-500' }
                        ];
                        const randomStat = statsMessages[Math.floor(Math.random() * statsMessages.length)];
                        dynamicStatsText.innerHTML = '<i class="' + randomStat.icon + ' mr-2 ' + randomStat.color + '"></i><strong>' + randomStat.text + '</strong>';
                    }
                    
                    // Update dynamic activity text (Ahmet K. elektrik hizmeti aldi)
                    const dynamicActivityText = document.getElementById('dynamicActivityText');
                    if (dynamicActivityText) {
                        const activities = [
                            'Mehmet S. Samsung QLED TV tamiri tamamladı',
                            'Ayşe D. LG OLED ekran değişimi aldı',
                            'Ali R. Sony Bravia TV tamiri tamamladı',
                            'Zeynep H. Philips Smart TV tamiri aldı',
                            'Can B. TCL Mini LED TV tamiri tamamladı',
                            'Elif M. Vestel TV anakart tamiri aldı',
                            'Murat K. Arçelik Smart TV kurulum aldı',
                            'Seda L. Grundig TV hoparlör tamiri tamamladı',
                            'Burak Ö. Panasonic plazma TV tamiri aldı',
                            'Deniz A. Toshiba LED TV tamiri tamamladı'
                        ];
                        const randomActivity = activities[Math.floor(Math.random() * activities.length)];
                        dynamicActivityText.innerHTML = '<i class="fas fa-user-check mr-2 text-green-500"></i><strong>' + randomActivity + '</strong>';
                    }
                    
                }, 8000); // Her 8 saniyede bir güncelle
                
                console.log('All notification systems started!');
            }, 1000);
        });

        </script>

        <!-- Smart Alert & Motivation System -->
        <!-- Floating Scarcity Notifications -->
        <div id="scarcityNotifications" class="fixed top-20 right-6 z-50 space-y-3 max-w-sm">
            <!-- Dynamic scarcity alerts will be added here -->
        </div>

        <!-- Floating Discount Banner -->
        <div id="discountBanner" class="fixed top-4 left-1/2 transform -translate-x-1/2 z-50 hidden">
            <div class="bg-gradient-to-r from-red-500 to-orange-500 text-white px-6 py-3 minimal-corner shadow-2xl border-2 border-white animate-pulse">
                <div class="flex items-center space-x-4">
                    <div class="flex items-center">
                        <i class="fas fa-fire text-yellow-300 mr-2 animate-bounce"></i>
                        <span class="font-bold text-sm">  OZEL INDIRIM!</span>
                    </div>
                    <div class="text-sm">
                        <span class="font-bold">%15 INDIRIM</span> - Sadece bu sayfada gecerli!
                    </div>
                    <div id="discountTimer" class="bg-white/20 px-3 py-1 minimal-corner text-xs font-bold">
                        02:47:33
                    </div>
                    <button onclick="closeDiscountBanner()" class="text-white/80 hover:text-white">
                        <i class="fas fa-times text-xs"></i>
                    </button>
                </div>
            </div>
        </div>

        <!-- Exit Intent Popup -->
        <div id="exitIntentModal" class="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 flex items-center justify-center hidden">
            <div class="bg-white max-w-md mx-4 minimal-corner shadow-2xl border-4 border-orange-300 transform scale-95 transition-all duration-300" id="exitModalContent">
                <div class="bg-gradient-to-r from-red-500 to-orange-500 text-white p-6 text-center">
                    <div class="w-16 h-16 bg-white/20 minimal-corner mx-auto mb-4 flex items-center justify-center">
                        <i class="fas fa-exclamation-triangle text-white text-2xl animate-bounce"></i>
                    </div>
                    <h3 class="text-2xl font-bold mb-2">BEKLE!</h3>
                    <p class="text-orange-100 text-sm">Gitmeden once bu ozel teklifi kacirma!</p>
                </div>
                
                <div class="p-8 text-center">
                    <h4 class="text-xl font-bold text-gray-800 mb-4">
                          SIZE OZEL %20 INDIRIM!
                    </h4>
                    <p class="text-gray-600 mb-6">
                        Bu sayfadan ayrilmadan once size ozel hazirladigimiz 
                        <strong>%20 indirim firsatini</strong> degerlendirin!
                    </p>
                    
                    <div class="bg-gradient-to-r from-green-50 to-blue-50 p-4 minimal-corner mb-6 border-2 border-green-200">
                        <div class="flex items-center justify-center mb-3">
                            <i class="fas fa-gift text-green-600 text-xl mr-3"></i>
                            <span class="font-bold text-green-800">BONUS AVANTAJLAR:</span>
                        </div>
                        <div class="text-sm space-y-1 text-left">
                            <div class="flex items-center">
                                <i class="fas fa-check text-green-600 mr-2"></i>
                                <span>%20 Indirim (Tum hizmetlerde gecerli)</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-green-600 mr-2"></i>
                                <span>Ucretsiz kesif (Normalde 50TL)</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-green-600 mr-2"></i>
                                <span>7/24 oncelikli destek</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-green-600 mr-2"></i>
                                <span>1 yil ek garanti</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="space-y-3">
                        <button 
                            onclick="acceptExitOffer()"
                            class="w-full bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white font-bold py-4 px-6 minimal-corner transition duration-200 transform hover:scale-105 shadow-lg"
                        >
                            <i class="fas fa-rocket mr-2"></i>
                            %20 INDIRIM ILE HİZMET AL
                        </button>
                        <button 
                            onclick="closeExitModal()"
                            class="w-full bg-gray-300 hover:bg-gray-400 text-gray-700 font-bold py-3 px-6 minimal-corner transition duration-200"
                        >
                            Hayir, indirim istemiyorum
                        </button>
                    </div>
                    
                    <p class="text-xs text-gray-500 mt-4">
                        Bu teklif sadece bu sayfaya ozeldir ve tekrar edilmeyecektir.
                    </p>
                </div>
            </div>
        </div>

        <!-- Urgency Timer Popup -->
        <div id="urgencyTimerPopup" class="fixed bottom-6 left-6 z-50 max-w-sm hidden">
            <div class="bg-gradient-to-r from-purple-600 to-pink-600 text-white p-4 minimal-corner shadow-2xl border-2 border-white transform hover:scale-105 transition-all duration-300">
                <div class="flex items-center mb-3">
                    <i class="fas fa-clock text-yellow-300 mr-3 animate-pulse text-lg"></i>
                    <div class="font-bold text-sm">  SURE DOLUYOR!</div>
                </div>
                <p class="text-xs mb-3 text-purple-100">
                    Bu ozel fiyatlar <strong>sadece bugun</strong> gecerli!
                </p>
                <div class="bg-white/20 p-3 minimal-corner text-center mb-3">
                    <div class="text-xs text-purple-200 mb-1">Kalan Sure:</div>
                    <div id="urgencyTimerDisplay" class="text-lg font-bold text-yellow-300">
                        05:42:17
                    </div>
                </div>
                <button 
                    onclick="scrollToService(); closeUrgencyTimer();"
                    class="w-full bg-yellow-400 hover:bg-yellow-500 text-purple-900 font-bold py-2 px-4 minimal-corner transition duration-200 text-sm"
                >
                    HEMEN BASVUR
                </button>
                <button 
                    onclick="closeUrgencyTimer()"
                    class="absolute top-2 right-2 text-white/80 hover:text-white text-xs"
                >
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>

        <!-- Smart Conversion Notifications -->
        <div id="conversionNotifications" class="fixed bottom-20 right-6 z-40 space-y-3 max-w-xs">
            <!-- Dynamic conversion alerts will be added here -->
        </div>

        <script>
        // Dynamic Stats Text System (Statistics)
        window.initDynamicStats = function() {
            console.log('Initializing dynamic stats...');
            
            const statsMessages = [
                { icon: 'fas fa-users', text: 'Aktif uzman sayisi: 847', color: 'text-blue-500' },
                { icon: 'fas fa-chart-line', text: 'Bugunku tamamlanan is: 1.247', color: 'text-green-500' },
                { icon: 'fas fa-smile', text: 'Musteri memnuniyeti: %98', color: 'text-yellow-500' },
                { icon: 'fas fa-fire', text: 'Gunluk talep sayisi: 2.847', color: 'text-red-500' }
            ];
            
            let currentIndex = 0;
            const textElement = document.getElementById('dynamicStatsText');
            
            if (!textElement) {
                console.log('dynamicStatsText element not found!');
                return;
            }
            
            function updateStatsText() {
                const stat = statsMessages[currentIndex];
                
                textElement.style.opacity = '0';
                textElement.style.transform = 'translateY(10px)';
                
                setTimeout(() => {
                    textElement.innerHTML = '<i class="' + stat.icon + ' mr-2 ' + stat.color + '"></i><strong>' + stat.text + '</strong>';
                    textElement.style.opacity = '1';
                    textElement.style.transform = 'translateY(0)';
                    currentIndex = (currentIndex + 1) % statsMessages.length;
                }, 200);
            }
            
            updateStatsText();
            setInterval(updateStatsText, 3000);
        }
        
        // Dynamic Activity Text System (User Activities)
        window.initDynamicActivity = function() {
            console.log('Initializing dynamic activities...');
            
            const activityMessages = [
                { icon: 'fas fa-tv', text: 'Mehmet K. Samsung QLED TV tamiri tamamlandi', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Ayse D. LG OLED 65" ekran degisimi yapildi', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Ali R. Sony Bravia XR TV tamiri tamamlandi', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Zeynep H. Philips Ambilight TV tamiri aldi', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Can B. TCL Mini LED TV panel degisimi', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Elif M. Vestel Smart TV anakart tamiri', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Murat K. Grundig Vision TV hoparlor tamiri', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Seda L. Arcelik Smart TV kurulum tamamlandi', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Burak O. Sharp Aquos LED TV tamiri', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Deniz A. Panasonic Viera plazma TV tamiri', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Kemal S. Toshiba Full HD TV ekran tamiri', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Fatma T. JVC LCD TV panel degisimi', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Emre Y. Telefunken Smart TV kurulum', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Pinar G. Beko LED TV anakart tamiri', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Oguz B. Regal Full HD TV panel tamiri', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Merve S. Altus LED TV ekran degisimi', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Serkan M. Sunny 4K Smart TV tamiri', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Ebru T. Skyworth Android TV kurulum', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Volkan S. Hisense Mini LED TV tamiri', color: 'text-blue-500' },
                { icon: 'fas fa-tv', text: 'Esra H. Xiaomi Mi TV ekran tamiri', color: 'text-blue-500' },
                { icon: 'fas fa-star', text: 'Tolga K. 5/5 yildiz verdi', color: 'text-yellow-500' },
                { icon: 'fas fa-laptop', text: 'Ankara da laptop tamiri basladi', color: 'text-cyan-500' },
                { icon: 'fas fa-solar-panel', text: 'Erzurum da gunes paneli montaji', color: 'text-orange-600' },
                { icon: 'fas fa-kitchen-set', text: 'Aylin K. mutfak tadilati hizmeti aldi', color: 'text-rose-500' }
            ];
            
            let currentIndex = 0;
            const textElement = document.getElementById('dynamicActivityText');
            
            if (!textElement) {
                console.log('dynamicActivityText element not found!');
                return;
            }
            
            function updateActivityText() {
                const activity = activityMessages[currentIndex];
                
                textElement.style.opacity = '0';
                textElement.style.transform = 'translateY(10px)';
                
                setTimeout(() => {
                    textElement.innerHTML = '<i class="' + activity.icon + ' mr-2 ' + activity.color + '"></i><strong>' + activity.text + '</strong>';
                    textElement.style.opacity = '1';
                    textElement.style.transform = 'translateY(0)';
                    currentIndex = (currentIndex + 1) % activityMessages.length;
                }, 200);
            }
            
            updateActivityText();
            setInterval(updateActivityText, 2500);
        }
        
        // Security Guarantees Rotation System
        window.initSecurityGuarantees = function() {
            console.log('Initializing security guarantees...');
            
            const guarantees = [
                { icon: 'fas fa-money-bill-wave', title: 'ODEME GÜVENCESI', desc: 'Para iade garantisi', color: 'text-green-300' },
                { icon: 'fas fa-tools', title: 'İŞÇİLİK GARANTİSİ', desc: '6 ay garanti', color: 'text-blue-300' },
                { icon: 'fas fa-user-check', title: 'DOGRULANMIS USTALAR', desc: 'Kimlik kontrolu', color: 'text-purple-300' },
                { icon: 'fas fa-shield-alt', title: 'SIGORTA KORUMASI', desc: 'Hasar tazminati', color: 'text-orange-300' },
                { icon: 'fas fa-gavel', title: 'HUKUKI DESTEK', desc: 'Avukat destegi', color: 'text-amber-300' },
                { icon: 'fas fa-clock', title: '7/24 DESTEK', desc: 'Surekli destek', color: 'text-cyan-300' }
            ];
            
            let currentIndex = 0;
            const element = document.getElementById('securityGuarantee');
            
            if (!element) {
                console.log('securityGuarantee element not found!');
                return;
            }
            
            function updateGuarantee() {
                const guarantee = guarantees[currentIndex];
                
                element.style.opacity = '0';
                element.style.transform = 'translateY(10px)';
                
                setTimeout(() => {
                    element.innerHTML = 
                        '<i class="' + guarantee.icon + ' ' + guarantee.color + ' mr-3 text-lg"></i>' +
                        '<div>' +
                            '<div class="text-sm font-semibold text-white">' + guarantee.title + '</div>' +
                            '<div class="text-xs text-purple-200">' + guarantee.desc + '</div>' +
                        '</div>';
                    
                    element.style.opacity = '1';
                    element.style.transform = 'translateY(0)';
                    
                    currentIndex = (currentIndex + 1) % guarantees.length;
                }, 200);
            }
            
            updateGuarantee();
            setInterval(updateGuarantee, 3000);
        }
        

        
        // Also try to start it immediately when page loads
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', function() {
                setTimeout(() => {
                    if (typeof window.initDynamicStats === 'function') {
                        window.initDynamicStats();
                    }
                    if (typeof window.initDynamicActivity === 'function') {
                        window.initDynamicActivity();
                    }
                    if (typeof window.initSecurityGuarantees === 'function') {
                        window.initSecurityGuarantees();
                    }

                }, 1500);
            });
        } else {
            setTimeout(() => {
                if (typeof window.initDynamicStats === 'function') {
                    window.initDynamicStats();
                }
                if (typeof window.initDynamicActivity === 'function') {
                    window.initDynamicActivity();
                }
                if (typeof window.initSecurityGuarantees === 'function') {
                    window.initSecurityGuarantees();
                }
                if (typeof window.initDynamicStatus === 'function') {
                    window.initDynamicStatus();
                }
            }, 1500);
        }

        // Smart Alert & Motivation System Functions - TEMPORARILY DISABLED FOR DEBUGGING
        /*
        let exitIntentTriggered = false;
        let discountTimerActive = false;
        let urgencyTimerActive = false;
        
        // Scarcity notifications data
        const scarcityMessages = [
            {
                icon: 'fas fa-users',
                color: 'orange',
                title: 'Son 3 Uzman Kaldi!',
                message: 'Elektrik kategorisinde sadece 3 uzman musait',
                type: 'warning'
            },
            {
                icon: 'fas fa-clock',
                color: 'red', 
                title: 'Bu Fiyat 2 Saatte Bitiyor!',
                message: 'Ozel indirimli fiyat son 2 saatte',
                type: 'urgent'
            },
            {
                icon: 'fas fa-fire',
                color: 'purple',
                title: '12 Kisi Bu Sayfada!',
                message: 'Su anda 12 kisi ayni hizmete bakiyor',
                type: 'social'
            },
            {
                icon: 'fas fa-star',
                color: 'green',
                title: 'Bu Ayin En Populer Hizmeti!',
                message: 'Bu kategoride 847 kisi hizmet aldi',
                type: 'social'
            },
            {
                icon: 'fas fa-bolt',
                color: 'blue',
                title: 'Hizla Doluyoruz!',
                message: 'Yarin icin sadece 5 randevu kaldi',
                type: 'urgency'
            }
        ];

        // Initialize smart alert system
        function initSmartAlertSystem() {
            // Show initial discount banner after 3 seconds
            setTimeout(() => {
                showDiscountBanner();
            }, 3000);
            
            // Start scarcity notifications after 5 seconds
            setTimeout(() => {
                startScarcityNotifications();
            }, 5000);
            
            // Show urgency timer after 30 seconds
            setTimeout(() => {
                showUrgencyTimer();
            }, 30000);
            
            // Setup exit intent detection
            setupExitIntentDetection();
            
            // Start conversion notifications
            setTimeout(() => {
                startConversionNotifications();
            }, 10000);
        }

        // Scarcity notifications system
        function startScarcityNotifications() {
            let currentIndex = 0;
            
            function showNextScarcity() {
                if (currentIndex >= scarcityMessages.length) {
                    currentIndex = 0;
                }
                
                const message = scarcityMessages[currentIndex];
                showScarcityNotification(message);
                currentIndex++;
                
                // Show next notification after 15-25 seconds
                setTimeout(showNextScarcity, 15000 + Math.random() * 10000);
            }
            
            showNextScarcity();
        }

        function showScarcityNotification(messageData) {
            const container = document.getElementById('scarcityNotifications');
            const notification = document.createElement('div');
            const notificationId = 'scarcity-' + Date.now();
            
            notification.id = notificationId;
            notification.className = 'bg-white border-l-4 border-' + messageData.color + '-500 shadow-lg minimal-corner p-4 transform translate-x-full transition-all duration-500';
            
            notification.innerHTML = '<div class="flex items-start">' +
                '<div class="w-8 h-8 bg-' + messageData.color + '-500 minimal-corner flex items-center justify-center mr-3 mt-1">' +
                    '<i class="' + messageData.icon + ' text-white text-sm"></i>' +
                '</div>' +
                '<div class="flex-1">' +
                    '<h4 class="font-bold text-' + messageData.color + '-800 text-sm">' + messageData.title + '</h4>' +
                    '<p class="text-gray-600 text-xs mt-1">' + messageData.message + '</p>' +
                '</div>' +
                '<button class="text-gray-400 hover:text-gray-600 ml-2 close-notification" data-notification-id="' + notificationId + '">' +
                    '<i class="fas fa-times text-xs"></i>' +
                '</button>' +
            '</div>';
            
            container.appendChild(notification);
            
            // Add click event listener for close button
            const closeButton = notification.querySelector('.close-notification');
            if (closeButton) {
                closeButton.addEventListener('click', () => {
                    closeScarcityNotification(notificationId);
                });
            }
            
            // Animate in
            setTimeout(() => {
                notification.classList.remove('translate-x-full');
            }, 100);
            
            // Auto remove after 8 seconds
            setTimeout(() => {
                closeScarcityNotification(notificationId);
            }, 8000);
        }

        function closeScarcityNotification(notificationId) {
            const notification = document.getElementById(notificationId);
            if (notification) {
                notification.classList.add('translate-x-full');
                setTimeout(() => {
                    notification.remove();
                }, 500);
            }
        }

        // Discount banner system
        function showDiscountBanner() {
            if (discountTimerActive) return;
            
            discountTimerActive = true;
            const banner = document.getElementById('discountBanner');
            banner.classList.remove('hidden');
            
            // Start countdown timer (3 hours)
            let timeLeft = 3 * 60 * 60; // 3 hours in seconds
            
            function updateDiscountTimer() {
                const hours = Math.floor(timeLeft / 3600);
                const minutes = Math.floor((timeLeft % 3600) / 60);
                const seconds = timeLeft % 60;
                
                const display = hours.toString().padStart(2, '0') + ':' + 
                              minutes.toString().padStart(2, '0') + ':' + 
                              seconds.toString().padStart(2, '0');
                
                const timerElement = document.getElementById('discountTimer');
                if (timerElement) {
                    timerElement.textContent = display;
                }
                
                if (timeLeft > 0) {
                    timeLeft--;
                    setTimeout(updateDiscountTimer, 1000);
                } else {
                    closeDiscountBanner();
                }
            }
            
            updateDiscountTimer();
        }

        function closeDiscountBanner() {
            const banner = document.getElementById('discountBanner');
            banner.classList.add('hidden');
            discountTimerActive = false;
        }

        // Exit intent detection
        function setupExitIntentDetection() {
            let exitIntentTimeout;
            
            document.addEventListener('mouseleave', function(e) {
                if (e.clientY <= 0 && !exitIntentTriggered) {
                    exitIntentTimeout = setTimeout(() => {
                        showExitIntentModal();
                    }, 500);
                }
            });
            
            document.addEventListener('mouseenter', function() {
                clearTimeout(exitIntentTimeout);
            });
        }

        function showExitIntentModal() {
            if (exitIntentTriggered) return;
            
            exitIntentTriggered = true;
            const modal = document.getElementById('exitIntentModal');
            const content = document.getElementById('exitModalContent');
            
            modal.classList.remove('hidden');
            setTimeout(() => {
                content.classList.add('scale-100');
                content.classList.remove('scale-95');
            }, 100);
        }

        function closeExitModal() {
            const modal = document.getElementById('exitIntentModal');
            const content = document.getElementById('exitModalContent');
            
            content.classList.add('scale-95');
            content.classList.remove('scale-100');
            
            setTimeout(() => {
                modal.classList.add('hidden');
            }, 300);
        }

        function acceptExitOffer() {
            // Close modal
            closeExitModal();
            
            // Apply discount code (in real app, this would set a cookie or session variable)
            localStorage.setItem('specialDiscount', '20');
            
            // Scroll to service form
            scrollToService();
            
            // Show success notification
            showConversionNotification({
                icon: 'fas fa-gift',
                color: 'green',
                title: '%20 Indirim Uygulandi!',
                message: 'Ozel indiriminiz form doldururken otomatik uygulanacak',
                type: 'success'
            });
        }

        // Urgency timer popup
        function showUrgencyTimer() {
            if (urgencyTimerActive) return;
            
            urgencyTimerActive = true;
            const popup = document.getElementById('urgencyTimerPopup');
            popup.classList.remove('hidden');
            
            // Start countdown (6 hours)
            let timeLeft = 6 * 60 * 60;
            
            function updateUrgencyTimer() {
                const hours = Math.floor(timeLeft / 3600);
                const minutes = Math.floor((timeLeft % 3600) / 60);
                const seconds = timeLeft % 60;
                
                const display = hours.toString().padStart(2, '0') + ':' + 
                              minutes.toString().padStart(2, '0') + ':' + 
                              seconds.toString().padStart(2, '0');
                
                const timerElement = document.getElementById('urgencyTimerDisplay');
                if (timerElement) {
                    timerElement.textContent = display;
                }
                
                if (timeLeft > 0) {
                    timeLeft--;
                    setTimeout(updateUrgencyTimer, 1000);
                } else {
                    closeUrgencyTimer();
                }
            }
            
            updateUrgencyTimer();
        }

        function closeUrgencyTimer() {
            const popup = document.getElementById('urgencyTimerPopup');
            popup.classList.add('hidden');
            urgencyTimerActive = false;
        }

        // Conversion notifications
        function startConversionNotifications() {
            const conversionMessages = [
                { icon: 'fas fa-handshake', color: 'blue', title: 'Ahmet K. hizmeti aldi!', message: '5 dakika once - Elektrik isleri' },
                { icon: 'fas fa-star', color: 'yellow', title: 'Mukemmel puan aldik!', message: 'Zeynep H. - 5/5 yildiz verdi' },
            ];
            
            let notificationIndex = 0;
            
            function showNextConversionNotification() {
                if (conversionMessages.length === 0) return;
                
                const message = conversionMessages[notificationIndex % conversionMessages.length];
                showConversionNotification(message);
                notificationIndex++;
            }
            
            setInterval(showNextConversionNotification, 25000);
            setTimeout(showNextConversionNotification, 8000);
        }

        // The new ultra-smooth navigation script above handles all navigation behavior
        // This section has been replaced to prevent conflicts and "gidip-geliyor" issues
        console.log('✅ Ultra-smooth navigation loaded - legacy script removed');

        // =============================================================================
        // GA4 EVENT TRACKING SYSTEM - GARANTOR360 DIGITAL ANALYTICS
        // =============================================================================
        
        // GA4 Event Tracking Helper Functions
        function trackGA4Event(eventName, eventParameters = {}) {
            if (typeof gtag === 'function') {
                gtag('event', eventName, eventParameters);
                console.log('📊 GA4 Event Tracked:', eventName, eventParameters);
            } else {
                console.warn('⚠️ GA4 gtag function not available');
            }
        }
        
        // Facebook Pixel Event Tracking Helper
        function trackFacebookEvent(eventName, eventParameters = {}) {
            if (typeof fbq === 'function') {
                fbq('trackCustom', eventName, eventParameters);
                console.log('📘 Facebook Event Tracked:', eventName, eventParameters);
            } else {
                console.warn('⚠️ Facebook Pixel fbq function not available');
            }
        }
        
        // Enhanced Form Submission Tracking
        function trackFormSubmission(formType, formData = {}) {
            const eventData = {
                event_category: 'form_interaction',
                event_label: formType,
                form_type: formType,
                page_location: window.location.href,
                timestamp: new Date().toISOString(),
                ...formData
            };
            
            // Track in GA4
            trackGA4Event('form_submit', eventData);
            
            // Track in Facebook Pixel
            trackFacebookEvent('Lead', {
                content_name: 'Service Request Form',
                content_category: formType,
                value: 1,
                currency: 'TRY'
            });
            
            // Send to our analytics API
            if (typeof axios !== 'undefined') {
                axios.post('/api/analytics/form-submit', eventData).catch(err => 
                    console.log('Analytics API error:', err)
                );
            }
        }
        
        // Enhanced Button Click Tracking
        function trackButtonClick(buttonType, buttonText, additionalData = {}) {
            const eventData = {
                event_category: 'button_interaction',
                event_label: buttonType,
                button_text: buttonText,
                button_type: buttonType,
                page_location: window.location.href,
                timestamp: new Date().toISOString(),
                ...additionalData
            };
            
            // Track in GA4
            trackGA4Event('click', eventData);
            
            // Track in Facebook Pixel
            trackFacebookEvent('ButtonClick', {
                content_name: buttonText,
                content_category: buttonType
            });
        }
        
        // Phone Number Click Tracking
        function trackPhoneClick(phoneNumber) {
            const eventData = {
                event_category: 'contact_interaction',
                event_label: 'phone_click',
                phone_number: phoneNumber,
                page_location: window.location.href
            };
            
            trackGA4Event('phone_call', eventData);
            trackFacebookEvent('Contact', {
                content_name: 'Phone Call',
                content_category: 'Contact'
            });
        }
        
        // WhatsApp Click Tracking  
        function trackWhatsAppClick() {
            const eventData = {
                event_category: 'contact_interaction',
                event_label: 'whatsapp_click',
                page_location: window.location.href
            };
            
            trackGA4Event('whatsapp_click', eventData);
            trackFacebookEvent('Contact', {
                content_name: 'WhatsApp Contact',
                content_category: 'Social Contact'
            });
        }
        
        // Service Card Click Tracking
        function trackServiceClick(serviceName, serviceCategory) {
            const eventData = {
                event_category: 'service_interaction',
                event_label: 'service_card_click',
                service_name: serviceName,
                service_category: serviceCategory,
                page_location: window.location.href
            };
            
            trackGA4Event('select_content', {
                content_type: 'service',
                content_id: serviceName.toLowerCase().replace(/\\s+/g, '_'),
                ...eventData
            });
            
            trackFacebookEvent('ViewContent', {
                content_name: serviceName,
                content_category: serviceCategory,
                content_type: 'service'
            });
        }
        
        // Page Scroll Tracking (25%, 50%, 75%, 100%)
        let scrollTrackingThresholds = [25, 50, 75, 100];
        let scrollTrackedThresholds = [];
        
        function trackScrollProgress() {
            const scrollPercent = Math.round((window.scrollY / (document.body.scrollHeight - window.innerHeight)) * 100);
            
            scrollTrackingThresholds.forEach(threshold => {
                if (scrollPercent >= threshold && !scrollTrackedThresholds.includes(threshold)) {
                    scrollTrackedThresholds.push(threshold);
                    
                    trackGA4Event('scroll', {
                        event_category: 'engagement',
                        event_label: \`scroll_\${threshold}percent\`,
                        scroll_percent: threshold,
                        page_location: window.location.href
                    });
                }
            });
        }
        
        // Initialize Event Listeners when DOM is ready
        function initializeAnalyticsTracking() {
            console.log('🎯 Initializing Garantor360 Analytics Tracking...');
            
            // Track all form submissions
            document.addEventListener('submit', function(e) {
                const form = e.target;
                const formType = form.id || form.className || 'unknown_form';
                
                // Get form data
                const formData = new FormData(form);
                const formObject = {};
                for (let [key, value] of formData.entries()) {
                    formObject[key] = value;
                }
                
                trackFormSubmission(formType, formObject);
            });
            
            // Track all button clicks
            document.addEventListener('click', function(e) {
                const element = e.target.closest('button, a[href], .clickable');
                if (!element) return;
                
                const buttonText = element.textContent.trim();
                const buttonType = element.tagName.toLowerCase();
                const href = element.href;
                
                // Phone number clicks
                if (href && href.startsWith('tel:')) {
                    const phoneNumber = href.replace('tel:', '');
                    trackPhoneClick(phoneNumber);
                }
                
                // WhatsApp clicks
                if (href && href.includes('wa.me')) {
                    trackWhatsAppClick();
                }
                
                // Service card clicks
                if (element.closest('.service-card') || element.classList.contains('service-button')) {
                    const serviceCard = element.closest('.service-card') || element;
                    const serviceName = serviceCard.querySelector('h3')?.textContent || buttonText;
                    trackServiceClick(serviceName, 'home_services');
                }
                
                // General button tracking
                trackButtonClick(buttonType, buttonText, {
                    href: href,
                    element_classes: element.className
                });
            });
            
            // Scroll tracking
            let scrollTimeout;
            window.addEventListener('scroll', function() {
                clearTimeout(scrollTimeout);
                scrollTimeout = setTimeout(trackScrollProgress, 100);
            });
            
            console.log('✅ Analytics tracking initialized successfully');
        }
        
        // Initialize tracking when DOM is ready
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initializeAnalyticsTracking);
        } else {
            initializeAnalyticsTracking();
        }

        </script>
        
        <!-- KVKV Cookie Consent System -->
        <script src="/static/kvkv-cookie-consent.js"></script>
        
        <!-- Enhanced Event Tracking System -->
        <script src="/static/enhanced-event-tracker.js"></script>
        
        <script>
            // Listen for consent updates to enable/disable tracking
            window.addEventListener('kvkv-consent-updated', function(e) {
                const settings = e.detail;
                console.log('KVKV Consent updated:', settings);
                
                // Update Google Analytics consent
                if (window.gtag) {
                    gtag('consent', 'update', {
                        'analytics_storage': settings.analytics ? 'granted' : 'denied'
                    });
                }
                
                // Update Facebook Pixel consent  
                if (window.fbq) {
                    if (settings.marketing) {
                        fbq('consent', 'grant');
                    } else {
                        fbq('consent', 'revoke');
                    }
                }
                
                // Update Enhanced Event Tracker consent
                if (window.enhancedTracker) {
                    window.enhancedTracker.consentSettings = settings;
                    console.log('Enhanced Event Tracker consent updated:', settings);
                }
                
                // Re-initialize tracking if consent was granted
                if (settings.analytics || settings.marketing) {
                    setTimeout(function() {
                        if (typeof initializeAnalyticsTracking === 'function') {
                            initializeAnalyticsTracking();
                        }
                    }, 500);
                }
            });
            
            // Enhanced event tracking for specific elements
            document.addEventListener('DOMContentLoaded', function() {
                // Service category buttons
                document.querySelectorAll('[data-service-type]').forEach(function(button) {
                    button.addEventListener('click', function() {
                        const serviceType = this.getAttribute('data-service-type');
                        if (window.track) {
                            window.track('service_category_selected', {
                                event_category: 'engagement',
                                event_label: serviceType,
                                service_type: serviceType,
                                button_location: 'main_page'
                            });
                        }
                    });
                });
                
                // Phone number clicks
                document.querySelectorAll('a[href^="tel:"]').forEach(function(link) {
                    link.addEventListener('click', function() {
                        if (window.track) {
                            window.track('phone_number_clicked', {
                                event_category: 'conversion',
                                event_label: this.href,
                                phone_number: this.textContent.trim()
                            });
                        }
                    });
                });
                
                // WhatsApp clicks  
                document.querySelectorAll('a[href*="whatsapp"], a[href*="wa.me"]').forEach(function(link) {
                    link.addEventListener('click', function() {
                        if (window.track) {
                            window.track('whatsapp_clicked', {
                                event_category: 'conversion',
                                event_label: this.href,
                                contact_method: 'whatsapp'
                            });
                        }
                    });
                });
                
                // CTA buttons
                document.querySelectorAll('.cta-button, .btn-primary').forEach(function(button) {
                    button.addEventListener('click', function() {
                        if (window.track) {
                            window.track('cta_button_clicked', {
                                event_category: 'engagement',
                                event_label: this.textContent.trim(),
                                button_text: this.textContent.trim(),
                                button_location: 'main_page'
                            });
                        }
                    });
                });
                
                // Time-based engagement tracking
                setTimeout(function() {
                    if (window.track) {
                        window.track('engagement_10s', {
                            event_category: 'engagement',
                            event_label: '10 seconds on page',
                            engagement_time: 10
                        });
                    }
                }, 10000);
                
                setTimeout(function() {
                    if (window.track) {
                        window.track('engagement_30s', {
                            event_category: 'engagement', 
                            event_label: '30 seconds on page',
                            engagement_time: 30
                        });
                    }
                }, 30000);
            });
            
            // Enhanced form tracking
            function trackFormSubmission(formId, formData) {
                if (window.track) {
                    window.track('form_submitted_enhanced', {
                        event_category: 'conversion',
                        event_label: formId,
                        form_id: formId,
                        form_data: formData,
                        conversion_value: formId.includes('service') ? 50 : 25
                    });
                }
            }
        </script>
        
        <!-- 🎯 A/B Testing & SEO Performance Tracking -->
        <script>
        // A/B Testing Conversion Tracking
        function trackABTestConversion(testId, eventType) {
            const data = {
                sessionId: window.abTestData?.userId || 'anonymous_' + Date.now(),
                event: 'ab_test_conversion_' + eventType,
                page: window.location.pathname,
                properties: {
                    testId: testId,
                    variant: window.abTestData?.heroVariant || 'unknown',
                    eventType: eventType,
                    timestamp: new Date().toISOString()
                },
                value: eventType === 'cta_click' ? 10 : 1
            };
            
            // Send conversion tracking
            if (typeof axios !== 'undefined') {
                axios.post('/api/conversion/track', data)
                    .then(() => console.log('🎯 A/B Test Conversion tracked:', eventType))
                    .catch(err => console.error('Conversion tracking error:', err));
            }
            
            // GA4 tracking
            if (typeof gtag !== 'undefined') {
                gtag('event', 'ab_test_conversion', {
                    event_category: 'ab_testing',
                    event_label: testId + '_' + eventType,
                    variant: window.abTestData?.heroVariant,
                    value: eventType === 'cta_click' ? 10 : 1
                });
            }
            
            // Facebook Pixel tracking
            if (typeof fbq !== 'undefined') {
                fbq('trackCustom', 'ABTestConversion', {
                    test_id: testId,
                    variant: window.abTestData?.heroVariant,
                    event_type: eventType,
                    content_category: 'ab_testing'
                });
            }
        }
        
        // Core Web Vitals & Performance Tracking
        function trackPerformanceMetrics() {
            // Wait for page to fully load
            window.addEventListener('load', function() {
                setTimeout(function() {
                    const performanceData = {
                        url: window.location.href,
                        metrics: {},
                        userAgent: navigator.userAgent,
                        connection: navigator.connection ? navigator.connection.effectiveType : null
                    };
                    
                    // Core Web Vitals with web-vitals library or Performance API
                    if ('PerformanceObserver' in window) {
                        // Largest Contentful Paint (LCP)
                        new PerformanceObserver((entryList) => {
                            const entries = entryList.getEntries();
                            const lastEntry = entries[entries.length - 1];
                            performanceData.metrics.lcp = Math.round(lastEntry.startTime);
                        }).observe({type: 'largest-contentful-paint', buffered: true});
                        
                        // First Input Delay (FID)
                        new PerformanceObserver((entryList) => {
                            const entries = entryList.getEntries();
                            entries.forEach(entry => {
                                performanceData.metrics.fid = Math.round(entry.processingStart - entry.startTime);
                            });
                        }).observe({type: 'first-input', buffered: true});
                        
                        // Cumulative Layout Shift (CLS)
                        let clsValue = 0;
                        new PerformanceObserver((entryList) => {
                            entryList.getEntries().forEach(entry => {
                                if (!entry.hadRecentInput) {
                                    clsValue += entry.value;
                                }
                            });
                            performanceData.metrics.cls = clsValue;
                        }).observe({type: 'layout-shift', buffered: true});
                    }
                    
                    // Navigation Timing API for other metrics
                    const nav = performance.getEntriesByType('navigation')[0];
                    if (nav) {
                        performanceData.metrics.ttfb = Math.round(nav.responseStart - nav.requestStart);
                        performanceData.metrics.fcp = Math.round(nav.loadEventEnd - nav.loadEventStart);
                    }
                    
                    // Send performance data after 3 seconds
                    setTimeout(function() {
                        if (typeof axios !== 'undefined') {
                            axios.post('/api/seo/track-performance', performanceData)
                                .then(() => console.log('📊 Performance metrics tracked'))
                                .catch(err => console.error('Performance tracking error:', err));
                        }
                    }, 3000);
                }, 1000);
            });
        }
        
        // SEO Engagement Tracking
        function trackSEOEngagement() {
            let startTime = Date.now();
            let maxScroll = 0;
            let interactions = 0;
            
            // Scroll depth tracking
            window.addEventListener('scroll', function() {
                const scrollPercent = Math.round((window.scrollY / (document.body.scrollHeight - window.innerHeight)) * 100);
                maxScroll = Math.max(maxScroll, scrollPercent);
            });
            
            // Interaction tracking
            ['click', 'touchstart', 'keydown'].forEach(event => {
                document.addEventListener(event, function() {
                    interactions++;
                });
            });
            
            // Send engagement data when user leaves or after 30 seconds
            function sendEngagementData() {
                const engagementData = {
                    sessionId: window.abTestData?.userId || 'anonymous_' + Date.now(),
                    event: 'page_engagement',
                    page: window.location.pathname,
                    properties: {
                        engagementTime: Date.now() - startTime,
                        maxScrollDepth: maxScroll,
                        interactions: interactions,
                        abVariant: window.abTestData?.heroVariant,
                        city: window.seoData?.city || 'unknown'
                    }
                };
                
                if (typeof axios !== 'undefined') {
                    axios.post('/api/conversion/track', engagementData)
                        .catch(err => console.error('Engagement tracking error:', err));
                }
            }
            
            // Track engagement after 30 seconds
            setTimeout(sendEngagementData, 30000);
            
            // Track engagement on page unload
            window.addEventListener('beforeunload', sendEngagementData);
        }
        
        // Initialize A/B Testing & SEO Tracking
        document.addEventListener('DOMContentLoaded', function() {
            console.log('🎯 A/B Testing & SEO Tracking initialized');
            console.log('📊 Variant:', window.abTestData?.heroVariant);
            console.log('🌍 SEO Data:', window.seoData);
            
            // Track page view conversion
            trackABTestConversion(window.abTestData?.testId || 'homepage-hero-v2', 'page_view');
            
            // Initialize performance tracking
            trackPerformanceMetrics();
            
            // Initialize engagement tracking  
            trackSEOEngagement();
        });
        
        // Expose functions globally for inline onclick handlers
        window.trackABTestConversion = trackABTestConversion;
        </script>
        
        <script src="/static/form-handler.js"></script>
    </body>
    </html>`
  )
})

// Separate script for slider to avoid conflicts
app.get('/slider.js', (c) => {
  return new Response(`
// CUSTOMER REVIEWS SLIDER - SIMPLE VERSION
console.log('Slider script loaded!');

var currentSlide = 0;
var totalSlides = 5;
var sliderTimer = null;

function changeReviewSlide(slideIndex) {
    console.log('Changing to slide:', slideIndex);
    currentSlide = slideIndex;
    updateSliderView();
}

function updateSliderView() {
    var carousel = document.getElementById('reviewsCarousel');
    if (carousel) {
        var translateX = -(currentSlide * 100);
        carousel.style.transform = 'translateX(' + translateX + '%)';
        console.log('Updated to slide', currentSlide, 'with transform', translateX + '%');
    }
    
    var dots = document.querySelectorAll('.review-dot');
    for (var i = 0; i < dots.length; i++) {
        if (i === currentSlide) {
            dots[i].className = 'review-dot w-3 h-3 rounded-full bg-white transition-all';
        } else {
            dots[i].className = 'review-dot w-3 h-3 rounded-full bg-white/40 transition-all';
        }
    }
}

function autoAdvance() {
    currentSlide = (currentSlide + 1) % totalSlides;
    console.log('Auto advancing to slide:', currentSlide);
    updateSliderView();
}

function startSlider() {
    console.log('Starting slider with', totalSlides, 'slides');
    if (sliderTimer) clearInterval(sliderTimer);
    sliderTimer = setInterval(autoAdvance, 4000);
    updateSliderView();
}

// Export to window
window.changeReviewSlide = changeReviewSlide;
window.startSlider = startSlider;

// ==========================================
// DİNAMİK CANLI BİLDİRİMLER SİSTEMİ
// ==========================================

// Dinamik update fonksiyonu - GLOBAL SCOPE
function updateLiveNotifications() {
    console.log('🔄 Updating live notifications...');
    
    const notifications = document.getElementById('liveNotifications');
    const comments = document.getElementById('liveComments');
    
    // ZENGİN TV-PC-BEYAZ EŞYA SERVİSLERİ
    const services = [
        // TV TAMİRLERİ - Zengin Çeşitlilik
        'Samsung QLED 4K TV Tamiri - 55" Ekran',
        'LG OLED C2 65" TV Panel Değişimi',
        'Sony Bravia XR A80K OLED TV Tamiri', 
        'Philips Ambilight 50" LED TV Tamiri',
        'TCL Mini LED 8K TV Ekran Tamiri',
        'Vestel Smart TV Anakart Tamiri',
        'Grundig Vision 7 TV Hoparlör Tamiri',
        'Arçelik A65 A 860 B Smart TV Tamiri',
        'Sharp Aquos LC-60 LED TV Tamiri',
        'Panasonic Viera TX-55 Plazma TV Tamiri',
        'Toshiba 43" Full HD LED TV Tamiri',
        'JVC LT-32 LCD TV Ekran Değişimi',
        'Telefunken 32" Smart TV Kurulum',
        'Beko B32-LB-5533 LED TV Tamiri',
        'Regal 40" Full HD TV Panel Tamiri',
        'Altus AL32L 5531 4B LED TV Tamiri',
        'Sunny SN43 4K Smart TV Tamiri',
        'Skyworth 50" Android TV Kurulum',
        'Hisense U7H Mini LED TV Tamiri',
        'Xiaomi Mi TV P1 55" Ekran Tamiri',
        
        // PC & LAPTOP TAMİRLERİ - Gaming & İş
        'Gaming PC Kurulum - RTX 4090 + i9-13900K',
        'İş PC Tamiri - Dell OptiPlex 7090 SFF',
        'PC Anakart Tamiri - ASUS ROG Maximus',
        'Gaming Laptop Tamiri - ASUS ROG Strix G18',
        'MacBook Tamiri - MacBook Pro 16" M2 Max',
        'PC Soğutma Sistemi - Corsair iCUE H150i',
        'Oyun PC Toplama - AMD Ryzen 9 + RTX 4080',
        'Laptop Ekran Tamiri - Lenovo Legion Pro 7',
        'PC Format & Setup - Windows 11 Pro Kurulum',
        'SSD Upgrade - Samsung 980 PRO 2TB NVMe',
        
        // BEYAZ EŞYA - Premium Markalar
        'Buzdolabı Tamiri - Samsung Family Hub RF23M',
        'Buzdolabı Tamiri - LG InstaView Door-in-Door', 
        'Çamaşır Makinesi - Bosch Serie | 8 WAX32EH0TR',
        'Çamaşır Makinesi - LG TurboWash360 F4WV912P2',
        'Bulaşık Makinesi - Siemens iQ700 speedMatic',
        'Bulaşık Makinesi - Bosch Serie 8 Crystal Dry',
        'Mikrodalga Tamiri - Panasonic NN-DS596MEPG',
        'Fırın Tamiri - Bosch HBG675BS1 Piroliz',
        'Davlumbaz Tamiri - Siemens LC87KHM60T',
        
        // KLİMA & HVAC SİSTEMLERİ
        'VRV Klima Sistemi - Daikin VRV 5 A-series',
        'Split Klima Tamiri - Mitsubishi Electric MSZ-LN',
        'Klima Gaz Dolumu - LG Artcool Gallery AC12SQ',
        'Klima Montaj & Setup - Samsung WindFree Elite',
        'Multi Split Sistem - Fujitsu General ASHG12KMCC',
        'Inverter Klima Tamiri - Vestel Vega Plus 18000',
        
        // ELEKTRONİK CİHAZLAR
        'iPhone Tamiri - iPhone 15 Pro Max 1TB',
        'Samsung Tamiri - Galaxy S24 Ultra 512GB',
        'Tablet Tamiri - iPad Pro 12.9" M2 Wi-Fi',
        'PlayStation Tamiri - PS5 Slim Digital Edition',
        'Xbox Tamiri - Xbox Series X 1TB SSD',
        'Akıllı Saat Tamiri - Apple Watch Ultra 2',
        'Kulaklık Tamiri - Sony WH-1000XM5 Wireless',
        'Hoparlör Setup - JBL PartyBox 710 Bluetooth'
    ];
    
    const locations = [
        'Istanbul, Besiktas', 'Istanbul, Kadikoy', 'Istanbul, Sisli', 'Istanbul, Beyoglu',
        'Ankara, Cankaya', 'Ankara, Kizilay', 'Ankara, Bahcelievler', 'Ankara, Kecioren',  
        'Izmir, Konak', 'Izmir, Alsancak', 'Izmir, Bornova', 'Izmir, Karsiyaka',
        'Bursa, Osmangazi', 'Bursa, Nilufer', 'Bursa, Yildirim', 'Bursa, Gemlik',
        'Antalya, Muratpasa', 'Antalya, Kepez', 'Antalya, Konyaalti', 'Antalya, Serik',
        'Gaziantep, Sahinbey', 'Konya, Selcuklu', 'Adana, Seyhan', 'Kayseri, Melikgazi'
    ];
    const timeAgo = ['simdi', '1 dk once', '2 dk once', '3 dk once', '30 sn once', '45 sn once', '1.5 dk once'];
    
    const customerNames = [
        'Mehmet K.', 'Ayse Y.', 'Can S.', 'Elif M.', 'Murat D.', 'Zeynep A.', 'Ali R.', 'Fatma B.',
        'Ahmet T.', 'Seda L.', 'Burak O.', 'Deniz K.', 'Cem Y.', 'Pinar G.', 'Oguz B.', 'Merve S.',
        'Emre D.', 'Selin A.', 'Baris C.', 'Gizem E.', 'Kaan P.', 'Tugba R.', 'Serkan M.', 'Ebru T.',
        'Volkan S.', 'Esra H.', 'Tolga K.', 'Nazli B.', 'Onur G.', 'Burcu Y.', 'Arda F.', 'Ipek L.'
    ];
    const customerComments = [
        // TV Yorumlari - ASCII Safe
        'OLED TV tamiri mukemmel, artik sinema keyfi evimde...',
        '8K goruntu kalitesi harika oldu, cok tesekkurler...',
        'Smart TV kurulumu perfect, tum uygulamalar calisiyor...',
        'Panel degisimi super, yepyeni gibi gorunuyor...',
        'TV sesinde problem vardi, simdi muthis ses kalitesi...',
        'QLED teknolojisi harika, renkler cok canli...',
        
        // PC & Laptop Yorumları - Kısa & Noktalı
        'Gaming PC kurulumu efsane, RTX performansı müthiş...',
        'MacBook tamiri professional, M2 chip gerçekten uçuyor...',
        'PC format çok hızlı oldu, Windows 11 çok smooth...',
        'SSD upgrade sonrası bilgisayarım roket gibi hızlı...',
        'Laptop ekranı yenilendi, 4K kalite gerçekten süper...',
        'Oyun PC toplama hizmeti A+, fps ciddi arttı...',
        'İş bilgisayarım artık çok verimli çalışıyor...',
        'Anakart tamiri başarılı, tüm portlar perfect...',
        
        // Beyaz Eşya Yorumları - Kısa & Noktalı  
        'Buzdolabı tamiri mükemmel, artık sessiz çalışıyor...',
        'Çamaşır makinesi artık 10/10, temizlik harika...',
        'Bulaşık makinesi tamiri başarılı, spotless sonuç...',
        'Mikrodalga yeniden hayata döndü, çok hızlı...',
        'Fırın tamiri süper, ekmeklerim artık perfect...',
        'Family Hub özelliği artık mükemmel çalışıyor...',
        'Kompresör tamiri başarılı, enerji tasarrufu var...',
        'Pompa değişimi perfect, artık sessiz yıkıyor...',
        
        // Klima Yorumları - Kısa & Noktalı
        'VRV sistem kurulumu professional, tüm ev ideal...',
        'Klima tamiri mükemmel, sessiz ve güçlü soğutma...',
        'Split montaj çok temiz, duvarda iz kalmadı...',
        'Inverter klima artık energy efficient çalışıyor...',
        'Multi split sistemi harika, her oda ayrı kontrol...',
        'Gaz dolumu perfect, soğutma performansı geri geldi...',
        
        // Elektronik Yorumları - Kısa & Noktalı
        'iPhone ekranı yepyeni gibi, dokunmatik hassas...',
        'PlayStation tamiri süper, lag problemi tamamen...',
        'iPad Pro tamiri başarılı, Apple Pencil çalışıyor...',
        'Galaxy S24 kamera sorunu tamamen çözüldü...',
        'Apple Watch tamiri perfect, battery life uzun...',
        'Kulaklık ses kalitesi geri geldi, bass muhteşem...',
        'Tablet ekran tamiri başarılı, çok net görüntü...',
        'Konsol fan temizliği perfect, artık sessiz...',
        
        // Genel Memnuniyet - Kısa & Noktalı
        'Hizmet kalitesi A+, kesinlikle tavsiye ederim...',
        'Teknisyen çok bilgili, gerçekten işini biliyor...',
        'Zamanında geldi, çok hızlı çözüm buldu...',
        'Fiyat-performans mükemmel, çok uygun fiyat...',
        'Garantili hizmet, güvenle tercih edebilirsiniz...',
        'Problem tamamen çözüldü, çok memnunum...',
        'Profesyonel ekip, kaliteli malzeme kullanıyor...',
        'İkinci kez hizmet alıyorum, yine mükemmel...',
        'Müşteri hizmetleri de çok iyi, çok anlayışlı...',
        'Randevu sistemi kolay, esnek saatler mevcut...',
        'Ödeme seçenekleri uygun, taksit imkanı var...',
        'Servis sonrası takip yapıyorlar, çok caring...',
        'Usta çok deneyimli, işi hızlı ve temiz yapıyor...',
        'Malzeme kalitesi yüksek, orijinal parça kullanıyor...'
    ];
    
    // Bildirimleri güncelle
    if (notifications) {
        console.log('✅ Found notifications container');
        const randomService = services[Math.floor(Math.random() * services.length)];
        const randomLocation = locations[Math.floor(Math.random() * locations.length)];
        const randomTime = timeAgo[Math.floor(Math.random() * timeAgo.length)];
        
        const div = document.createElement('div');
        div.className = 'bg-white/10 border-l-4 border-green-400 p-3 text-white text-sm rounded-r-lg shadow-lg mb-2 transform opacity-0 scale-95 transition-all duration-300';
        div.innerHTML = 
            '<div class="font-medium text-sm">' + randomService + '</div>' +
            '<div class="text-green-200 text-xs opacity-90">' + randomLocation + ' • ' + randomTime + '</div>';
        
        // YENİ İÇERİK EN ÜSTTE GÖRÜNSÜN
        if (notifications.firstChild) {
            notifications.insertBefore(div, notifications.firstChild);
        } else {
            notifications.appendChild(div);
        }
        
        // Animasyon için
        setTimeout(function() {
            div.style.opacity = '1';
            div.style.transform = 'scale(1)';
        }, 50);
        
        // Maximum 5 bildirim tut
        while (notifications.children.length > 5) {
            notifications.removeChild(notifications.lastChild);
        }
        console.log('✅ Added new notification:', randomService);
    } else {
        console.log('❌ liveNotifications container not found!');
    }
    
    // Yorumları güncelle
    if (comments) {
        console.log('✅ Found comments container');
        const randomName = customerNames[Math.floor(Math.random() * customerNames.length)];
        const randomComment = customerComments[Math.floor(Math.random() * customerComments.length)];
        
        const div = document.createElement('div');
        div.className = 'bg-white/10 p-3 text-white text-sm rounded-lg shadow-lg mb-2 transform opacity-0 scale-95 transition-all duration-300';
        // Rastgele yıldız sayısı (4 veya 5 yıldız)
        const starCount = Math.random() < 0.7 ? 5 : 4; // %70 ihtimalle 5 yıldız, %30 ihtimalle 4 yıldız
        const stars = '⭐'.repeat(starCount);
        
        div.innerHTML = 
            '<div class="font-medium text-sm">' + randomName + '</div>' +
            '<div class="text-yellow-400 text-xs my-1">' + stars + '</div>' +
            '<div class="text-blue-200 text-xs opacity-90">' + randomComment + '</div>' +
            '<div class="text-green-300 text-xs mt-1 flex items-center opacity-80">' +
                '<i class="fas fa-check-circle mr-1"></i>' +
                'Doğrulanmış Kullanıcı' +
            '</div>';
        
        // YENİ YORUM EN ÜSTTE GÖRÜNSÜN  
        if (comments.firstChild) {
            comments.insertBefore(div, comments.firstChild);
        } else {
            comments.appendChild(div);
        }
        
        // Animasyon için
        setTimeout(function() {
            div.style.opacity = '1';
            div.style.transform = 'scale(1)';
        }, 50);
        
        // Maximum 5 yorum tut
        while (comments.children.length > 5) {
            comments.removeChild(comments.lastChild);
        }
        console.log('✅ Added new comment:', randomName);
    } else {
        console.log('❌ liveComments container not found!');
    }
}

// ==========================================
// DİNAMİK GÜVENLİK GARANTİLERİ SİSTEMİ
// ==========================================

// Dinamik güvenlik garantileri verisi
function updateSecurityGuarantees() {
    const securityData = [
        {
            icon: 'fas fa-tools',
            title: 'IŞÇILIK GARANTISI',
            detail: '6 ay garanti',
            color: 'text-blue-300'
        },
        {
            icon: 'fas fa-shield-check',
            title: 'ÖDEME GÜVENCESI',
            detail: '24 saat koruma',
            color: 'text-green-300'
        },
        {
            icon: 'fas fa-medal',
            title: 'KALİTE GARANTISI',
            detail: 'A+ sertifikali',
            color: 'text-amber-300'
        },
        {
            icon: 'fas fa-headset',
            title: 'DESTEK GARANTISI',
            detail: '7/24 yardım',
            color: 'text-purple-300'
        },
        {
            icon: 'fas fa-clock',
            title: 'SÜRE GARANTISI',
            detail: 'Zamanında teslimat',
            color: 'text-cyan-300'
        },
        {
            icon: 'fas fa-certificate',
            title: 'UZMAN GARANTISI',
            detail: 'Sertifikalı teknisyen',
            color: 'text-orange-300'
        },
        {
            icon: 'fas fa-undo',
            title: 'İADE GARANTISI',
            detail: 'Koşulsuz iade',
            color: 'text-pink-300'
        }
    ];
    
    const securityIcon = document.getElementById('securityIcon');
    const securityTitle = document.getElementById('securityTitle');
    const securityDetail = document.getElementById('securityDetail');
    
    if (securityIcon && securityTitle && securityDetail) {
        const randomSecurity = securityData[Math.floor(Math.random() * securityData.length)];
        
        // Icon ve rengi güncelle
        securityIcon.className = randomSecurity.icon + ' ' + randomSecurity.color + ' mr-1 text-xs';
        
        // Başlık güncelle
        securityTitle.textContent = randomSecurity.title;
        
        // Detay güncelle
        securityDetail.textContent = randomSecurity.detail;
        
        console.log('🛡️ Updated security guarantee:', randomSecurity.title);
    }
}

// Export to global scope
window.updateLiveNotifications = updateLiveNotifications;
window.updateSecurityGuarantees = updateSecurityGuarantees;

// IMMEDIATE START - Try multiple methods
console.log('🚀 Script loaded, starting immediately...');

// Method 1: Immediate execution
setTimeout(function() {
    console.log('✅ Method 1: Immediate timeout execution');
    tryStartNotifications();
}, 100);

// Method 2: DOM ready
document.addEventListener('DOMContentLoaded', function() {
    console.log('✅ DOM ready, starting slider...');
    setTimeout(startSlider, 1000);
    
    console.log('✅ Starting live notifications system...');
    console.log('✅ Checking if containers exist...');
    
    const notifContainer = document.getElementById('liveNotifications');
    const commentsContainer = document.getElementById('liveComments');
    
    console.log('Notifications container:', notifContainer);
    console.log('Comments container:', commentsContainer);
    
    if (notifContainer && commentsContainer) {
        console.log('✅ Both containers found, starting timers...');
        // İlk güncellemeyi hemen başlat
        setTimeout(function() {
            console.log('⏰ First update triggered');
            updateLiveNotifications();
        }, 2000);
        
        // Her 3 saniyede bir güncelle  
        setInterval(function() {
            console.log('⏰ Interval update triggered');
            updateLiveNotifications();
        }, 3000);
    } else {
        console.log('❌ Containers not found!');
    }
    
    console.log('🛡️ Starting dynamic security guarantees...');
    // İlk güvenlik garantisi güncellemesi
    setTimeout(updateSecurityGuarantees, 1500);
    
    // Her 4 saniyede bir güvenlik garantilerini güncelle
    setInterval(updateSecurityGuarantees, 4000);
});

// Method 3: Window load
window.addEventListener('load', function() {
    console.log('✅ Method 3: Window load event');
    tryStartNotifications();
});

function tryStartNotifications() {
    console.log('🔍 Trying to start notifications...');
    
    const notifContainer = document.getElementById('liveNotifications');
    const commentsContainer = document.getElementById('liveComments');
    
    console.log('Notifications container found:', !!notifContainer);
    console.log('Comments container found:', !!commentsContainer);
    
    if (notifContainer && commentsContainer) {
        console.log('✅ Starting live notifications now!');
        
        // Clear any existing content
        notifContainer.innerHTML = '';
        commentsContainer.innerHTML = '';
        
        // Start immediately
        updateLiveNotifications();
        
        // Set intervals
        setInterval(updateLiveNotifications, 4000);
        
        return true;
    } else {
        console.log('❌ Containers not ready yet, will retry...');
        
        // Retry after 1 second
        setTimeout(tryStartNotifications, 1000);
        return false;
    }
}
`, {
    headers: {
      'Content-Type': 'application/javascript',
      'Cache-Control': 'no-cache'
    }
  })
})

// =============================================================================
// Bot Protection & Security API Routes - Task 6 Backend Implementation
// =============================================================================

// Log suspicious activity endpoint
app.post('/api/security/suspicious-activity', async (c) => {
  const { DB } = c.env
  
  try {
    const {
      activityType,
      confidence,
      indicators,
      userAgent,
      fingerprint,
      behavioralData,
      requestData
    } = await c.req.json()
    
    const ipAddress = c.req.header('cf-connecting-ip') || 
                      c.req.header('x-forwarded-for') || 
                      c.req.header('x-real-ip') || 
                      'unknown'
    
    // Validate required fields
    if (!activityType || !confidence) {
      return c.json({ error: 'Activity type and confidence are required' }, 400)
    }
    
    // Check IP protection status
    const ipInfo = await DB.prepare(`
      SELECT threat_level, is_blocked, request_count, last_activity
      FROM ip_protection 
      WHERE ip_address = ?
    `).bind(ipAddress).first()
    
    let threatLevel = confidence
    let shouldBlock = false
    
    // Update or create IP protection record
    if (ipInfo) {
      // Existing IP - update threat level based on new activity
      threatLevel = Math.min(100, ipInfo.threat_level + (confidence * 0.3))
      shouldBlock = threatLevel > 85
      
      await DB.prepare(`
        UPDATE ip_protection 
        SET threat_level = ?, 
            is_blocked = ?,
            last_activity = CURRENT_TIMESTAMP,
            request_count = request_count + 1,
            block_reason = CASE WHEN ? THEN 'Automated block - high threat score' ELSE block_reason END,
            notes = ?
        WHERE ip_address = ?
      `).bind(
        threatLevel,
        shouldBlock,
        shouldBlock,
        `Suspicious activity detected: ${activityType}`,
        ipAddress
      ).run()
    } else {
      // New IP
      shouldBlock = confidence > 85
      
      await DB.prepare(`
        INSERT INTO ip_protection (
          ip_address, threat_level, is_blocked, block_reason, first_seen, 
          last_activity, request_count, notes
        ) VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 1, ?)
      `).bind(
        ipAddress,
        confidence,
        shouldBlock,
        shouldBlock ? 'Automated block - high initial threat' : null,
        `Initial suspicious activity: ${activityType}`
      ).run()
    }
    
    // Log the detection
    const detectionResult = await DB.prepare(`
      INSERT INTO bot_detections (
        ip_address, detection_type, confidence_score, indicators,
        user_agent, request_fingerprint, mouse_entropy, click_patterns,
        timing_patterns, navigation_patterns, action_taken, timestamp
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)
    `).bind(
      ipAddress,
      activityType,
      confidence,
      JSON.stringify(indicators || []),
      userAgent || c.req.header('user-agent'),
      fingerprint || 'none',
      behavioralData?.mouseEntropy || null,
      JSON.stringify(behavioralData?.clickPatterns || {}),
      JSON.stringify(behavioralData?.timingPatterns || {}),
      JSON.stringify(behavioralData?.navigationPatterns || {}),
      shouldBlock ? 'blocked' : 'logged'
    ).run()
    
    // Log detailed request information
    await DB.prepare(`
      INSERT INTO request_logs (
        ip_address, user_agent, request_method, request_path, request_headers,
        request_body, timestamp, human_score, bot_indicators, is_suspicious,
        mouse_movements, keyboard_events, scroll_events, click_events
      ) VALUES (?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      ipAddress,
      userAgent || c.req.header('user-agent'),
      c.req.method,
      c.req.path,
      JSON.stringify({
        'user-agent': c.req.header('user-agent'),
        'accept-language': c.req.header('accept-language'),
        'cf-ray': c.req.header('cf-ray')
      }),
      JSON.stringify(requestData || {}),
      100 - confidence, // human score is inverse of bot confidence
      JSON.stringify(indicators || []),
      confidence > 70,
      behavioralData?.mouseMovements || 0,
      behavioralData?.keyboardEvents || 0,
      behavioralData?.scrollEvents || 0,
      behavioralData?.clickEvents || 0
    ).run()
    
    SystemLogger.warn('Security', 'Suspicious activity detected', {
      ip: ipAddress,
      type: activityType,
      confidence,
      blocked: shouldBlock,
      detectionId: detectionResult.meta.last_row_id
    })
    
    return c.json({
      success: true,
      threatLevel,
      blocked: shouldBlock,
      detectionId: detectionResult.meta.last_row_id,
      message: shouldBlock ? 'IP blocked due to high threat level' : 'Activity logged'
    })
    
  } catch (error) {
    console.error('Suspicious activity logging error:', error)
    return c.json({ error: 'Security logging failed' }, 500)
  }
})

// Validate Google Ads click endpoint
app.post('/api/security/ad-click-validation', async (c) => {
  const { DB } = c.env
  
  try {
    const {
      gclid,
      keyword,
      adData,
      clickTimestamp,
      behavioralScore,
      validationTests
    } = await c.req.json()
    
    const ipAddress = c.req.header('cf-connecting-ip') || 
                      c.req.header('x-forwarded-for') || 
                      'unknown'
    
    if (!gclid) {
      return c.json({ error: 'GCLID is required' }, 400)
    }
    
    // Check for click fraud indicators
    let fraudConfidence = 0
    const fraudIndicators = []
    
    // 1. Check IP reputation
    const ipInfo = await DB.prepare(`
      SELECT threat_level, is_blocked, request_count
      FROM ip_protection 
      WHERE ip_address = ?
    `).bind(ipAddress).first()
    
    if (ipInfo) {
      if (ipInfo.is_blocked) {
        fraudConfidence += 50
        fraudIndicators.push('blocked_ip')
      }
      if (ipInfo.threat_level > 70) {
        fraudConfidence += 30
        fraudIndicators.push('high_threat_ip')
      }
      if (ipInfo.request_count > 1000) {
        fraudConfidence += 20
        fraudIndicators.push('high_request_volume')
      }
    }
    
    // 2. Check recent ad clicks from same IP
    const recentClicks = await DB.prepare(`
      SELECT COUNT(*) as count
      FROM request_logs 
      WHERE ip_address = ? 
        AND gclid IS NOT NULL 
        AND timestamp >= datetime('now', '-1 day')
    `).bind(ipAddress).first()
    
    if (recentClicks && recentClicks.count > 5) {
      fraudConfidence += 40
      fraudIndicators.push('excessive_ad_clicks')
    }
    
    // 3. Behavioral analysis
    if (behavioralScore < 40) {
      fraudConfidence += 35
      fraudIndicators.push('low_behavioral_score')
    }
    
    // 4. Validation tests results
    if (validationTests) {
      if (validationTests.mouseMovement === false) {
        fraudConfidence += 25
        fraudIndicators.push('no_mouse_movement')
      }
      if (validationTests.humanTiming === false) {
        fraudConfidence += 20
        fraudIndicators.push('bot_timing_pattern')
      }
      if (validationTests.jsEnabled === false) {
        fraudConfidence += 30
        fraudIndicators.push('no_javascript')
      }
    }
    
    const isValidClick = fraudConfidence < 70
    const actionTaken = isValidClick ? 'validated' : 'flagged'
    
    // Log the ad click validation
    await DB.prepare(`
      UPDATE request_logs 
      SET gclid = ?, 
          utm_source = ?,
          utm_campaign = ?,
          utm_medium = ?,
          ad_click_validated = ?
      WHERE ip_address = ? 
        AND timestamp >= datetime('now', '-5 minutes')
      ORDER BY timestamp DESC 
      LIMIT 1
    `).bind(
      gclid,
      adData?.source || 'google',
      adData?.campaign || keyword,
      adData?.medium || 'cpc',
      isValidClick,
      ipAddress
    ).run()
    
    // Create specific bot detection record for ad fraud
    await DB.prepare(`
      INSERT INTO bot_detections (
        ip_address, detection_type, confidence_score, indicators,
        user_agent, action_taken, notes, timestamp
      ) VALUES (?, 'ad_fraud', ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)
    `).bind(
      ipAddress,
      fraudConfidence,
      JSON.stringify(fraudIndicators),
      c.req.header('user-agent'),
      actionTaken,
      `Google Ads click validation: ${gclid} - ${keyword || 'no keyword'}`
    ).run()
    
    SystemLogger.info('Security', 'Ad click validation completed', {
      ip: ipAddress,
      gclid,
      keyword,
      fraudConfidence,
      valid: isValidClick,
      indicators: fraudIndicators
    })
    
    return c.json({
      success: true,
      valid: isValidClick,
      fraudConfidence,
      indicators: fraudIndicators,
      gclid,
      message: isValidClick ? 'Valid ad click' : 'Suspicious ad click detected'
    })
    
  } catch (error) {
    console.error('Ad click validation error:', error)
    return c.json({ error: 'Ad click validation failed' }, 500)
  }
})

// Get IP protection status
app.get('/api/security/ip-status/:ip', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  const targetIp = c.req.param('ip')
  
  try {
    const ipInfo = await DB.prepare(`
      SELECT * FROM ip_protection WHERE ip_address = ?
    `).bind(targetIp).first()
    
    if (!ipInfo) {
      return c.json({ 
        exists: false, 
        message: 'IP not found in protection database' 
      })
    }
    
    // Get recent detection history
    const { results: recentDetections } = await DB.prepare(`
      SELECT detection_type, confidence_score, action_taken, timestamp
      FROM bot_detections 
      WHERE ip_address = ? 
      ORDER BY timestamp DESC 
      LIMIT 10
    `).bind(targetIp).all()
    
    return c.json({
      success: true,
      exists: true,
      ipInfo,
      recentDetections
    })
    
  } catch (error) {
    console.error('IP status check error:', error)
    return c.json({ error: 'IP status check failed' }, 500)
  }
})

// =============================================================================
// Schema.org Structured Data API Routes
// =============================================================================

// Get schema data for page
app.get('/api/schema/:pageType', async (c) => {
  const { DB } = c.env
  const pageType = c.req.param('pageType')
  const serviceKey = c.req.query('service')
  
  try {
    // Try to get cached schema first
    const cachedSchema = await DB.prepare(`
      SELECT schema_data, schema_type, updated_at
      FROM schema_cache 
      WHERE page_type = ? 
        AND (service_key = ? OR service_key IS NULL)
        AND is_active = 1
        AND (expires_at IS NULL OR expires_at > CURRENT_TIMESTAMP)
      ORDER BY updated_at DESC
      LIMIT 1
    `).bind(pageType, serviceKey || null).first()
    
    if (cachedSchema) {
      return c.json({
        success: true,
        schema: JSON.parse(cachedSchema.schema_data),
        type: cachedSchema.schema_type,
        cached: true,
        updated: cachedSchema.updated_at
      })
    }
    
    // Generate fresh schema based on page type
    let schemaData = null
    let schemaType = 'LocalBusiness'
    
    switch (pageType) {
      case 'homepage':
        schemaData = {
          "@context": "https://schema.org",
          "@type": "LocalBusiness",
          "name": "GARANTOR360 TV Servisi",
          "image": "https://tv-servis-yonetim.pages.dev/static/logo.png",
          "description": "Türkiye'nin en kapsamlı TV servisi ve ev hizmetleri analitik platformu",
          "telephone": "+90-xxx-xxx-xxxx",
          "priceRange": "₺₺",
          "address": {
            "@type": "PostalAddress",
            "streetAddress": "Ana Cadde No:123",
            "addressLocality": "İstanbul",
            "postalCode": "34000",
            "addressCountry": "TR"
          },
          "geo": {
            "@type": "GeoCoordinates",
            "latitude": "41.0082",
            "longitude": "28.9784"
          },
          "openingHours": "Mo-Fr 09:00-18:00, Sa 09:00-15:00",
          "serviceArea": {
            "@type": "GeoCircle",
            "geoMidpoint": {
              "@type": "GeoCoordinates",
              "latitude": "41.0082",
              "longitude": "28.9784"
            },
            "geoRadius": "50000"
          },
          "offers": {
            "@type": "Offer",
            "description": "Profesyonel TV tamiri ve ev elektronik cihazları servisi",
            "priceRange": "150-2000 TRY"
          }
        }
        break
        
      case 'service':
        if (serviceKey) {
          const serviceSchemas = {
            'tv-tamiri': {
              "@context": "https://schema.org",
              "@type": "Service",
              "name": "TV Tamiri Hizmeti",
              "description": "Profesyonel televizyon tamiri, LED/OLED/QLED panel tamiri, ses sistemi onarımı",
              "provider": {
                "@type": "LocalBusiness",
                "name": "GARANTOR360"
              },
              "serviceType": "Televizyon Tamiri",
              "areaServed": "İstanbul, Ankara, İzmir",
              "offers": {
                "@type": "Offer",
                "priceRange": "200-1500 TRY",
                "warranty": "6 ay işçilik garantisi"
              }
            },
            'beyaz-esya': {
              "@context": "https://schema.org", 
              "@type": "Service",
              "name": "Beyaz Eşya Tamiri",
              "description": "Buzdolabı, çamaşır makinesi, bulaşık makinesi tamiri",
              "provider": {
                "@type": "LocalBusiness",
                "name": "GARANTOR360"
              },
              "serviceType": "Beyaz Eşya Tamiri",
              "areaServed": "Türkiye geneli",
              "offers": {
                "@type": "Offer",
                "priceRange": "300-2000 TRY"
              }
            }
          }
          schemaData = serviceSchemas[serviceKey] || serviceSchemas['tv-tamiri']
          schemaType = 'Service'
        }
        break
        
      case 'faq':
        schemaData = {
          "@context": "https://schema.org",
          "@type": "FAQPage",
          "mainEntity": [
            {
              "@type": "Question",
              "name": "TV tamiri ne kadar sürer?",
              "acceptedAnswer": {
                "@type": "Answer",
                "text": "Televizyon tamiri genellikle 1-2 saat sürer. Parça değişimi gerektiren durumlar için 1-3 gün sürebilir."
              }
            },
            {
              "@type": "Question", 
              "name": "Garanti süresi ne kadar?",
              "acceptedAnswer": {
                "@type": "Answer",
                "text": "Tüm işlerimizde 6 ay işçilik garantisi veriyoruz. Değiştirilen parçalar için üretici garantisi geçerlidir."
              }
            },
            {
              "@type": "Question",
              "name": "Hangi markaları tamir ediyorsunuz?",
              "acceptedAnswer": {
                "@type": "Answer",
                "text": "Samsung, LG, Sony, Vestel, TCL, Philips ve tüm diğer markaları profesyonel olarak tamir ediyoruz."
              }
            }
          ]
        }
        schemaType = 'FAQPage'
        break
        
      default:
        return c.json({ error: 'Unknown page type' }, 404)
    }
    
    if (schemaData) {
      // Cache the generated schema
      await DB.prepare(`
        INSERT OR REPLACE INTO schema_cache (
          page_type, service_key, schema_type, schema_data, 
          is_active, created_at, updated_at, expires_at
        ) VALUES (?, ?, ?, ?, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, datetime('now', '+7 days'))
      `).bind(
        pageType,
        serviceKey || null,
        schemaType,
        JSON.stringify(schemaData)
      ).run()
      
      return c.json({
        success: true,
        schema: schemaData,
        type: schemaType,
        cached: false
      })
    } else {
      return c.json({ error: 'Could not generate schema' }, 500)
    }
    
  } catch (error) {
    console.error('Schema generation error:', error)
    return c.json({ error: 'Schema generation failed' }, 500)
  }
})

// Update schema cache
app.post('/api/admin/schema/update', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { pageType, serviceKey, schemaType, schemaData } = await c.req.json()
    
    if (!pageType || !schemaType || !schemaData) {
      return c.json({ error: 'Page type, schema type and data are required' }, 400)
    }
    
    await DB.prepare(`
      INSERT OR REPLACE INTO schema_cache (
        page_type, service_key, schema_type, schema_data,
        is_active, created_at, updated_at, expires_at
      ) VALUES (?, ?, ?, ?, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, datetime('now', '+30 days'))
    `).bind(
      pageType,
      serviceKey || null,
      schemaType,
      JSON.stringify(schemaData)
    ).run()
    
    return c.json({
      success: true,
      message: 'Schema cache updated successfully'
    })
    
  } catch (error) {
    console.error('Schema update error:', error)
    return c.json({ error: 'Schema update failed' }, 500)
  }
})

// Get security configuration
app.get('/api/admin/security/config', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { results: configs } = await DB.prepare(`
      SELECT config_key, config_value, config_type, description, is_active
      FROM security_config 
      WHERE is_active = 1
      ORDER BY config_key
    `).all()
    
    const configObj = {}
    configs.forEach(config => {
      let value = config.config_value
      
      // Convert based on type
      switch (config.config_type) {
        case 'number':
          value = parseFloat(value)
          break
        case 'boolean':
          value = value === 'true'
          break
        case 'json':
          try {
            value = JSON.parse(value)
          } catch (e) {
            value = []
          }
          break
      }
      
      configObj[config.config_key] = {
        value,
        type: config.config_type,
        description: config.description
      }
    })
    
    return c.json({
      success: true,
      config: configObj
    })
    
  } catch (error) {
    console.error('Security config error:', error)
    return c.json({ error: 'Failed to get security config' }, 500)
  }
})

// Security dashboard statistics
app.get('/api/admin/security/dashboard', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    // Blocked IPs count
    const blockedIps = await DB.prepare(`
      SELECT COUNT(*) as count FROM ip_protection WHERE is_blocked = 1
    `).first()
    
    // Bot detections today
    const todayDetections = await DB.prepare(`
      SELECT COUNT(*) as count FROM bot_detections 
      WHERE DATE(timestamp) = DATE('now')
    `).first()
    
    // High threat IPs
    const highThreatIps = await DB.prepare(`
      SELECT COUNT(*) as count FROM ip_protection WHERE threat_level > 70
    `).first()
    
    // Top detection types today
    const { results: topDetectionTypes } = await DB.prepare(`
      SELECT detection_type, COUNT(*) as count
      FROM bot_detections 
      WHERE DATE(timestamp) = DATE('now')
      GROUP BY detection_type
      ORDER BY count DESC
      LIMIT 5
    `).all()
    
    // Suspicious requests trend (last 7 days)
    const { results: requestTrend } = await DB.prepare(`
      SELECT 
        DATE(timestamp) as date,
        COUNT(*) as total_requests,
        SUM(CASE WHEN is_suspicious = 1 THEN 1 ELSE 0 END) as suspicious_requests
      FROM request_logs 
      WHERE timestamp >= datetime('now', '-7 days')
      GROUP BY DATE(timestamp)
      ORDER BY date DESC
    `).all()
    
    return c.json({
      success: true,
      stats: {
        blockedIps: blockedIps?.count || 0,
        todayDetections: todayDetections?.count || 0,
        highThreatIps: highThreatIps?.count || 0,
        topDetectionTypes,
        requestTrend
      }
    })
    
  } catch (error) {
    console.error('Security dashboard error:', error)
    return c.json({ error: 'Security dashboard failed' }, 500)
  }
})

// IP Management Admin Panel Route
app.get('/admin/ip-management', (c) => {
  return c.html(`
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>IP Yönetimi - GARANTOR360 Admin</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-900 text-white">
        <div class="container mx-auto p-6">
            <div class="flex items-center justify-between mb-6">
                <h1 class="text-3xl font-bold">
                    <i class="fas fa-shield-alt mr-2"></i>
                    IP Yönetimi & Güvenlik Paneli
                </h1>
                <a href="/admin" class="bg-gray-700 hover:bg-gray-600 px-4 py-2 rounded">
                    <i class="fas fa-arrow-left mr-2"></i>
                    Admin Panel'e Dön
                </a>
            </div>

            <!-- Hızlı İstatistikler -->
            <div class="grid grid-cols-4 gap-4 mb-6">
                <div class="bg-red-900/30 border border-red-500 rounded-lg p-4 text-center">
                    <div id="blockedIPsCount" class="text-2xl font-bold text-red-400">-</div>
                    <div class="text-sm text-red-300">Engellenmiş IP</div>
                </div>
                <div class="bg-orange-900/30 border border-orange-500 rounded-lg p-4 text-center">
                    <div id="highThreatCount" class="text-2xl font-bold text-orange-400">-</div>
                    <div class="text-sm text-orange-300">Yüksek Tehdit</div>
                </div>
                <div class="bg-blue-900/30 border border-blue-500 rounded-lg p-4 text-center">
                    <div id="todayDetections" class="text-2xl font-bold text-blue-400">-</div>
                    <div class="text-sm text-blue-300">Bugünkü Tespit</div>
                </div>
                <div class="bg-green-900/30 border border-green-500 rounded-lg p-4 text-center">
                    <div class="text-2xl font-bold text-green-400" id="systemStatus">🟢</div>
                    <div class="text-sm text-green-300">Sistem Durumu</div>
                </div>
            </div>

            <!-- IP Engelleme Formu -->
            <div class="bg-gray-800 rounded-lg p-6 mb-6">
                <h2 class="text-xl font-semibold mb-4">
                    <i class="fas fa-ban mr-2"></i>
                    IP Adresini Engelle
                </h2>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                    <div>
                        <label class="block text-sm font-medium mb-2">IP Adresi</label>
                        <input type="text" id="blockIpInput" placeholder="192.168.1.100" 
                               class="w-full bg-gray-700 border border-gray-600 rounded px-3 py-2 text-white focus:border-blue-500">
                    </div>
                    <div>
                        <label class="block text-sm font-medium mb-2">Engelleme Nedeni</label>
                        <select id="blockReasonSelect" class="w-full bg-gray-700 border border-gray-600 rounded px-3 py-2 text-white focus:border-blue-500">
                            <option value="spam">Spam Girişimleri</option>
                            <option value="bot_activity">Bot Aktivitesi</option>
                            <option value="malicious_activity">Zararlı Aktivite</option>
                            <option value="fraud_attempts">Dolandırıcılık Girişimi</option>
                            <option value="abuse">Kötüye Kullanım</option>
                            <option value="manual_admin">Manuel Admin Kararı</option>
                        </select>
                    </div>
                </div>
                
                <div class="flex gap-4">
                    <button onclick="blockIP()" class="bg-red-600 hover:bg-red-700 px-6 py-2 rounded font-medium transition-colors">
                        <i class="fas fa-ban mr-2"></i>
                        IP Adresini Engelle
                    </button>
                    <button onclick="unblockIP()" class="bg-green-600 hover:bg-green-700 px-6 py-2 rounded font-medium transition-colors">
                        <i class="fas fa-check mr-2"></i>
                        IP Engelini Kaldır
                    </button>
                </div>
            </div>

            <!-- IP Sorgulama -->
            <div class="bg-gray-800 rounded-lg p-6 mb-6">
                <h2 class="text-xl font-semibold mb-4">
                    <i class="fas fa-search mr-2"></i>
                    IP Durumu Sorgula
                </h2>
                
                <div class="flex gap-4 mb-4">
                    <input type="text" id="checkIpInput" placeholder="IP adresini girin..." 
                           class="flex-1 bg-gray-700 border border-gray-600 rounded px-3 py-2 text-white focus:border-blue-500">
                    <button onclick="checkIPStatus()" class="bg-blue-600 hover:bg-blue-700 px-6 py-2 rounded font-medium transition-colors">
                        <i class="fas fa-search mr-2"></i>
                        Sorgula
                    </button>
                </div>
                
                <div id="ipStatusResult" class="hidden bg-gray-700 rounded-lg p-4"></div>
            </div>

            <!-- Güvenlik Olayları -->
            <div class="bg-gray-800 rounded-lg p-6">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-xl font-semibold">
                        <i class="fas fa-chart-line mr-2"></i>
                        Güvenlik İstatistikleri
                    </h2>
                    <button onclick="refreshSecurityStats()" class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-sm transition-colors">
                        <i class="fas fa-sync mr-1"></i>
                        Yenile
                    </button>
                </div>
                
                <div id="securityStats" class="space-y-4">
                    <div class="text-gray-400">Yükleniyor...</div>
                </div>
            </div>
        </div>

        <script>
            const adminToken = 'test-token-123';
            
            // IP Engelleme
            async function blockIP() {
                const ipAddress = document.getElementById('blockIpInput').value.trim();
                const reason = document.getElementById('blockReasonSelect').value;
                
                if (!ipAddress) {
                    showAlert('Lütfen geçerli bir IP adresi girin!', 'error');
                    return;
                }
                
                try {
                    const response = await fetch('/api/security/suspicious-activity', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            activityType: 'manual_block',
                            confidence: 100,
                            indicators: ['admin_manual_block', reason],
                            userAgent: 'Admin Panel - Manual IP Block',
                            behavioralData: {
                                manualBlock: true,
                                targetIP: ipAddress,
                                reason: reason,
                                adminAction: true,
                                timestamp: new Date().toISOString()
                            }
                        })
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        showAlert(\`✅ IP \${ipAddress} başarıyla engellendi!\\nTehdit Seviyesi: \${result.threatLevel}\`, 'success');
                        document.getElementById('blockIpInput').value = '';
                        refreshSecurityStats();
                    } else {
                        showAlert(\`❌ Engelleme başarısız: \${result.error || 'Bilinmeyen hata'}\`, 'error');
                    }
                } catch (error) {
                    showAlert(\`❌ Bağlantı hatası: \${error.message}\`, 'error');
                }
            }
            
            // IP Engelini Kaldırma (Placeholder - implement if needed)
            async function unblockIP() {
                const ipAddress = document.getElementById('blockIpInput').value.trim();
                
                if (!ipAddress) {
                    showAlert('Lütfen geçerli bir IP adresi girin!', 'error');
                    return;
                }
                
                // This would need a specific API endpoint to unblock IPs
                showAlert('IP engeli kaldırma özelliği yakında eklenecek.', 'info');
            }
            
            // IP Durumu Sorgulama
            async function checkIPStatus() {
                const ipAddress = document.getElementById('checkIpInput').value.trim();
                const resultDiv = document.getElementById('ipStatusResult');
                
                if (!ipAddress) {
                    showAlert('Lütfen geçerli bir IP adresi girin!', 'error');
                    return;
                }
                
                try {
                    const response = await fetch(\`/api/security/ip-status/\${ipAddress}\`, {
                        headers: { 'Authorization': \`Bearer \${adminToken}\` }
                    });
                    
                    const result = await response.json();
                    
                    if (result.exists) {
                        resultDiv.innerHTML = \`
                            <div class="space-y-3">
                                <h3 class="font-semibold text-lg">IP Durumu: \${ipAddress}</h3>
                                <div class="grid grid-cols-2 gap-4 text-sm">
                                    <div class="bg-gray-600 p-3 rounded">
                                        <strong>Durum:</strong><br>
                                        <span class="\${result.ipInfo.is_blocked ? 'text-red-400' : 'text-green-400'}">
                                            \${result.ipInfo.is_blocked ? '🚫 ENGELLİ' : '✅ AKTİF'}
                                        </span>
                                    </div>
                                    <div class="bg-gray-600 p-3 rounded">
                                        <strong>Tehdit Seviyesi:</strong><br>
                                        <span class="text-yellow-400 font-bold">\${result.ipInfo.threat_level}/100</span>
                                    </div>
                                    <div class="bg-gray-600 p-3 rounded">
                                        <strong>Toplam İstek:</strong><br>
                                        <span class="text-blue-400">\${result.ipInfo.request_count}</span>
                                    </div>
                                    <div class="bg-gray-600 p-3 rounded">
                                        <strong>İlk Görülme:</strong><br>
                                        <span class="text-gray-300">\${new Date(result.ipInfo.first_seen).toLocaleString('tr-TR')}</span>
                                    </div>
                                </div>
                                \${result.ipInfo.block_reason ? \`
                                    <div class="bg-red-900/30 border border-red-500 p-3 rounded">
                                        <strong class="text-red-300">Engelleme Nedeni:</strong><br>
                                        <span class="text-red-200">\${result.ipInfo.block_reason}</span>
                                    </div>
                                \` : ''}
                            </div>
                        \`;
                        resultDiv.classList.remove('hidden');
                    } else {
                        resultDiv.innerHTML = \`
                            <div class="bg-green-900/30 border border-green-500 p-4 rounded text-center">
                                <i class="fas fa-check-circle text-green-400 text-2xl mb-2"></i>
                                <div class="text-green-300">IP \${ipAddress} sistemde kayıtlı değil</div>
                                <div class="text-green-200 text-sm">Temiz görünüyor - güvenlik tehdidi tespit edilmemiş</div>
                            </div>
                        \`;
                        resultDiv.classList.remove('hidden');
                    }
                } catch (error) {
                    showAlert(\`❌ Sorgulama hatası: \${error.message}\`, 'error');
                }
            }
            
            // Güvenlik İstatistiklerini Yenile
            async function refreshSecurityStats() {
                const statsDiv = document.getElementById('securityStats');
                statsDiv.innerHTML = '<div class="text-gray-400">Yükleniyor...</div>';
                
                try {
                    const response = await fetch('/api/admin/security/dashboard', {
                        headers: { 'Authorization': \`Bearer \${adminToken}\` }
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        // Update quick stats
                        document.getElementById('blockedIPsCount').textContent = result.stats.blockedIps;
                        document.getElementById('highThreatCount').textContent = result.stats.highThreatIps;
                        document.getElementById('todayDetections').textContent = result.stats.todayDetections;
                        
                        // Update detailed stats
                        statsDiv.innerHTML = \`
                            \${result.stats.topDetectionTypes && result.stats.topDetectionTypes.length > 0 ? \`
                                <div class="mb-4">
                                    <h4 class="font-semibold mb-3 text-yellow-400">
                                        <i class="fas fa-exclamation-triangle mr-2"></i>
                                        En Sık Tespit Edilen Tehditler
                                    </h4>
                                    <div class="space-y-2">
                                        \${result.stats.topDetectionTypes.map(type => \`
                                            <div class="flex justify-between items-center bg-gray-700 p-3 rounded-lg">
                                                <div>
                                                    <span class="font-medium">\${type.detection_type.replace('_', ' ').toUpperCase()}</span>
                                                    <div class="text-xs text-gray-400">Güvenlik tehdidi türü</div>
                                                </div>
                                                <div class="text-right">
                                                    <div class="font-bold text-red-400">\${type.count}</div>
                                                    <div class="text-xs text-gray-400">olay</div>
                                                </div>
                                            </div>
                                        \`).join('')}
                                    </div>
                                </div>
                            \` : ''}
                            
                            <div class="bg-gray-700 p-4 rounded-lg">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <i class="fas fa-shield-check text-green-400 mr-2"></i>
                                        <span class="font-medium">Güvenlik Sistemi Durumu</span>
                                    </div>
                                    <span class="text-green-400 font-bold">🟢 AKTİF</span>
                                </div>
                                <div class="text-sm text-gray-400 mt-2">
                                    Son güncelleme: \${new Date().toLocaleString('tr-TR')}
                                </div>
                            </div>
                        \`;
                    }
                } catch (error) {
                    statsDiv.innerHTML = \`<div class="text-red-400">❌ Veri yüklenemedi: \${error.message}</div>\`;
                }
            }
            
            // Alert gösterme fonksiyonu
            function showAlert(message, type = 'info') {
                const colors = {
                    success: 'bg-green-900 border-green-500 text-green-200',
                    error: 'bg-red-900 border-red-500 text-red-200',
                    info: 'bg-blue-900 border-blue-500 text-blue-200'
                };
                
                const alertDiv = document.createElement('div');
                alertDiv.className = \`fixed top-4 right-4 \${colors[type]} border rounded-lg p-4 shadow-lg z-50 max-w-md\`;
                alertDiv.innerHTML = \`
                    <div class="flex justify-between items-start">
                        <span>\${message}</span>
                        <button onclick="this.parentElement.parentElement.remove()" class="ml-4 text-lg">&times;</button>
                    </div>
                \`;
                
                document.body.appendChild(alertDiv);
                
                // 5 saniye sonra otomatik kaldır
                setTimeout(() => {
                    if (alertDiv.parentElement) {
                        alertDiv.remove();
                    }
                }, 5000);
            }
            
            // Sayfa yüklendiğinde istatistikleri yükle
            document.addEventListener('DOMContentLoaded', function() {
                refreshSecurityStats();
            });
        </script>
    </body>
    </html>
  `)
})

// =============================================================================
// Dynamic Meta Tags System API Routes - Task 7 Backend Implementation
// =============================================================================

// Get meta tags for a specific page
app.get('/api/meta-tags/:pageType', async (c) => {
  const { DB } = c.env
  const pageType = c.req.param('pageType')
  const pageIdentifier = c.req.query('identifier') || 'main'
  const language = c.req.query('lang') || 'tr'
  
  try {
    // Get meta tags from database
    const metaTags = await DB.prepare(`
      SELECT * FROM dynamic_meta_tags 
      WHERE page_type = ? 
        AND (page_identifier = ? OR page_identifier IS NULL)
        AND language_code = ?
        AND is_active = 1
      ORDER BY priority_score DESC, created_at DESC
      LIMIT 1
    `).bind(pageType, pageIdentifier, language).first()
    
    if (metaTags) {
      return c.json({
        success: true,
        metaTags,
        cached: true
      })
    }
    
    // If no specific meta tags found, generate from template
    const template = await DB.prepare(`
      SELECT * FROM meta_tag_templates 
      WHERE page_type = ? AND is_active = 1
      LIMIT 1
    `).bind(pageType).first()
    
    if (template) {
      // Get variables for template processing
      const { results: variables } = await DB.prepare(`
        SELECT variable_key, variable_data FROM meta_variables WHERE is_active = 1
      `).all()
      
      const variableMap = {}
      variables.forEach(v => {
        try {
          variableMap[v.variable_key] = JSON.parse(v.variable_data)
        } catch (e) {
          variableMap[v.variable_key] = v.variable_data
        }
      })
      
      // Generate meta tags from template (basic implementation)
      const generatedMeta = {
        page_type: pageType,
        page_identifier: pageIdentifier,
        language_code: language,
        meta_title: template.title_template || `GARANTOR360 - ${pageType}`,
        meta_description: template.description_template || 'Professional services by GARANTOR360',
        og_title: template.og_title_template || template.title_template,
        og_description: template.og_description_template || template.description_template,
        twitter_title: template.twitter_title_template || template.title_template,
        twitter_description: template.twitter_description_template || template.description_template,
        canonical_url: `https://garantor360.pages.dev/${pageType}`,
        robots_meta: 'index,follow',
        priority_score: 50,
        auto_generate: true
      }
      
      return c.json({
        success: true,
        metaTags: generatedMeta,
        cached: false,
        generated: true
      })
    }
    
    // Fallback default meta tags
    const defaultMeta = {
      page_type: pageType,
      page_identifier: pageIdentifier,
      language_code: language,
      meta_title: 'GARANTOR360 - Professional Home Services',
      meta_description: 'Professional TV repair, appliance service, and home electronics solutions.',
      og_title: 'GARANTOR360 - Home Services',
      og_description: 'Professional home services and electronics repair.',
      og_image: '/static/images/garantor360-og-image.jpg',
      og_url: `https://garantor360.pages.dev/${pageType}`,
      twitter_card: 'summary_large_image',
      twitter_title: 'GARANTOR360 - Home Services',
      twitter_description: 'Professional home services and electronics repair.',
      twitter_image: '/static/images/garantor360-twitter-card.jpg',
      canonical_url: `https://garantor360.pages.dev/${pageType}`,
      robots_meta: 'index,follow'
    }
    
    return c.json({
      success: true,
      metaTags: defaultMeta,
      cached: false,
      fallback: true
    })
    
  } catch (error) {
    console.error('Meta tags fetch error:', error)
    return c.json({ error: 'Failed to fetch meta tags' }, 500)
  }
})

// Create or update meta tags for a page
app.post('/api/admin/meta-tags', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const {
      pageType,
      pageIdentifier = 'main',
      languageCode = 'tr',
      metaTitle,
      metaDescription,
      metaKeywords,
      canonicalUrl,
      ogTitle,
      ogDescription,
      ogImage,
      ogUrl,
      ogType = 'website',
      twitterTitle,
      twitterDescription,
      twitterImage,
      twitterCard = 'summary_large_image',
      robotsMeta = 'index,follow',
      businessHours,
      serviceArea,
      priceRange,
      contactPhone,
      priorityScore = 50,
      isActive = true,
      notes
    } = await c.req.json()
    
    if (!pageType) {
      return c.json({ error: 'Page type is required' }, 400)
    }
    
    // Insert or update meta tags
    const result = await DB.prepare(`
      INSERT OR REPLACE INTO dynamic_meta_tags (
        page_type, page_identifier, language_code,
        meta_title, meta_description, meta_keywords, canonical_url,
        og_title, og_description, og_image, og_url, og_type,
        twitter_title, twitter_description, twitter_image, twitter_card,
        robots_meta, business_hours, service_area, price_range, contact_phone,
        priority_score, is_active, notes, updated_at, updated_by
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, 'admin')
    `).bind(
      pageType, pageIdentifier, languageCode,
      metaTitle, metaDescription, metaKeywords, canonicalUrl,
      ogTitle, ogDescription, ogImage, ogUrl, ogType,
      twitterTitle, twitterDescription, twitterImage, twitterCard,
      robotsMeta, businessHours, serviceArea, priceRange, contactPhone,
      priorityScore, isActive ? 1 : 0, notes
    ).run()
    
    SystemLogger.info('SEO', 'Meta tags updated', {
      pageType,
      pageIdentifier,
      metaTagId: result.meta.last_row_id
    })
    
    return c.json({
      success: true,
      metaTagId: result.meta.last_row_id,
      message: 'Meta tags updated successfully'
    })
    
  } catch (error) {
    console.error('Meta tags update error:', error)
    return c.json({ error: 'Failed to update meta tags' }, 500)
  }
})

// Get all meta tags for admin management
app.get('/api/admin/meta-tags', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  const { page = '1', limit = '20', pageType = '', active = '' } = c.req.query()
  
  try {
    let whereClause = '1=1'
    const bindings = []
    
    if (pageType) {
      whereClause += ' AND page_type = ?'
      bindings.push(pageType)
    }
    
    if (active !== '') {
      whereClause += ' AND is_active = ?'
      bindings.push(active === 'true' ? 1 : 0)
    }
    
    const offset = (parseInt(page) - 1) * parseInt(limit)
    bindings.push(parseInt(limit), offset)
    
    const { results: metaTags } = await DB.prepare(`
      SELECT * FROM dynamic_meta_tags 
      WHERE ${whereClause}
      ORDER BY priority_score DESC, updated_at DESC
      LIMIT ? OFFSET ?
    `).bind(...bindings).all()
    
    const totalCount = await DB.prepare(`
      SELECT COUNT(*) as count FROM dynamic_meta_tags WHERE ${whereClause}
    `).bind(...bindings.slice(0, -2)).first()
    
    return c.json({
      success: true,
      metaTags,
      pagination: {
        page: parseInt(page),
        limit: parseInt(limit),
        total: totalCount?.count || 0,
        totalPages: Math.ceil((totalCount?.count || 0) / parseInt(limit))
      }
    })
    
  } catch (error) {
    console.error('Meta tags list error:', error)
    return c.json({ error: 'Failed to fetch meta tags list' }, 500)
  }
})

// Delete meta tags
app.delete('/api/admin/meta-tags/:id', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  const metaTagId = c.req.param('id')
  
  try {
    const result = await DB.prepare(`
      DELETE FROM dynamic_meta_tags WHERE id = ?
    `).bind(metaTagId).run()
    
    if (result.meta.changes === 0) {
      return c.json({ error: 'Meta tag not found' }, 404)
    }
    
    SystemLogger.info('SEO', 'Meta tags deleted', { metaTagId })
    
    return c.json({
      success: true,
      message: 'Meta tags deleted successfully'
    })
    
  } catch (error) {
    console.error('Meta tags delete error:', error)
    return c.json({ error: 'Failed to delete meta tags' }, 500)
  }
})

// SEO Performance tracking
app.post('/api/seo/track-performance', async (c) => {
  const { DB } = c.env
  
  try {
    const {
      pageUrl,
      pageType,
      pageIdentifier = 'main',
      performanceData = {}
    } = await c.req.json()
    
    if (!pageUrl) {
      return c.json({ error: 'Page URL is required' }, 400)
    }
    
    // Find corresponding meta tag
    const metaTag = await DB.prepare(`
      SELECT id FROM dynamic_meta_tags 
      WHERE page_type = ? AND page_identifier = ? AND is_active = 1
      LIMIT 1
    `).bind(pageType, pageIdentifier).first()
    
    if (!metaTag) {
      return c.json({ error: 'Meta tag configuration not found' }, 404)
    }
    
    // Update or insert performance data
    const today = new Date().toISOString().split('T')[0]
    
    await DB.prepare(`
      INSERT OR REPLACE INTO seo_performance (
        meta_tag_id, page_url, page_views, unique_visitors, bounce_rate,
        avg_session_duration, conversion_rate, date_recorded, created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)
    `).bind(
      metaTag.id,
      pageUrl,
      performanceData.pageViews || 0,
      performanceData.uniqueVisitors || 0,
      performanceData.bounceRate || 0,
      performanceData.avgSessionDuration || 0,
      performanceData.conversionRate || 0,
      today
    ).run()
    
    return c.json({
      success: true,
      message: 'SEO performance data tracked'
    })
    
  } catch (error) {
    console.error('SEO performance tracking error:', error)
    return c.json({ error: 'Failed to track SEO performance' }, 500)
  }
})

// Get SEO performance analytics
app.get('/api/admin/seo/analytics', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  const { days = '30', pageType = '' } = c.req.query()
  
  try {
    let whereClause = `sp.date_recorded >= date('now', '-${parseInt(days)} days')`
    const bindings = []
    
    if (pageType) {
      whereClause += ' AND dmt.page_type = ?'
      bindings.push(pageType)
    }
    
    // Get performance trends
    const { results: performanceTrends } = await DB.prepare(`
      SELECT 
        sp.date_recorded,
        dmt.page_type,
        dmt.page_identifier,
        SUM(sp.page_views) as total_views,
        AVG(sp.bounce_rate) as avg_bounce_rate,
        AVG(sp.conversion_rate) as avg_conversion_rate,
        SUM(sp.search_clicks) as total_clicks,
        AVG(sp.average_position) as avg_position
      FROM seo_performance sp
      JOIN dynamic_meta_tags dmt ON sp.meta_tag_id = dmt.id
      WHERE ${whereClause}
      GROUP BY sp.date_recorded, dmt.page_type, dmt.page_identifier
      ORDER BY sp.date_recorded DESC
    `).bind(...bindings).all()
    
    // Get top performing pages
    const { results: topPages } = await DB.prepare(`
      SELECT 
        dmt.page_type,
        dmt.page_identifier,
        dmt.meta_title,
        SUM(sp.page_views) as total_views,
        AVG(sp.conversion_rate) as avg_conversion,
        SUM(sp.search_clicks) as total_clicks
      FROM seo_performance sp
      JOIN dynamic_meta_tags dmt ON sp.meta_tag_id = dmt.id
      WHERE ${whereClause}
      GROUP BY dmt.id
      ORDER BY total_views DESC
      LIMIT 10
    `).bind(...bindings).all()
    
    return c.json({
      success: true,
      analytics: {
        performanceTrends,
        topPages,
        period: `${days} days`
      }
    })
    
  } catch (error) {
    console.error('SEO analytics error:', error)
    return c.json({ error: 'Failed to fetch SEO analytics' }, 500)
  }
})

// Meta tag templates management
app.get('/api/admin/meta-templates', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { results: templates } = await DB.prepare(`
      SELECT * FROM meta_tag_templates 
      WHERE is_active = 1 
      ORDER BY page_type, template_name
    `).all()
    
    return c.json({
      success: true,
      templates
    })
    
  } catch (error) {
    console.error('Meta templates fetch error:', error)
    return c.json({ error: 'Failed to fetch meta templates' }, 500)
  }
})

// Update SEO configuration
app.post('/api/admin/seo/config', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { configs } = await c.req.json()
    
    if (!configs || !Array.isArray(configs)) {
      return c.json({ error: 'Configs array is required' }, 400)
    }
    
    // Update multiple configurations
    for (const config of configs) {
      await DB.prepare(`
        INSERT OR REPLACE INTO seo_config (
          config_key, config_value, config_type, config_category, description, updated_at
        ) VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)
      `).bind(
        config.key,
        config.value,
        config.type || 'string',
        config.category || 'general',
        config.description || ''
      ).run()
    }
    
    return c.json({
      success: true,
      message: 'SEO configuration updated successfully'
    })
    
  } catch (error) {
    console.error('SEO config update error:', error)
    return c.json({ error: 'Failed to update SEO configuration' }, 500)
  }
})

// Get SEO configuration
app.get('/api/admin/seo/config', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { results: configs } = await DB.prepare(`
      SELECT * FROM seo_config WHERE is_active = 1 ORDER BY config_category, config_key
    `).all()
    
    const configsByCategory = {}
    configs.forEach(config => {
      if (!configsByCategory[config.config_category]) {
        configsByCategory[config.config_category] = {}
      }
      
      let value = config.config_value
      try {
        if (config.config_type === 'boolean') {
          value = config.config_value === 'true'
        } else if (config.config_type === 'number') {
          value = parseFloat(config.config_value)
        } else if (config.config_type === 'json') {
          value = JSON.parse(config.config_value)
        }
      } catch (e) {
        // Keep original value if parsing fails
      }
      
      configsByCategory[config.config_category][config.config_key] = {
        value,
        type: config.config_type,
        description: config.description
      }
    })
    
    return c.json({
      success: true,
      config: configsByCategory
    })
    
  } catch (error) {
    console.error('SEO config fetch error:', error)
    return c.json({ error: 'Failed to fetch SEO configuration' }, 500)
  }
})

// =============================================================================
// Dynamic Meta Tags System API
// =============================================================================

// Get meta tags for specific page type
app.get('/api/meta-tags/:pageType', async (c) => {
  const { DB } = c.env
  const pageType = c.req.param('pageType')
  
  try {
    // Get meta tags for the page type
    const { results: metaTags } = await DB.prepare(`
      SELECT * FROM dynamic_meta_tags 
      WHERE page_type = ? AND is_active = 1 
      ORDER BY created_at DESC 
      LIMIT 1
    `).bind(pageType).all()
    
    if (metaTags.length === 0) {
      // Return default meta tags if none found
      const defaultMetaTags = {
        title: 'GARANTOR360 - Türkiye\'nin En Güvenilir Teknik Servis Platformu',
        description: 'Televizyon, bilgisayar, beyaz eşya tamiri ve daha fazlası. Garantili servis, uzman teknisyenler, 7/24 destek.',
        keywords: 'teknik servis, televizyon tamiri, bilgisayar tamiri, beyaz eşya tamiri'
      }
      
      return c.json({
        success: true,
        metaTags: defaultMetaTags,
        isDefault: true
      })
    }
    
    const metaTag = metaTags[0]
    
    // Parse custom tags JSON if exists
    let customTags = []
    if (metaTag.custom_tags) {
      try {
        customTags = JSON.parse(metaTag.custom_tags)
      } catch (e) {
        console.warn('Failed to parse custom tags JSON:', e)
      }
    }
    
    // Parse schema.org JSON if exists
    let schemaOrg = null
    if (metaTag.schema_org) {
      try {
        schemaOrg = JSON.parse(metaTag.schema_org)
      } catch (e) {
        console.warn('Failed to parse schema.org JSON:', e)
      }
    }
    
    const responseMetaTags = {
      title: metaTag.title,
      description: metaTag.description,
      keywords: metaTag.keywords,
      og_title: metaTag.og_title,
      og_description: metaTag.og_description,
      og_image: metaTag.og_image,
      og_type: metaTag.og_type,
      twitter_title: metaTag.twitter_title,
      twitter_description: metaTag.twitter_description,
      twitter_image: metaTag.twitter_image,
      twitter_card: metaTag.twitter_card,
      custom_tags: customTags,
      schema_org: schemaOrg
    }
    
    return c.json({
      success: true,
      metaTags: responseMetaTags,
      pageType: pageType,
      isDefault: false
    })
    
  } catch (error) {
    console.error('Meta tags fetch error:', error)
    return c.json({ error: 'Failed to fetch meta tags' }, 500)
  }
})

// Admin: Create/Update meta tags
app.post('/api/admin/meta-tags', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const {
      page_type,
      title,
      description,
      keywords,
      og_title,
      og_description,
      og_image,
      og_type,
      twitter_title,
      twitter_description,
      twitter_image,
      twitter_card,
      custom_tags,
      schema_org
    } = await c.req.json()
    
    if (!page_type || !title || !description) {
      return c.json({ error: 'Page type, title ve description gerekli' }, 400)
    }
    
    // Check if meta tags already exist for this page type
    const { results: existing } = await DB.prepare(`
      SELECT id FROM dynamic_meta_tags WHERE page_type = ?
    `).bind(page_type).all()
    
    let result
    if (existing.length > 0) {
      // Update existing meta tags
      result = await DB.prepare(`
        UPDATE dynamic_meta_tags 
        SET 
          title = ?,
          description = ?,
          keywords = ?,
          og_title = ?,
          og_description = ?,
          og_image = ?,
          og_type = ?,
          twitter_title = ?,
          twitter_description = ?,
          twitter_image = ?,
          twitter_card = ?,
          custom_tags = ?,
          schema_org = ?,
          updated_at = ?
        WHERE page_type = ?
      `).bind(
        title,
        description,
        keywords || '',
        og_title || title,
        og_description || description,
        og_image || '',
        og_type || 'website',
        twitter_title || title,
        twitter_description || description,
        twitter_image || '',
        twitter_card || 'summary_large_image',
        custom_tags ? JSON.stringify(custom_tags) : null,
        schema_org ? JSON.stringify(schema_org) : null,
        new Date().toISOString(),
        page_type
      ).run()
      
      SystemLogger.info('META_TAGS', 'Meta tags updated', { page_type, title })
    } else {
      // Create new meta tags
      result = await DB.prepare(`
        INSERT INTO dynamic_meta_tags (
          page_type, title, description, keywords,
          og_title, og_description, og_image, og_type,
          twitter_title, twitter_description, twitter_image, twitter_card,
          custom_tags, schema_org, is_active, created_at, updated_at
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 1, ?, ?)
      `).bind(
        page_type,
        title,
        description,
        keywords || '',
        og_title || title,
        og_description || description,
        og_image || '',
        og_type || 'website',
        twitter_title || title,
        twitter_description || description,
        twitter_image || '',
        twitter_card || 'summary_large_image',
        custom_tags ? JSON.stringify(custom_tags) : null,
        schema_org ? JSON.stringify(schema_org) : null,
        new Date().toISOString(),
        new Date().toISOString()
      ).run()
      
      SystemLogger.info('META_TAGS', 'Meta tags created', { page_type, title })
    }
    
    return c.json({
      success: true,
      message: existing.length > 0 ? 'Meta tags updated successfully' : 'Meta tags created successfully',
      id: existing.length > 0 ? existing[0].id : result.meta.last_row_id
    })
    
  } catch (error) {
    console.error('Meta tags save error:', error)
    return c.json({ error: 'Failed to save meta tags' }, 500)
  }
})

// Admin: Get all meta tags
app.get('/api/admin/meta-tags', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { results: metaTags } = await DB.prepare(`
      SELECT 
        id, page_type, title, description, keywords,
        og_title, og_description, og_image, og_type,
        twitter_title, twitter_description, twitter_image, twitter_card,
        custom_tags, schema_org, is_active, created_at, updated_at
      FROM dynamic_meta_tags 
      ORDER BY page_type ASC
    `).all()
    
    // Parse JSON fields for each meta tag
    const processedMetaTags = metaTags.map(tag => ({
      ...tag,
      custom_tags: tag.custom_tags ? JSON.parse(tag.custom_tags) : [],
      schema_org: tag.schema_org ? JSON.parse(tag.schema_org) : null
    }))
    
    return c.json({
      success: true,
      metaTags: processedMetaTags,
      total: metaTags.length
    })
    
  } catch (error) {
    console.error('Meta tags list error:', error)
    return c.json({ error: 'Failed to fetch meta tags' }, 500)
  }
})

// Admin: Delete meta tags
app.delete('/api/admin/meta-tags/:pageType', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  const pageType = c.req.param('pageType')
  
  try {
    const result = await DB.prepare(`
      DELETE FROM dynamic_meta_tags WHERE page_type = ?
    `).bind(pageType).run()
    
    if (result.changes === 0) {
      return c.json({ error: 'Meta tags not found' }, 404)
    }
    
    SystemLogger.info('META_TAGS', 'Meta tags deleted', { pageType })
    
    return c.json({
      success: true,
      message: 'Meta tags deleted successfully'
    })
    
  } catch (error) {
    console.error('Meta tags delete error:', error)
    return c.json({ error: 'Failed to delete meta tags' }, 500)
  }
})

// Track SEO performance
app.post('/api/seo/track-performance', async (c) => {
  const { DB } = c.env
  
  try {
    const {
      page_type,
      page_url,
      page_title,
      user_agent,
      viewport_width,
      viewport_height,
      referrer,
      load_time,
      dom_ready_time,
      metric_type,
      value,
      engagement_time,
      scroll_depth,
      interactions
    } = await c.req.json()
    
    if (!page_type || !page_url) {
      return c.json({ error: 'Page type and URL required' }, 400)
    }
    
    const result = await DB.prepare(`
      INSERT INTO seo_performance (
        page_type, page_url, page_title, user_agent,
        viewport_width, viewport_height, referrer,
        load_time, dom_ready_time, metric_type, metric_value,
        engagement_time, scroll_depth, interactions,
        ip_address, created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      page_type,
      page_url,
      page_title || '',
      user_agent || '',
      viewport_width || 0,
      viewport_height || 0,
      referrer || '',
      load_time || 0,
      dom_ready_time || 0,
      metric_type || 'page_load',
      value || 0,
      engagement_time || 0,
      scroll_depth || 0,
      interactions || 0,
      c.req.header('CF-Connecting-IP') || 'Unknown',
      new Date().toISOString()
    ).run()
    
    return c.json({
      success: true,
      performanceId: result.meta.last_row_id,
      message: 'Performance tracked successfully'
    })
    
  } catch (error) {
    console.error('SEO performance tracking error:', error)
    return c.json({ error: 'Failed to track performance' }, 500)
  }
})

// Admin: SEO Analytics Dashboard
app.get('/api/admin/seo/analytics', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    // Page performance summary
    const { results: performanceSummary } = await DB.prepare(`
      SELECT 
        page_type,
        COUNT(*) as page_views,
        AVG(load_time) as avg_load_time,
        AVG(dom_ready_time) as avg_dom_ready_time,
        AVG(engagement_time) as avg_engagement_time,
        AVG(scroll_depth) as avg_scroll_depth,
        COUNT(DISTINCT ip_address) as unique_visitors
      FROM seo_performance 
      WHERE created_at >= datetime('now', '-7 days')
        AND load_time > 0
      GROUP BY page_type
      ORDER BY page_views DESC
    `).all()
    
    // Core Web Vitals
    const { results: coreWebVitals } = await DB.prepare(`
      SELECT 
        metric_type,
        AVG(metric_value) as avg_value,
        MIN(metric_value) as min_value,
        MAX(metric_value) as max_value,
        COUNT(*) as measurement_count
      FROM seo_performance 
      WHERE metric_type IN ('lcp', 'fid', 'cls')
        AND created_at >= datetime('now', '-7 days')
      GROUP BY metric_type
    `).all()
    
    // SEO engagement metrics
    const { results: engagementMetrics } = await DB.prepare(`
      SELECT 
        page_type,
        AVG(engagement_time) as avg_engagement,
        AVG(scroll_depth) as avg_scroll,
        AVG(interactions) as avg_interactions,
        COUNT(CASE WHEN engagement_time > 30000 THEN 1 END) as engaged_sessions,
        COUNT(*) as total_sessions
      FROM seo_performance 
      WHERE created_at >= datetime('now', '-7 days')
        AND engagement_time > 0
      GROUP BY page_type
    `).all()
    
    // Meta tags usage analytics
    const { results: metaTagsUsage } = await DB.prepare(`
      SELECT 
        page_type,
        title,
        description,
        keywords,
        is_active,
        created_at,
        updated_at
      FROM dynamic_meta_tags
      ORDER BY page_type ASC
    `).all()
    
    // Search engine referrals
    const { results: searchReferrals } = await DB.prepare(`
      SELECT 
        CASE 
          WHEN referrer LIKE '%google%' THEN 'Google'
          WHEN referrer LIKE '%bing%' THEN 'Bing'
          WHEN referrer LIKE '%yahoo%' THEN 'Yahoo'
          WHEN referrer LIKE '%yandex%' THEN 'Yandex'
          WHEN referrer = '' THEN 'Direct'
          ELSE 'Other'
        END as referrer_source,
        COUNT(*) as referral_count,
        COUNT(DISTINCT page_url) as pages_visited,
        AVG(engagement_time) as avg_engagement
      FROM seo_performance 
      WHERE created_at >= datetime('now', '-7 days')
      GROUP BY referrer_source
      ORDER BY referral_count DESC
    `).all()
    
    // Performance trends over time
    const { results: performanceTrends } = await DB.prepare(`
      SELECT 
        DATE(created_at) as performance_date,
        COUNT(*) as daily_views,
        AVG(load_time) as avg_load_time,
        AVG(engagement_time) as avg_engagement_time,
        COUNT(DISTINCT ip_address) as unique_visitors
      FROM seo_performance 
      WHERE created_at >= datetime('now', '-30 days')
        AND load_time > 0
      GROUP BY DATE(created_at)
      ORDER BY performance_date DESC
    `).all()
    
    return c.json({
      success: true,
      data: {
        performanceSummary,
        coreWebVitals,
        engagementMetrics,
        metaTagsUsage,
        searchReferrals,
        performanceTrends,
        totalPageViews: performanceSummary.reduce((sum, page) => sum + page.page_views, 0),
        totalUniqueVisitors: performanceSummary.reduce((sum, page) => sum + page.unique_visitors, 0)
      }
    })
    
  } catch (error) {
    console.error('SEO analytics fetch error:', error)
    return c.json({ error: 'Failed to fetch SEO analytics' }, 500)
  }
})

// Admin: Meta Tag Management Interface
app.get('/admin/meta-tag-management', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const trackingConfig = await getTrackingConfig(DB)
    
    return c.html(`
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Meta Tag Yönetimi - GARANTOR360 Admin</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        .fade-in { animation: fadeIn 0.3s ease-in; }
        @keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }
        .status-indicator { width: 8px; height: 8px; border-radius: 50%; display: inline-block; margin-right: 8px; }
        .status-active { background-color: #10b981; }
        .status-inactive { background-color: #ef4444; }
        .preview-card { transition: all 0.3s ease; }
        .preview-card:hover { transform: translateY(-2px); box-shadow: 0 8px 25px rgba(0,0,0,0.15); }
    </style>
</head>
<body class="bg-gray-50 text-gray-900">

    <!-- Navigation -->
    <nav class="bg-white shadow-sm border-b border-gray-200 mb-6">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <div class="flex items-center space-x-4">
                    <h1 class="text-2xl font-bold text-blue-600">
                        <i class="fas fa-tags mr-2"></i>
                        Meta Tag Yönetimi
                    </h1>
                </div>
                <div class="flex items-center space-x-4">
                    <button onclick="showCreateModal()" 
                            class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                        <i class="fas fa-plus mr-2"></i>
                        Yeni Meta Tag
                    </button>
                    <a href="/admin/dashboard" 
                       class="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors">
                        <i class="fas fa-arrow-left mr-2"></i>
                        Admin Panel
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        
        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-200">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Toplam Meta Tag</p>
                        <p class="text-2xl font-bold text-gray-900" id="totalMetaTags">-</p>
                    </div>
                    <div class="bg-blue-100 p-3 rounded-lg">
                        <i class="fas fa-tags text-blue-600 text-xl"></i>
                    </div>
                </div>
            </div>
            
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-200">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Aktif Sayfalar</p>
                        <p class="text-2xl font-bold text-green-600" id="activePages">-</p>
                    </div>
                    <div class="bg-green-100 p-3 rounded-lg">
                        <i class="fas fa-check-circle text-green-600 text-xl"></i>
                    </div>
                </div>
            </div>
            
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-200">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">SEO Skoru</p>
                        <p class="text-2xl font-bold text-yellow-600" id="seoScore">-</p>
                    </div>
                    <div class="bg-yellow-100 p-3 rounded-lg">
                        <i class="fas fa-search text-yellow-600 text-xl"></i>
                    </div>
                </div>
            </div>
            
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-200">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Performans</p>
                        <p class="text-2xl font-bold text-purple-600" id="performanceScore">-</p>
                    </div>
                    <div class="bg-purple-100 p-3 rounded-lg">
                        <i class="fas fa-chart-line text-purple-600 text-xl"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Meta Tags Table -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-200 mb-8">
            <div class="p-6 border-b border-gray-200">
                <h2 class="text-xl font-semibold text-gray-900">
                    <i class="fas fa-list mr-2 text-blue-600"></i>
                    Meta Tag Listesi
                </h2>
            </div>
            
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Sayfa Türü
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Başlık
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Açıklama
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Durum
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Son Güncelleme
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                İşlemler
                            </th>
                        </tr>
                    </thead>
                    <tbody id="metaTagsTableBody" class="bg-white divide-y divide-gray-200">
                        <!-- Meta tags will be loaded here -->
                    </tbody>
                </table>
            </div>
        </div>

        <!-- SEO Analytics Preview -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-200">
            <div class="p-6 border-b border-gray-200">
                <h2 class="text-xl font-semibold text-gray-900">
                    <i class="fas fa-chart-bar mr-2 text-green-600"></i>
                    SEO Performans Özeti
                </h2>
            </div>
            
            <div class="p-6">
                <div id="seoAnalyticsContainer">
                    <div class="text-center text-gray-500 py-8">
                        <i class="fas fa-spinner fa-spin text-2xl mb-4"></i>
                        <p>SEO analitik verileri yükleniyor...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Create/Edit Meta Tag Modal -->
    <div id="metaTagModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
        <div class="flex items-center justify-center min-h-screen px-4">
            <div class="bg-white rounded-xl shadow-xl max-w-4xl w-full max-h-screen overflow-y-auto">
                <div class="p-6 border-b border-gray-200">
                    <div class="flex justify-between items-center">
                        <h3 class="text-xl font-semibold text-gray-900" id="modalTitle">
                            <i class="fas fa-tag mr-2 text-blue-600"></i>
                            Yeni Meta Tag
                        </h3>
                        <button onclick="closeModal()" class="text-gray-400 hover:text-gray-600">
                            <i class="fas fa-times text-xl"></i>
                        </button>
                    </div>
                </div>
                
                <form id="metaTagForm" class="p-6 space-y-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Basic Meta Tags -->
                        <div class="space-y-4">
                            <h4 class="text-lg font-medium text-gray-900 border-b border-gray-200 pb-2">
                                Temel Meta Taglar
                            </h4>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Sayfa Türü *</label>
                                <select id="pageType" name="page_type" required 
                                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                    <option value="">Sayfa türü seçin</option>
                                    <option value="home">Ana Sayfa</option>
                                    <option value="televizyon_tamiri">Televizyon Tamiri</option>
                                    <option value="bilgisayar_tamiri">Bilgisayar Tamiri</option>
                                    <option value="beyaz_esya_tamiri">Beyaz Eşya Tamiri</option>
                                    <option value="klima_tamiri">Klima Tamiri</option>
                                    <option value="elektronik_tamiri">Elektronik Tamiri</option>
                                    <option value="ev_elektrigi">Ev Elektriği</option>
                                    <option value="su_tesisati">Su Tesisatı</option>
                                    <option value="about">Hakkımızda</option>
                                    <option value="contact">İletişim</option>
                                    <option value="admin">Admin</option>
                                </select>
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Başlık *</label>
                                <input type="text" id="title" name="title" required maxlength="60"
                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                       placeholder="SEO başlığı (60 karakter önerilir)">
                                <div class="text-sm text-gray-500 mt-1">
                                    <span id="titleLength">0</span>/60 karakter
                                </div>
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Açıklama *</label>
                                <textarea id="description" name="description" required maxlength="160" rows="3"
                                          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                          placeholder="Meta açıklama (160 karakter önerilir)"></textarea>
                                <div class="text-sm text-gray-500 mt-1">
                                    <span id="descriptionLength">0</span>/160 karakter
                                </div>
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Anahtar Kelimeler</label>
                                <input type="text" id="keywords" name="keywords"
                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                       placeholder="anahtar, kelime, listesi">
                            </div>
                        </div>

                        <!-- Open Graph Tags -->
                        <div class="space-y-4">
                            <h4 class="text-lg font-medium text-gray-900 border-b border-gray-200 pb-2">
                                Open Graph (Facebook)
                            </h4>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">OG Başlık</label>
                                <input type="text" id="ogTitle" name="og_title"
                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                       placeholder="Facebook paylaşım başlığı">
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">OG Açıklama</label>
                                <textarea id="ogDescription" name="og_description" rows="2"
                                          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                          placeholder="Facebook paylaşım açıklaması"></textarea>
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">OG Görsel URL</label>
                                <input type="url" id="ogImage" name="og_image"
                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                       placeholder="https://example.com/image.jpg">
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">OG Türü</label>
                                <select id="ogType" name="og_type"
                                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                    <option value="website">Website</option>
                                    <option value="article">Article</option>
                                    <option value="product">Product</option>
                                    <option value="profile">Profile</option>
                                </select>
                            </div>
                        </div>

                        <!-- Twitter Cards -->
                        <div class="space-y-4">
                            <h4 class="text-lg font-medium text-gray-900 border-b border-gray-200 pb-2">
                                Twitter Cards
                            </h4>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Twitter Başlık</label>
                                <input type="text" id="twitterTitle" name="twitter_title"
                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                       placeholder="Twitter paylaşım başlığı">
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Twitter Açıklama</label>
                                <textarea id="twitterDescription" name="twitter_description" rows="2"
                                          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                          placeholder="Twitter paylaşım açıklaması"></textarea>
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Twitter Görsel URL</label>
                                <input type="url" id="twitterImage" name="twitter_image"
                                       class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                       placeholder="https://example.com/image.jpg">
                            </div>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Twitter Card Türü</label>
                                <select id="twitterCard" name="twitter_card"
                                        class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                    <option value="summary">Summary</option>
                                    <option value="summary_large_image">Summary Large Image</option>
                                    <option value="app">App</option>
                                    <option value="player">Player</option>
                                </select>
                            </div>
                        </div>

                        <!-- Schema.org JSON-LD -->
                        <div class="space-y-4">
                            <h4 class="text-lg font-medium text-gray-900 border-b border-gray-200 pb-2">
                                Schema.org JSON-LD
                            </h4>
                            
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Schema JSON</label>
                                <textarea id="schemaOrg" name="schema_org" rows="6"
                                          class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 font-mono text-sm"
                                          placeholder='{"@context": "https://schema.org", "@type": "LocalBusiness", ...}'></textarea>
                                <div class="text-sm text-gray-500 mt-1">
                                    Geçerli JSON formatında schema.org yapılandırılmış verisi
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="flex justify-end space-x-4 pt-6 border-t border-gray-200">
                        <button type="button" onclick="closeModal()"
                                class="px-6 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50">
                            İptal
                        </button>
                        <button type="submit"
                                class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                            <i class="fas fa-save mr-2"></i>
                            Kaydet
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Preview Modal -->
    <div id="previewModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
        <div class="flex items-center justify-center min-h-screen px-4">
            <div class="bg-white rounded-xl shadow-xl max-w-2xl w-full max-h-screen overflow-y-auto">
                <div class="p-6 border-b border-gray-200">
                    <div class="flex justify-between items-center">
                        <h3 class="text-xl font-semibold text-gray-900">
                            <i class="fas fa-eye mr-2 text-green-600"></i>
                            Meta Tag Önizleme
                        </h3>
                        <button onclick="closePreviewModal()" class="text-gray-400 hover:text-gray-600">
                            <i class="fas fa-times text-xl"></i>
                        </button>
                    </div>
                </div>
                
                <div class="p-6">
                    <div id="previewContent">
                        <!-- Preview content will be loaded here -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"></script>
    <script>
        let allMetaTags = [];
        let editingMetaTag = null;

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadMetaTags();
            loadSEOAnalytics();
            setupFormValidation();
        });

        // Load all meta tags
        async function loadMetaTags() {
            try {
                const response = await axios.get('/api/admin/meta-tags');
                allMetaTags = response.data.metaTags;
                
                updateStats();
                renderMetaTagsTable();
                
                console.log('Meta tags loaded:', allMetaTags.length);
            } catch (error) {
                console.error('Failed to load meta tags:', error);
                showNotification('Meta tag listesi yüklenemedi', 'error');
            }
        }

        // Update stats cards
        function updateStats() {
            document.getElementById('totalMetaTags').textContent = allMetaTags.length;
            document.getElementById('activePages').textContent = allMetaTags.filter(tag => tag.is_active).length;
            
            // Calculate SEO score based on completeness
            let totalScore = 0;
            allMetaTags.forEach(tag => {
                let score = 0;
                if (tag.title) score += 20;
                if (tag.description) score += 20;
                if (tag.keywords) score += 10;
                if (tag.og_title) score += 15;
                if (tag.og_description) score += 15;
                if (tag.twitter_title) score += 10;
                if (tag.schema_org) score += 10;
                totalScore += score;
            });
            
            const avgScore = allMetaTags.length > 0 ? Math.round(totalScore / allMetaTags.length) : 0;
            document.getElementById('seoScore').textContent = avgScore + '%';
            document.getElementById('performanceScore').textContent = 'A+'; // Placeholder
        }

        // Render meta tags table
        function renderMetaTagsTable() {
            const tbody = document.getElementById('metaTagsTableBody');
            
            if (allMetaTags.length === 0) {
                tbody.innerHTML = \`
                    <tr>
                        <td colspan="6" class="px-6 py-12 text-center text-gray-500">
                            <i class="fas fa-tags text-4xl mb-4 opacity-50"></i>
                            <p class="text-lg mb-2">Henüz meta tag oluşturulmamış</p>
                            <p class="text-sm">İlk meta tag'inizi oluşturmak için "Yeni Meta Tag" butonuna tıklayın</p>
                        </td>
                    </tr>
                \`;
                return;
            }
            
            tbody.innerHTML = allMetaTags.map(tag => \`
                <tr class="hover:bg-gray-50">
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                            <span class="status-indicator \${tag.is_active ? 'status-active' : 'status-inactive'}"></span>
                            <span class="font-medium text-gray-900">\${getPageTypeLabel(tag.page_type)}</span>
                        </div>
                    </td>
                    <td class="px-6 py-4">
                        <div class="text-sm text-gray-900 font-medium max-w-xs truncate" title="\${tag.title}">
                            \${tag.title}
                        </div>
                        <div class="text-xs text-gray-500">
                            \${tag.title ? tag.title.length : 0} karakter
                        </div>
                    </td>
                    <td class="px-6 py-4">
                        <div class="text-sm text-gray-600 max-w-xs truncate" title="\${tag.description}">
                            \${tag.description}
                        </div>
                        <div class="text-xs text-gray-500">
                            \${tag.description ? tag.description.length : 0} karakter
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full \${tag.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}">
                            \${tag.is_active ? 'Aktif' : 'Pasif'}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        \${formatDate(tag.updated_at)}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                        <button onclick="previewMetaTag('\${tag.page_type}')" 
                                class="text-green-600 hover:text-green-900" title="Önizleme">
                            <i class="fas fa-eye"></i>
                        </button>
                        <button onclick="editMetaTag('\${tag.page_type}')" 
                                class="text-blue-600 hover:text-blue-900" title="Düzenle">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button onclick="deleteMetaTag('\${tag.page_type}')" 
                                class="text-red-600 hover:text-red-900" title="Sil">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
            \`).join('');
        }

        // Get page type label
        function getPageTypeLabel(pageType) {
            const labels = {
                'home': 'Ana Sayfa',
                'televizyon_tamiri': 'Televizyon Tamiri',
                'bilgisayar_tamiri': 'Bilgisayar Tamiri',
                'beyaz_esya_tamiri': 'Beyaz Eşya Tamiri',
                'klima_tamiri': 'Klima Tamiri',
                'elektronik_tamiri': 'Elektronik Tamiri',
                'ev_elektrigi': 'Ev Elektriği',
                'su_tesisati': 'Su Tesisatı',
                'about': 'Hakkımızda',
                'contact': 'İletişim',
                'admin': 'Admin'
            };
            return labels[pageType] || pageType;
        }

        // Format date
        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleString('tr-TR', {
                year: 'numeric',
                month: '2-digit',
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        // Show create modal
        function showCreateModal() {
            editingMetaTag = null;
            document.getElementById('modalTitle').innerHTML = '<i class="fas fa-tag mr-2 text-blue-600"></i>Yeni Meta Tag';
            document.getElementById('metaTagForm').reset();
            document.getElementById('metaTagModal').classList.remove('hidden');
        }

        // Edit meta tag
        function editMetaTag(pageType) {
            editingMetaTag = allMetaTags.find(tag => tag.page_type === pageType);
            if (!editingMetaTag) return;

            document.getElementById('modalTitle').innerHTML = '<i class="fas fa-edit mr-2 text-blue-600"></i>Meta Tag Düzenle';
            
            // Fill form with existing data
            document.getElementById('pageType').value = editingMetaTag.page_type;
            document.getElementById('title').value = editingMetaTag.title || '';
            document.getElementById('description').value = editingMetaTag.description || '';
            document.getElementById('keywords').value = editingMetaTag.keywords || '';
            document.getElementById('ogTitle').value = editingMetaTag.og_title || '';
            document.getElementById('ogDescription').value = editingMetaTag.og_description || '';
            document.getElementById('ogImage').value = editingMetaTag.og_image || '';
            document.getElementById('ogType').value = editingMetaTag.og_type || 'website';
            document.getElementById('twitterTitle').value = editingMetaTag.twitter_title || '';
            document.getElementById('twitterDescription').value = editingMetaTag.twitter_description || '';
            document.getElementById('twitterImage').value = editingMetaTag.twitter_image || '';
            document.getElementById('twitterCard').value = editingMetaTag.twitter_card || 'summary_large_image';
            document.getElementById('schemaOrg').value = editingMetaTag.schema_org ? JSON.stringify(editingMetaTag.schema_org, null, 2) : '';
            
            updateCharacterCounts();
            document.getElementById('metaTagModal').classList.remove('hidden');
        }

        // Preview meta tag
        function previewMetaTag(pageType) {
            const metaTag = allMetaTags.find(tag => tag.page_type === pageType);
            if (!metaTag) return;

            const previewContent = document.getElementById('previewContent');
            previewContent.innerHTML = \`
                <div class="space-y-6">
                    <!-- Google Search Preview -->
                    <div class="border border-gray-200 rounded-lg p-4">
                        <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
                            <i class="fab fa-google mr-2 text-blue-600"></i>
                            Google Arama Sonucu Önizleme
                        </h4>
                        <div class="bg-white p-4 rounded border-l-4 border-blue-500">
                            <div class="text-blue-600 text-lg hover:underline cursor-pointer">
                                \${metaTag.title}
                            </div>
                            <div class="text-green-700 text-sm mt-1">
                                https://garantor360.com/\${pageType}
                            </div>
                            <div class="text-gray-600 text-sm mt-2">
                                \${metaTag.description}
                            </div>
                        </div>
                    </div>

                    <!-- Facebook Preview -->
                    <div class="border border-gray-200 rounded-lg p-4">
                        <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
                            <i class="fab fa-facebook mr-2 text-blue-600"></i>
                            Facebook Paylaşım Önizleme
                        </h4>
                        <div class="bg-white border rounded-lg overflow-hidden">
                            \${metaTag.og_image ? \`<div class="bg-gray-200 h-32 flex items-center justify-center">
                                <img src="\${metaTag.og_image}" alt="OG Image" class="max-h-full" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                <div class="hidden text-gray-500"><i class="fas fa-image text-2xl"></i></div>
                            </div>\` : ''}
                            <div class="p-4">
                                <div class="font-semibold text-gray-900">\${metaTag.og_title || metaTag.title}</div>
                                <div class="text-gray-600 text-sm mt-1">\${metaTag.og_description || metaTag.description}</div>
                                <div class="text-gray-500 text-xs mt-2 uppercase">GARANTOR360.COM</div>
                            </div>
                        </div>
                    </div>

                    <!-- Twitter Preview -->
                    <div class="border border-gray-200 rounded-lg p-4">
                        <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
                            <i class="fab fa-twitter mr-2 text-blue-400"></i>
                            Twitter Card Önizleme
                        </h4>
                        <div class="bg-white border rounded-lg overflow-hidden">
                            \${metaTag.twitter_image ? \`<div class="bg-gray-200 h-32 flex items-center justify-center">
                                <img src="\${metaTag.twitter_image}" alt="Twitter Image" class="max-h-full" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                <div class="hidden text-gray-500"><i class="fas fa-image text-2xl"></i></div>
                            </div>\` : ''}
                            <div class="p-4">
                                <div class="font-semibold text-gray-900">\${metaTag.twitter_title || metaTag.title}</div>
                                <div class="text-gray-600 text-sm mt-1">\${metaTag.twitter_description || metaTag.description}</div>
                                <div class="text-gray-500 text-xs mt-2">garantor360.com</div>
                            </div>
                        </div>
                    </div>

                    <!-- Meta Tags Code -->
                    <div class="border border-gray-200 rounded-lg p-4">
                        <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
                            <i class="fas fa-code mr-2 text-gray-600"></i>
                            Oluşturulan Meta Tag Kodları
                        </h4>
                        <pre class="bg-gray-50 p-4 rounded-lg text-sm overflow-x-auto"><code>\${generateMetaTagsHTML(metaTag)}</code></pre>
                    </div>
                </div>
            \`;

            document.getElementById('previewModal').classList.remove('hidden');
        }

        // Generate meta tags HTML
        function generateMetaTagsHTML(metaTag) {
            let html = '';
            
            if (metaTag.title) html += \`<title>\${metaTag.title}</title>\\n\`;
            if (metaTag.description) html += \`<meta name="description" content="\${metaTag.description}">\\n\`;
            if (metaTag.keywords) html += \`<meta name="keywords" content="\${metaTag.keywords}">\\n\`;
            
            // Open Graph
            if (metaTag.og_title) html += \`<meta property="og:title" content="\${metaTag.og_title}">\\n\`;
            if (metaTag.og_description) html += \`<meta property="og:description" content="\${metaTag.og_description}">\\n\`;
            if (metaTag.og_image) html += \`<meta property="og:image" content="\${metaTag.og_image}">\\n\`;
            if (metaTag.og_type) html += \`<meta property="og:type" content="\${metaTag.og_type}">\\n\`;
            
            // Twitter
            if (metaTag.twitter_card) html += \`<meta name="twitter:card" content="\${metaTag.twitter_card}">\\n\`;
            if (metaTag.twitter_title) html += \`<meta name="twitter:title" content="\${metaTag.twitter_title}">\\n\`;
            if (metaTag.twitter_description) html += \`<meta name="twitter:description" content="\${metaTag.twitter_description}">\\n\`;
            if (metaTag.twitter_image) html += \`<meta name="twitter:image" content="\${metaTag.twitter_image}">\\n\`;
            
            // Schema.org
            if (metaTag.schema_org) {
                html += \`<script type="application/ld+json">\\n\${JSON.stringify(metaTag.schema_org, null, 2)}\\n</script>\\n\`;
            }
            
            return html || 'Meta tag bulunamadı';
        }

        // Delete meta tag
        async function deleteMetaTag(pageType) {
            if (!confirm('Bu meta tag\'i silmek istediğinizden emin misiniz?')) {
                return;
            }

            try {
                await axios.delete(\`/api/admin/meta-tags/\${pageType}\`);
                showNotification('Meta tag başarıyla silindi', 'success');
                loadMetaTags();
            } catch (error) {
                console.error('Delete error:', error);
                showNotification('Meta tag silinirken hata oluştu', 'error');
            }
        }

        // Close modal
        function closeModal() {
            document.getElementById('metaTagModal').classList.add('hidden');
        }

        // Close preview modal
        function closePreviewModal() {
            document.getElementById('previewModal').classList.add('hidden');
        }

        // Setup form validation
        function setupFormValidation() {
            const form = document.getElementById('metaTagForm');
            const titleInput = document.getElementById('title');
            const descriptionInput = document.getElementById('description');

            // Character count updates
            titleInput.addEventListener('input', updateCharacterCounts);
            descriptionInput.addEventListener('input', updateCharacterCounts);

            // Auto-fill OG and Twitter fields
            titleInput.addEventListener('input', function() {
                if (!document.getElementById('ogTitle').value) {
                    document.getElementById('ogTitle').value = this.value;
                }
                if (!document.getElementById('twitterTitle').value) {
                    document.getElementById('twitterTitle').value = this.value;
                }
            });

            descriptionInput.addEventListener('input', function() {
                if (!document.getElementById('ogDescription').value) {
                    document.getElementById('ogDescription').value = this.value;
                }
                if (!document.getElementById('twitterDescription').value) {
                    document.getElementById('twitterDescription').value = this.value;
                }
            });

            // Form submission
            form.addEventListener('submit', handleFormSubmit);
        }

        // Update character counts
        function updateCharacterCounts() {
            const titleLength = document.getElementById('title').value.length;
            const descriptionLength = document.getElementById('description').value.length;

            document.getElementById('titleLength').textContent = titleLength;
            document.getElementById('descriptionLength').textContent = descriptionLength;

            // Color coding for optimal lengths
            const titleCounter = document.getElementById('titleLength').parentElement;
            const descriptionCounter = document.getElementById('descriptionLength').parentElement;

            titleCounter.className = titleLength > 60 ? 'text-sm text-red-500 mt-1' : titleLength > 50 ? 'text-sm text-yellow-600 mt-1' : 'text-sm text-gray-500 mt-1';
            descriptionCounter.className = descriptionLength > 160 ? 'text-sm text-red-500 mt-1' : descriptionLength > 140 ? 'text-sm text-yellow-600 mt-1' : 'text-sm text-gray-500 mt-1';
        }

        // Handle form submission
        async function handleFormSubmit(e) {
            e.preventDefault();

            const formData = new FormData(e.target);
            const data = Object.fromEntries(formData.entries());

            // Parse schema.org JSON if provided
            if (data.schema_org) {
                try {
                    data.schema_org = JSON.parse(data.schema_org);
                } catch (error) {
                    showNotification('Schema.org JSON formatı geçersiz', 'error');
                    return;
                }
            }

            try {
                const response = await axios.post('/api/admin/meta-tags', data);
                showNotification('Meta tag başarıyla kaydedildi', 'success');
                closeModal();
                loadMetaTags();
            } catch (error) {
                console.error('Save error:', error);
                showNotification(error.response?.data?.error || 'Meta tag kaydedilirken hata oluştu', 'error');
            }
        }

        // Load SEO analytics
        async function loadSEOAnalytics() {
            try {
                const response = await axios.get('/api/admin/seo/analytics');
                renderSEOAnalytics(response.data.data);
            } catch (error) {
                console.error('Failed to load SEO analytics:', error);
                document.getElementById('seoAnalyticsContainer').innerHTML = \`
                    <div class="text-center text-red-500 py-8">
                        <i class="fas fa-exclamation-triangle text-2xl mb-4"></i>
                        <p>SEO analitik verileri yüklenemedi</p>
                    </div>
                \`;
            }
        }

        // Render SEO analytics
        function renderSEOAnalytics(data) {
            const container = document.getElementById('seoAnalyticsContainer');
            
            container.innerHTML = \`
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                        <h4 class="font-semibold text-blue-900 mb-2">Toplam Sayfa Görüntüleme</h4>
                        <p class="text-2xl font-bold text-blue-600">\${data.totalPageViews || 0}</p>
                        <p class="text-sm text-blue-700">Son 7 gün</p>
                    </div>
                    
                    <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                        <h4 class="font-semibold text-green-900 mb-2">Benzersiz Ziyaretçi</h4>
                        <p class="text-2xl font-bold text-green-600">\${data.totalUniqueVisitors || 0}</p>
                        <p class="text-sm text-green-700">Son 7 gün</p>
                    </div>
                    
                    <div class="bg-purple-50 border border-purple-200 rounded-lg p-4">
                        <h4 class="font-semibold text-purple-900 mb-2">Ortalama Yükleme Süresi</h4>
                        <p class="text-2xl font-bold text-purple-600">
                            \${data.performanceSummary.length > 0 ? 
                                Math.round(data.performanceSummary.reduce((sum, p) => sum + p.avg_load_time, 0) / data.performanceSummary.length) + 'ms' : 
                                'N/A'
                            }
                        </p>
                        <p class="text-sm text-purple-700">Son 7 gün</p>
                    </div>
                </div>
                
                <div class="mt-6">
                    <h4 class="font-semibold text-gray-900 mb-4">En Performanslı Sayfalar</h4>
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Sayfa</th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Görüntüleme</th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Ortalama Yükleme</th>
                                    <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase">Etkileşim</th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-200">
                                \${data.performanceSummary.slice(0, 5).map(page => \`
                                    <tr>
                                        <td class="px-4 py-3 text-sm font-medium text-gray-900">
                                            \${getPageTypeLabel(page.page_type)}
                                        </td>
                                        <td class="px-4 py-3 text-sm text-gray-600">\${page.page_views}</td>
                                        <td class="px-4 py-3 text-sm text-gray-600">\${Math.round(page.avg_load_time)}ms</td>
                                        <td class="px-4 py-3 text-sm text-gray-600">\${Math.round(page.avg_engagement_time / 1000)}s</td>
                                    </tr>
                                \`).join('')}
                            </tbody>
                        </table>
                    </div>
                </div>
            \`;
        }

        // Show notification
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = \`fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transition-all duration-300 transform translate-x-full \${
                type === 'success' ? 'bg-green-500 text-white' :
                type === 'error' ? 'bg-red-500 text-white' :
                type === 'warning' ? 'bg-yellow-500 text-white' :
                'bg-blue-500 text-white'
            }\`;
            
            notification.innerHTML = \`
                <div class="flex items-center space-x-2">
                    <i class="fas \${
                        type === 'success' ? 'fa-check-circle' :
                        type === 'error' ? 'fa-exclamation-circle' :
                        type === 'warning' ? 'fa-exclamation-triangle' :
                        'fa-info-circle'
                    }"></i>
                    <span>\${message}</span>
                </div>
            \`;
            
            document.body.appendChild(notification);
            
            // Slide in
            setTimeout(() => {
                notification.classList.remove('translate-x-full');
            }, 100);
            
            // Slide out and remove
            setTimeout(() => {
                notification.classList.add('translate-x-full');
                setTimeout(() => {
                    if (notification.parentNode) {
                        notification.parentNode.removeChild(notification);
                    }
                }, 300);
            }, 3000);
        }
    </script>
</body>
</html>
    `)
    
  } catch (error) {
    console.error('Meta tag management interface error:', error)
    return c.html(`
      <h1>Error</h1>
      <p>Meta tag yönetimi arayüzü yüklenemedi: ${error.message}</p>
    `)
  }
})

// =============================================================================
// Lead Scoring System API
// =============================================================================

// Lead Scoring Engine Class
class LeadScoringEngine {
  private db: D1Database

  constructor(db: D1Database) {
    this.db = db
  }

  // Generate or get lead UUID
  async generateLeadUUID(email?: string, phone?: string, ip?: string): Promise<string> {
    // Check if lead already exists
    if (email || phone) {
      const { results: existingLeads } = await this.db.prepare(`
        SELECT lead_uuid FROM lead_profiles 
        WHERE email = ? OR phone = ?
        LIMIT 1
      `).bind(email || '', phone || '').all()
      
      if (existingLeads.length > 0) {
        return existingLeads[0].lead_uuid as string
      }
    }
    
    // Generate new UUID
    return 'lead_' + Date.now() + '_' + Math.random().toString(36).substring(2, 15)
  }

  // Create or update lead profile
  async createOrUpdateLead(leadData: any): Promise<string> {
    const leadUUID = await this.generateLeadUUID(leadData.email, leadData.phone, leadData.ip)
    
    const { results: existing } = await this.db.prepare(`
      SELECT lead_uuid FROM lead_profiles WHERE lead_uuid = ?
    `).bind(leadUUID).all()
    
    if (existing.length > 0) {
      // Update existing lead
      await this.db.prepare(`
        UPDATE lead_profiles 
        SET 
          email = COALESCE(?, email),
          phone = COALESCE(?, phone),
          name = COALESCE(?, name),
          company = COALESCE(?, company),
          service_interest = COALESCE(?, service_interest),
          location = COALESCE(?, location),
          source = COALESCE(?, source),
          utm_source = COALESCE(?, utm_source),
          utm_medium = COALESCE(?, utm_medium),
          utm_campaign = COALESCE(?, utm_campaign),
          last_activity_timestamp = ?,
          total_sessions = total_sessions + 1,
          updated_at = ?
        WHERE lead_uuid = ?
      `).bind(
        leadData.email || null,
        leadData.phone || null,
        leadData.name || null,
        leadData.company || null,
        leadData.service_interest || null,
        leadData.location || null,
        leadData.source || null,
        leadData.utm_source || null,
        leadData.utm_medium || null,
        leadData.utm_campaign || null,
        new Date().toISOString(),
        new Date().toISOString(),
        leadUUID
      ).run()
    } else {
      // Create new lead
      await this.db.prepare(`
        INSERT INTO lead_profiles (
          lead_uuid, email, phone, name, company, service_interest, location,
          source, utm_source, utm_medium, utm_campaign, first_touch_url,
          first_touch_timestamp, last_activity_timestamp, created_at, updated_at
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
      `).bind(
        leadUUID,
        leadData.email || null,
        leadData.phone || null,
        leadData.name || null,
        leadData.company || null,
        leadData.service_interest || null,
        leadData.location || null,
        leadData.source || 'website',
        leadData.utm_source || null,
        leadData.utm_medium || null,
        leadData.utm_campaign || null,
        leadData.first_touch_url || null,
        new Date().toISOString(),
        new Date().toISOString(),
        new Date().toISOString(),
        new Date().toISOString()
      ).run()

      // Initialize lead score record
      await this.db.prepare(`
        INSERT INTO lead_scores (lead_uuid, last_calculated)
        VALUES (?, ?)
      `).bind(leadUUID, new Date().toISOString()).run()
    }
    
    return leadUUID
  }

  // Add scoring event and calculate new score
  async addScoringEvent(leadUUID: string, eventType: string, eventCategory: string, eventData?: any, pageUrl?: string): Promise<void> {
    // Get applicable scoring rules
    const { results: rules } = await this.db.prepare(`
      SELECT * FROM lead_scoring_rules 
      WHERE trigger_event = ? AND is_active = 1
    `).bind(eventType).all()

    for (const rule of rules) {
      // Check if rule conditions are met
      if (await this.evaluateRuleConditions(rule, eventData)) {
        // Check if rule can still be applied (max_applications)
        const { results: eventCount } = await this.db.prepare(`
          SELECT COUNT(*) as count FROM lead_scoring_events 
          WHERE lead_uuid = ? AND event_type = ? AND score_reason LIKE ?
        `).bind(leadUUID, eventType, `%${rule.rule_name}%`).all()

        if (eventCount[0].count < rule.max_applications) {
          // Add scoring event
          await this.db.prepare(`
            INSERT INTO lead_scoring_events (
              lead_uuid, event_type, event_category, score_change, score_reason,
              event_data, page_url, created_at
            ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
          `).bind(
            leadUUID,
            eventType,
            eventCategory,
            rule.score_value,
            `${rule.rule_name}: ${rule.description}`,
            JSON.stringify(eventData || {}),
            pageUrl || null,
            new Date().toISOString()
          ).run()

          // Update lead score
          await this.updateLeadScore(leadUUID, rule.rule_category, rule.score_value)
        }
      }
    }
  }

  // Evaluate rule conditions
  async evaluateRuleConditions(rule: any, eventData: any): Promise<boolean> {
    if (!rule.trigger_conditions) return true

    try {
      const conditions = JSON.parse(rule.trigger_conditions)
      
      // Simple condition evaluation - can be extended for complex logic
      for (const [key, expectedValue] of Object.entries(conditions)) {
        if (eventData && eventData[key] !== undefined) {
          if (Array.isArray(expectedValue)) {
            if (!expectedValue.includes(eventData[key])) return false
          } else if (typeof expectedValue === 'string' && expectedValue.startsWith('>')) {
            const threshold = parseFloat(expectedValue.substring(1))
            if (!(parseFloat(eventData[key]) > threshold)) return false
          } else if (typeof expectedValue === 'string' && expectedValue.startsWith('<')) {
            const threshold = parseFloat(expectedValue.substring(1))
            if (!(parseFloat(eventData[key]) < threshold)) return false
          } else if (eventData[key] !== expectedValue) {
            return false
          }
        }
      }
      
      return true
    } catch (e) {
      return true // If condition parsing fails, apply rule
    }
  }

  // Update lead score in specific category
  async updateLeadScore(leadUUID: string, category: string, scoreChange: number): Promise<void> {
    const column = `${category}_score`
    
    await this.db.prepare(`
      UPDATE lead_scores 
      SET 
        ${column} = ${column} + ?,
        total_score = demographic_score + behavioral_score + interest_score + intent_score,
        last_calculated = ?
      WHERE lead_uuid = ?
    `).bind(scoreChange, new Date().toISOString(), leadUUID).run()

    // Update score grade after calculation
    await this.updateScoreGrade(leadUUID)
  }

  // Update score grade based on total score
  async updateScoreGrade(leadUUID: string): Promise<void> {
    const { results: scores } = await this.db.prepare(`
      SELECT total_score FROM lead_scores WHERE lead_uuid = ?
    `).bind(leadUUID).all()

    if (scores.length > 0) {
      const totalScore = scores[0].total_score
      let grade = 'Cold'
      let isQualified = false

      if (totalScore >= 76) {
        grade = 'Qualified'
        isQualified = true
      } else if (totalScore >= 51) {
        grade = 'Hot'
      } else if (totalScore >= 26) {
        grade = 'Warm'
      }

      await this.db.prepare(`
        UPDATE lead_scores 
        SET 
          score_grade = ?,
          is_qualified = ?,
          qualification_timestamp = ?
        WHERE lead_uuid = ?
      `).bind(
        grade,
        isQualified ? 1 : 0,
        isQualified ? new Date().toISOString() : null,
        leadUUID
      ).run()
    }
  }

  // Get lead score details
  async getLeadScore(leadUUID: string): Promise<any> {
    const { results: profile } = await this.db.prepare(`
      SELECT lp.*, ls.* 
      FROM lead_profiles lp
      LEFT JOIN lead_scores ls ON lp.lead_uuid = ls.lead_uuid
      WHERE lp.lead_uuid = ?
    `).bind(leadUUID).all()

    if (profile.length > 0) {
      const { results: events } = await this.db.prepare(`
        SELECT * FROM lead_scoring_events 
        WHERE lead_uuid = ? 
        ORDER BY created_at DESC 
        LIMIT 20
      `).bind(leadUUID).all()

      return {
        profile: profile[0],
        recent_events: events
      }
    }

    return null
  }

  // Get qualified leads
  async getQualifiedLeads(limit: number = 50): Promise<any[]> {
    const { results } = await this.db.prepare(`
      SELECT lp.*, ls.*
      FROM lead_profiles lp
      INNER JOIN lead_scores ls ON lp.lead_uuid = ls.lead_uuid
      WHERE ls.is_qualified = 1
      ORDER BY ls.total_score DESC, lp.last_activity_timestamp DESC
      LIMIT ?
    `).bind(limit).all()

    return results
  }
}

// Track lead scoring event
app.post('/api/lead-scoring/track-event', async (c) => {
  const { DB } = c.env
  
  try {
    const {
      lead_identifier, // email, phone, or session_id
      event_type,
      event_category,
      event_data,
      page_url,
      lead_profile
    } = await c.req.json()

    if (!lead_identifier || !event_type) {
      return c.json({ error: 'Lead identifier and event type are required' }, 400)
    }

    const scoringEngine = new LeadScoringEngine(DB)
    
    // Create or update lead profile
    const leadUUID = await scoringEngine.createOrUpdateLead({
      email: lead_profile?.email || (lead_identifier.includes('@') ? lead_identifier : null),
      phone: lead_profile?.phone || (lead_identifier.startsWith('+') ? lead_identifier : null),
      name: lead_profile?.name,
      company: lead_profile?.company,
      service_interest: lead_profile?.service_interest || event_data?.service_category,
      location: lead_profile?.location || event_data?.location,
      source: lead_profile?.source || 'website',
      utm_source: lead_profile?.utm_source,
      utm_medium: lead_profile?.utm_medium,
      utm_campaign: lead_profile?.utm_campaign,
      first_touch_url: page_url,
      ip: c.req.header('CF-Connecting-IP')
    })

    // Add scoring event
    await scoringEngine.addScoringEvent(
      leadUUID, 
      event_type, 
      event_category || 'engagement',
      event_data,
      page_url
    )

    // Get updated score
    const scoreDetails = await scoringEngine.getLeadScore(leadUUID)

    SystemLogger.info('LEAD_SCORING', 'Event tracked', { 
      leadUUID, 
      event_type, 
      score: scoreDetails?.profile?.total_score 
    })

    return c.json({
      success: true,
      lead_uuid: leadUUID,
      current_score: scoreDetails?.profile?.total_score || 0,
      score_grade: scoreDetails?.profile?.score_grade || 'Cold',
      is_qualified: scoreDetails?.profile?.is_qualified || false,
      message: 'Lead scoring event tracked successfully'
    })

  } catch (error) {
    console.error('Lead scoring tracking error:', error)
    return c.json({ error: 'Failed to track lead scoring event' }, 500)
  }
})

// Get lead score details
app.get('/api/lead-scoring/lead/:identifier', async (c) => {
  const { DB } = c.env
  const identifier = c.req.param('identifier')
  
  try {
    const scoringEngine = new LeadScoringEngine(DB)
    
    // Try to find lead by email, phone, or UUID
    let leadUUID = identifier
    if (identifier.includes('@') || identifier.startsWith('+')) {
      const { results: leads } = await DB.prepare(`
        SELECT lead_uuid FROM lead_profiles 
        WHERE email = ? OR phone = ?
        LIMIT 1
      `).bind(identifier, identifier).all()
      
      if (leads.length === 0) {
        return c.json({ error: 'Lead not found' }, 404)
      }
      leadUUID = leads[0].lead_uuid
    }

    const scoreDetails = await scoringEngine.getLeadScore(leadUUID)
    
    if (!scoreDetails) {
      return c.json({ error: 'Lead not found' }, 404)
    }

    return c.json({
      success: true,
      lead: scoreDetails
    })

  } catch (error) {
    console.error('Lead score fetch error:', error)
    return c.json({ error: 'Failed to fetch lead score' }, 500)
  }
})

// Admin: Get qualified leads dashboard
app.get('/api/admin/lead-scoring/qualified-leads', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const scoringEngine = new LeadScoringEngine(DB)
    const qualifiedLeads = await scoringEngine.getQualifiedLeads(100)

    // Get scoring statistics
    const { results: stats } = await DB.prepare(`
      SELECT 
        COUNT(*) as total_leads,
        COUNT(CASE WHEN ls.is_qualified = 1 THEN 1 END) as qualified_leads,
        COUNT(CASE WHEN ls.score_grade = 'Hot' THEN 1 END) as hot_leads,
        COUNT(CASE WHEN ls.score_grade = 'Warm' THEN 1 END) as warm_leads,
        COUNT(CASE WHEN ls.score_grade = 'Cold' THEN 1 END) as cold_leads,
        AVG(ls.total_score) as avg_score
      FROM lead_profiles lp
      LEFT JOIN lead_scores ls ON lp.lead_uuid = ls.lead_uuid
      WHERE lp.created_at >= datetime('now', '-30 days')
    `).all()

    // Get recent activity
    const { results: recentActivity } = await DB.prepare(`
      SELECT 
        lse.*, lp.name, lp.email, lp.service_interest
      FROM lead_scoring_events lse
      INNER JOIN lead_profiles lp ON lse.lead_uuid = lp.lead_uuid
      WHERE lse.created_at >= datetime('now', '-7 days')
      ORDER BY lse.created_at DESC
      LIMIT 50
    `).all()

    return c.json({
      success: true,
      data: {
        qualified_leads: qualifiedLeads,
        statistics: stats[0] || {},
        recent_activity: recentActivity
      }
    })

  } catch (error) {
    console.error('Qualified leads fetch error:', error)
    return c.json({ error: 'Failed to fetch qualified leads' }, 500)
  }
})

// Admin: Lead scoring rules management
app.get('/api/admin/lead-scoring/rules', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { results: rules } = await DB.prepare(`
      SELECT * FROM lead_scoring_rules 
      ORDER BY rule_category, score_value DESC
    `).all()

    // Group rules by category
    const rulesByCategory = {
      demographic: [],
      behavioral: [],
      interest: [],
      intent: []
    }

    rules.forEach(rule => {
      if (rulesByCategory[rule.rule_category]) {
        rulesByCategory[rule.rule_category].push(rule)
      }
    })

    return c.json({
      success: true,
      rules: rulesByCategory,
      total_rules: rules.length
    })

  } catch (error) {
    console.error('Lead scoring rules fetch error:', error)
    return c.json({ error: 'Failed to fetch lead scoring rules' }, 500)
  }
})

// Admin: Update lead scoring rule
app.post('/api/admin/lead-scoring/rules/:id', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  const ruleId = c.req.param('id')
  
  try {
    const {
      rule_name,
      score_value,
      max_applications,
      is_active,
      description
    } = await c.req.json()

    await DB.prepare(`
      UPDATE lead_scoring_rules 
      SET 
        rule_name = COALESCE(?, rule_name),
        score_value = COALESCE(?, score_value),
        max_applications = COALESCE(?, max_applications),
        is_active = COALESCE(?, is_active),
        description = COALESCE(?, description),
        updated_at = ?
      WHERE id = ?
    `).bind(
      rule_name || null,
      score_value !== undefined ? score_value : null,
      max_applications !== undefined ? max_applications : null,
      is_active !== undefined ? (is_active ? 1 : 0) : null,
      description || null,
      new Date().toISOString(),
      ruleId
    ).run()

    SystemLogger.info('LEAD_SCORING', 'Rule updated', { ruleId, rule_name })

    return c.json({
      success: true,
      message: 'Lead scoring rule updated successfully'
    })

  } catch (error) {
    console.error('Lead scoring rule update error:', error)
    return c.json({ error: 'Failed to update lead scoring rule' }, 500)
  }
})

// Admin: Lead Scoring Dashboard Interface
app.get('/admin/lead-scoring-dashboard', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const trackingConfig = await getTrackingConfig(DB)
    
    return c.html(`
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lead Scoring Dashboard - GARANTOR360 Admin</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .fade-in { animation: fadeIn 0.3s ease-in; }
        @keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }
        .score-indicator { width: 10px; height: 10px; border-radius: 50%; display: inline-block; margin-right: 8px; }
        .score-cold { background-color: #6b7280; }
        .score-warm { background-color: #f59e0b; }
        .score-hot { background-color: #ef4444; }
        .score-qualified { background-color: #10b981; }
        .lead-card { transition: all 0.3s ease; }
        .lead-card:hover { transform: translateY(-2px); box-shadow: 0 8px 25px rgba(0,0,0,0.15); }
    </style>
</head>
<body class="bg-gray-50 text-gray-900">

    <!-- Navigation -->
    <nav class="bg-white shadow-sm border-b border-gray-200 mb-6">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <div class="flex items-center space-x-4">
                    <h1 class="text-2xl font-bold text-green-600">
                        <i class="fas fa-trophy mr-2"></i>
                        Lead Scoring Dashboard
                    </h1>
                </div>
                <div class="flex items-center space-x-4">
                    <button onclick="refreshData()" 
                            class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                        <i class="fas fa-sync mr-2"></i>
                        Yenile
                    </button>
                    <a href="/admin/dashboard" 
                       class="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors">
                        <i class="fas fa-arrow-left mr-2"></i>
                        Admin Panel
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        
        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-5 gap-6 mb-8">
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-200">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Toplam Lead</p>
                        <p class="text-2xl font-bold text-gray-900" id="totalLeads">-</p>
                    </div>
                    <div class="bg-blue-100 p-3 rounded-lg">
                        <i class="fas fa-users text-blue-600 text-xl"></i>
                    </div>
                </div>
            </div>
            
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-200">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Qualified Leads</p>
                        <p class="text-2xl font-bold text-green-600" id="qualifiedLeads">-</p>
                    </div>
                    <div class="bg-green-100 p-3 rounded-lg">
                        <i class="fas fa-trophy text-green-600 text-xl"></i>
                    </div>
                </div>
            </div>
            
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-200">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Hot Leads</p>
                        <p class="text-2xl font-bold text-red-600" id="hotLeads">-</p>
                    </div>
                    <div class="bg-red-100 p-3 rounded-lg">
                        <i class="fas fa-fire text-red-600 text-xl"></i>
                    </div>
                </div>
            </div>
            
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-200">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Warm Leads</p>
                        <p class="text-2xl font-bold text-yellow-600" id="warmLeads">-</p>
                    </div>
                    <div class="bg-yellow-100 p-3 rounded-lg">
                        <i class="fas fa-thermometer-half text-yellow-600 text-xl"></i>
                    </div>
                </div>
            </div>
            
            <div class="bg-white rounded-xl shadow-sm p-6 border border-gray-200">
                <div class="flex items-center justify-between">
                    <div>
                        <p class="text-sm font-medium text-gray-600">Ortalama Skor</p>
                        <p class="text-2xl font-bold text-purple-600" id="avgScore">-</p>
                    </div>
                    <div class="bg-purple-100 p-3 rounded-lg">
                        <i class="fas fa-chart-line text-purple-600 text-xl"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            
            <!-- Qualified Leads List -->
            <div class="lg:col-span-2 bg-white rounded-xl shadow-sm border border-gray-200">
                <div class="p-6 border-b border-gray-200">
                    <h2 class="text-xl font-semibold text-gray-900">
                        <i class="fas fa-trophy mr-2 text-green-600"></i>
                        Qualified Leads
                    </h2>
                </div>
                
                <div class="p-6">
                    <div id="qualifiedLeadsList">
                        <div class="text-center text-gray-500 py-8">
                            <i class="fas fa-spinner fa-spin text-2xl mb-4"></i>
                            <p>Qualified leads yükleniyor...</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Lead Score Distribution -->
            <div class="bg-white rounded-xl shadow-sm border border-gray-200">
                <div class="p-6 border-b border-gray-200">
                    <h2 class="text-xl font-semibold text-gray-900">
                        <i class="fas fa-chart-pie mr-2 text-blue-600"></i>
                        Skor Dağılımı
                    </h2>
                </div>
                
                <div class="p-6">
                    <canvas id="scoreDistributionChart" width="300" height="300"></canvas>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="mt-8 bg-white rounded-xl shadow-sm border border-gray-200">
            <div class="p-6 border-b border-gray-200">
                <h2 class="text-xl font-semibold text-gray-900">
                    <i class="fas fa-clock mr-2 text-blue-600"></i>
                    Son Aktiviteler
                </h2>
            </div>
            
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Lead
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Aktivite
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Skor Değişimi
                            </th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Zaman
                            </th>
                        </tr>
                    </thead>
                    <tbody id="recentActivityTableBody" class="bg-white divide-y divide-gray-200">
                        <!-- Activities will be loaded here -->
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Lead Scoring Rules -->
        <div class="mt-8 bg-white rounded-xl shadow-sm border border-gray-200">
            <div class="p-6 border-b border-gray-200">
                <div class="flex justify-between items-center">
                    <h2 class="text-xl font-semibold text-gray-900">
                        <i class="fas fa-cogs mr-2 text-gray-600"></i>
                        Scoring Kuralları
                    </h2>
                    <button onclick="showRulesModal()" 
                            class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                        <i class="fas fa-plus mr-2"></i>
                        Kural Ekle
                    </button>
                </div>
            </div>
            
            <div class="p-6">
                <div id="scoringRulesContainer">
                    <div class="text-center text-gray-500 py-8">
                        <i class="fas fa-spinner fa-spin text-2xl mb-4"></i>
                        <p>Scoring kuralları yükleniyor...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"></script>
    <script>
        let dashboardData = {};
        let scoreChart = null;

        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            loadDashboardData();
            setInterval(refreshData, 30000); // Refresh every 30 seconds
        });

        // Load all dashboard data
        async function loadDashboardData() {
            try {
                const response = await axios.get('/api/admin/lead-scoring/qualified-leads');
                dashboardData = response.data.data;
                
                updateStats();
                renderQualifiedLeads();
                renderScoreDistribution();
                renderRecentActivity();
                loadScoringRules();
                
                console.log('Dashboard data loaded successfully');
            } catch (error) {
                console.error('Failed to load dashboard data:', error);
                showNotification('Dashboard verileri yüklenemedi', 'error');
            }
        }

        // Update statistics cards
        function updateStats() {
            const stats = dashboardData.statistics || {};
            
            document.getElementById('totalLeads').textContent = stats.total_leads || 0;
            document.getElementById('qualifiedLeads').textContent = stats.qualified_leads || 0;
            document.getElementById('hotLeads').textContent = stats.hot_leads || 0;
            document.getElementById('warmLeads').textContent = stats.warm_leads || 0;
            document.getElementById('avgScore').textContent = Math.round(stats.avg_score || 0);
        }

        // Render qualified leads list
        function renderQualifiedLeads() {
            const container = document.getElementById('qualifiedLeadsList');
            const leads = dashboardData.qualified_leads || [];
            
            if (leads.length === 0) {
                container.innerHTML = \`
                    <div class="text-center text-gray-500 py-8">
                        <i class="fas fa-trophy text-4xl mb-4 opacity-50"></i>
                        <p class="text-lg mb-2">Henüz qualified lead yok</p>
                        <p class="text-sm">Lead scoring sistemi çalışmaya başladığında burada görünecekler</p>
                    </div>
                \`;
                return;
            }
            
            container.innerHTML = leads.map(lead => \`
                <div class="lead-card bg-gray-50 border border-gray-200 rounded-lg p-4 mb-4">
                    <div class="flex justify-between items-start">
                        <div class="flex-1">
                            <div class="flex items-center mb-2">
                                <span class="score-indicator score-\${lead.score_grade?.toLowerCase() || 'cold'}"></span>
                                <h3 class="font-semibold text-gray-900">
                                    \${lead.name || 'Anonim Lead'}
                                </h3>
                                <span class="ml-2 px-2 py-1 text-xs rounded-full bg-green-100 text-green-800">
                                    \${lead.score_grade || 'Unknown'}
                                </span>
                            </div>
                            
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-2 text-sm text-gray-600">
                                <div>
                                    <i class="fas fa-envelope mr-1"></i>
                                    \${lead.email || 'Email yok'}
                                </div>
                                <div>
                                    <i class="fas fa-phone mr-1"></i>
                                    \${lead.phone || 'Telefon yok'}
                                </div>
                                <div>
                                    <i class="fas fa-map-marker-alt mr-1"></i>
                                    \${lead.location || 'Konum yok'}
                                </div>
                            </div>
                            
                            <div class="mt-2 text-sm text-gray-600">
                                <i class="fas fa-tools mr-1"></i>
                                Hizmet: \${lead.service_interest || 'Belirtilmemiş'}
                            </div>
                        </div>
                        
                        <div class="text-right ml-4">
                            <div class="text-2xl font-bold text-green-600">\${lead.total_score || 0}</div>
                            <div class="text-xs text-gray-500">puan</div>
                            <div class="mt-2">
                                <button onclick="viewLeadDetails('\${lead.lead_uuid}')" 
                                        class="text-blue-600 hover:text-blue-800 text-sm">
                                    <i class="fas fa-eye mr-1"></i>
                                    Detaylar
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            \`).join('');
        }

        // Render score distribution chart
        function renderScoreDistribution() {
            const ctx = document.getElementById('scoreDistributionChart').getContext('2d');
            const stats = dashboardData.statistics || {};
            
            if (scoreChart) {
                scoreChart.destroy();
            }
            
            scoreChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['Qualified', 'Hot', 'Warm', 'Cold'],
                    datasets: [{
                        data: [
                            stats.qualified_leads || 0,
                            stats.hot_leads || 0,
                            stats.warm_leads || 0,
                            stats.cold_leads || 0
                        ],
                        backgroundColor: [
                            '#10b981', // Green for Qualified
                            '#ef4444', // Red for Hot
                            '#f59e0b', // Yellow for Warm
                            '#6b7280'  // Gray for Cold
                        ],
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
        }

        // Render recent activity
        function renderRecentActivity() {
            const tbody = document.getElementById('recentActivityTableBody');
            const activities = dashboardData.recent_activity || [];
            
            if (activities.length === 0) {
                tbody.innerHTML = \`
                    <tr>
                        <td colspan="4" class="px-6 py-12 text-center text-gray-500">
                            <i class="fas fa-clock text-4xl mb-4 opacity-50"></i>
                            <p>Henüz aktivite yok</p>
                        </td>
                    </tr>
                \`;
                return;
            }
            
            tbody.innerHTML = activities.map(activity => \`
                <tr class="hover:bg-gray-50">
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                            <div>
                                <div class="text-sm font-medium text-gray-900">
                                    \${activity.name || 'Anonim'}
                                </div>
                                <div class="text-sm text-gray-500">
                                    \${activity.email || activity.service_interest || ''}
                                </div>
                            </div>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="text-sm text-gray-900">\${activity.event_type}</div>
                        <div class="text-sm text-gray-500">\${activity.score_reason?.substring(0, 50) || ''}...</div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full \${
                            activity.score_change > 0 ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
                        }">
                            \${activity.score_change > 0 ? '+' : ''}\${activity.score_change}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        \${formatDate(activity.created_at)}
                    </td>
                </tr>
            \`).join('');
        }

        // Load scoring rules
        async function loadScoringRules() {
            try {
                const response = await axios.get('/api/admin/lead-scoring/rules');
                renderScoringRules(response.data.rules);
            } catch (error) {
                console.error('Failed to load scoring rules:', error);
            }
        }

        // Render scoring rules
        function renderScoringRules(rules) {
            const container = document.getElementById('scoringRulesContainer');
            
            container.innerHTML = Object.entries(rules).map(([category, categoryRules]) => \`
                <div class="mb-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-3 capitalize">
                        \${getCategoryLabel(category)} (\${categoryRules.length} kural)
                    </h3>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        \${categoryRules.map(rule => \`
                            <div class="border border-gray-200 rounded-lg p-4">
                                <div class="flex justify-between items-start mb-2">
                                    <h4 class="font-medium text-gray-900">\${rule.rule_name}</h4>
                                    <span class="px-2 py-1 text-xs rounded-full \${
                                        rule.score_value > 0 ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
                                    }">
                                        \${rule.score_value > 0 ? '+' : ''}\${rule.score_value}
                                    </span>
                                </div>
                                <p class="text-sm text-gray-600 mb-2">\${rule.description}</p>
                                <div class="flex justify-between items-center text-xs text-gray-500">
                                    <span>Max: \${rule.max_applications}x</span>
                                    <span class="\${rule.is_active ? 'text-green-600' : 'text-red-600'}">
                                        \${rule.is_active ? 'Aktif' : 'Pasif'}
                                    </span>
                                </div>
                            </div>
                        \`).join('')}
                    </div>
                </div>
            \`).join('');
        }

        // Utility functions
        function getCategoryLabel(category) {
            const labels = {
                demographic: 'Demografik',
                behavioral: 'Davranışsal',
                interest: 'İlgi',
                intent: 'Niyet'
            };
            return labels[category] || category;
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleString('tr-TR', {
                month: 'short',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        function refreshData() {
            loadDashboardData();
        }

        function viewLeadDetails(leadUuid) {
            // Implement lead details modal or redirect
            alert('Lead detay sayfası: ' + leadUuid);
        }

        function showRulesModal() {
            // Implement rules management modal
            alert('Kural yönetimi modalı geliştirme aşamasında');
        }

        // Show notification
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = \`fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transition-all duration-300 transform translate-x-full \${
                type === 'success' ? 'bg-green-500 text-white' :
                type === 'error' ? 'bg-red-500 text-white' :
                type === 'warning' ? 'bg-yellow-500 text-white' :
                'bg-blue-500 text-white'
            }\`;
            
            notification.innerHTML = \`
                <div class="flex items-center space-x-2">
                    <i class="fas \${
                        type === 'success' ? 'fa-check-circle' :
                        type === 'error' ? 'fa-exclamation-circle' :
                        type === 'warning' ? 'fa-exclamation-triangle' :
                        'fa-info-circle'
                    }"></i>
                    <span>\${message}</span>
                </div>
            \`;
            
            document.body.appendChild(notification);
            
            setTimeout(() => notification.classList.remove('translate-x-full'), 100);
            setTimeout(() => {
                notification.classList.add('translate-x-full');
                setTimeout(() => document.body.removeChild(notification), 300);
            }, 3000);
        }
    </script>
</body>
</html>
    `)
    
  } catch (error) {
    console.error('Lead scoring dashboard error:', error)
    return c.html(`
      <h1>Error</h1>
      <p>Lead scoring dashboard yüklenemedi: ${error.message}</p>
    `)
  }
})

// =============================================================================
// EMAIL MARKETING SYSTEM - BACKEND API
// =============================================================================

// Email Marketing System - Backend API
class EmailMarketingEngine {
  constructor(db) {
    this.db = db
  }

  // Email template management
  async getEmailTemplates() {
    return await this.db.prepare(`
      SELECT * FROM email_templates 
      WHERE is_active = 1 
      ORDER BY created_at DESC
    `).all()
  }

  async getEmailTemplate(id) {
    return await this.db.prepare(`
      SELECT * FROM email_templates WHERE id = ?
    `).bind(id).first()
  }

  async createEmailTemplate(templateData) {
    const { name, subject, html_content, text_content, template_type, variables, is_active = 1 } = templateData
    
    const result = await this.db.prepare(`
      INSERT INTO email_templates (
        name, subject, html_content, text_content, template_type, 
        variables, is_active, created_at, updated_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))
    `).bind(
      name, subject, html_content, text_content, template_type,
      JSON.stringify(variables || {}), is_active
    ).run()

    return { id: result.meta.last_row_id, ...templateData }
  }

  async updateEmailTemplate(id, templateData) {
    const { name, subject, html_content, text_content, variables, is_active } = templateData
    
    await this.db.prepare(`
      UPDATE email_templates 
      SET name = ?, subject = ?, html_content = ?, text_content = ?, 
          variables = ?, is_active = ?, updated_at = datetime('now')
      WHERE id = ?
    `).bind(
      name, subject, html_content, text_content,
      JSON.stringify(variables || {}), is_active, id
    ).run()

    return await this.getEmailTemplate(id)
  }

  // Email campaign management
  async createEmailCampaign(campaignData) {
    const {
      name, template_id, segment_criteria, schedule_type = 'immediate',
      scheduled_at, is_active = 1, created_by
    } = campaignData

    const result = await this.db.prepare(`
      INSERT INTO email_campaigns (
        name, template_id, segment_criteria, schedule_type, scheduled_at,
        is_active, created_by, created_at, updated_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))
    `).bind(
      name, template_id, JSON.stringify(segment_criteria || {}),
      schedule_type, scheduled_at, is_active, created_by
    ).run()

    return { id: result.meta.last_row_id, ...campaignData }
  }

  async getEmailCampaigns(limit = 50, offset = 0) {
    return await this.db.prepare(`
      SELECT 
        c.*,
        t.name as template_name,
        t.subject as template_subject,
        COUNT(s.id) as total_sends,
        COUNT(CASE WHEN s.status = 'sent' THEN 1 END) as successful_sends,
        COUNT(CASE WHEN s.opened_at IS NOT NULL THEN 1 END) as opens,
        COUNT(CASE WHEN s.clicked_at IS NOT NULL THEN 1 END) as clicks
      FROM email_campaigns c
      LEFT JOIN email_templates t ON c.template_id = t.id
      LEFT JOIN email_sends s ON c.id = s.campaign_id
      GROUP BY c.id
      ORDER BY c.created_at DESC
      LIMIT ? OFFSET ?
    `).bind(limit, offset).all()
  }

  // Email subscriber management
  async addEmailSubscriber(subscriberData) {
    const { email, name, phone, tags, metadata, source = 'manual' } = subscriberData
    
    // Check if subscriber exists
    const existing = await this.db.prepare(`
      SELECT id FROM email_subscribers WHERE email = ?
    `).bind(email).first()

    if (existing) {
      // Update existing subscriber
      await this.db.prepare(`
        UPDATE email_subscribers 
        SET name = ?, phone = ?, tags = ?, metadata = ?, 
            status = 'subscribed', updated_at = datetime('now')
        WHERE email = ?
      `).bind(
        name, phone, JSON.stringify(tags || []), 
        JSON.stringify(metadata || {}), email
      ).run()
      return { id: existing.id, ...subscriberData }
    }

    // Create new subscriber
    const result = await this.db.prepare(`
      INSERT INTO email_subscribers (
        email, name, phone, tags, metadata, source, status,
        subscribed_at, created_at, updated_at
      ) VALUES (?, ?, ?, ?, ?, ?, 'subscribed', datetime('now'), datetime('now'), datetime('now'))
    `).bind(
      email, name, phone, JSON.stringify(tags || []), 
      JSON.stringify(metadata || {}), source
    ).run()

    return { id: result.meta.last_row_id, ...subscriberData }
  }

  async getEmailSubscribers(filter = {}, limit = 50, offset = 0) {
    let query = `
      SELECT * FROM email_subscribers 
      WHERE status != 'unsubscribed'
    `
    const params = []

    if (filter.tags && filter.tags.length > 0) {
      query += ` AND (${filter.tags.map(() => 'tags LIKE ?').join(' OR ')})`
      filter.tags.forEach(tag => params.push(`%"${tag}"%`))
    }

    if (filter.source) {
      query += ` AND source = ?`
      params.push(filter.source)
    }

    query += ` ORDER BY subscribed_at DESC LIMIT ? OFFSET ?`
    params.push(limit, offset)

    return await this.db.prepare(query).bind(...params).all()
  }

  // Email automation workflows
  async createEmailAutomation(automationData) {
    const {
      name, trigger_type, trigger_conditions, template_sequence,
      is_active = 1, created_by
    } = automationData

    const result = await this.db.prepare(`
      INSERT INTO email_automations (
        name, trigger_type, trigger_conditions, template_sequence,
        is_active, created_by, created_at, updated_at
      ) VALUES (?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))
    `).bind(
      name, trigger_type, JSON.stringify(trigger_conditions || {}),
      JSON.stringify(template_sequence || []), is_active, created_by
    ).run()

    return { id: result.meta.last_row_id, ...automationData }
  }

  async triggerEmailAutomation(triggerType, triggerData) {
    // Find matching automations
    const automations = await this.db.prepare(`
      SELECT * FROM email_automations 
      WHERE trigger_type = ? AND is_active = 1
    `).bind(triggerType).all()

    const results = []
    
    for (const automation of automations.results || automations) {
      const conditions = JSON.parse(automation.trigger_conditions || '{}')
      
      // Check if trigger conditions match
      if (this.matchesTriggerConditions(triggerData, conditions)) {
        // Create automation instance
        const instanceResult = await this.db.prepare(`
          INSERT INTO email_automation_instances (
            automation_id, subscriber_email, trigger_data, status,
            created_at, updated_at
          ) VALUES (?, ?, ?, 'active', datetime('now'), datetime('now'))
        `).bind(
          automation.id, triggerData.email,
          JSON.stringify(triggerData)
        ).run()

        results.push({
          automation_id: automation.id,
          instance_id: instanceResult.meta.last_row_id,
          name: automation.name
        })
      }
    }

    return results
  }

  matchesTriggerConditions(triggerData, conditions) {
    // Simple condition matching logic
    if (!conditions || Object.keys(conditions).length === 0) return true
    
    for (const [key, value] of Object.entries(conditions)) {
      if (triggerData[key] !== value) return false
    }
    
    return true
  }

  // Email sending and tracking
  async scheduleEmail(emailData) {
    const {
      campaign_id, template_id, subscriber_email, scheduled_at,
      personalization_data = {}
    } = emailData

    const result = await this.db.prepare(`
      INSERT INTO email_sends (
        campaign_id, template_id, subscriber_email, status,
        personalization_data, scheduled_at, created_at
      ) VALUES (?, ?, ?, 'scheduled', ?, ?, datetime('now'))
    `).bind(
      campaign_id, template_id, subscriber_email,
      JSON.stringify(personalization_data), scheduled_at
    ).run()

    return { id: result.meta.last_row_id, ...emailData }
  }

  async updateEmailSendStatus(sendId, status, metadata = {}) {
    const updateFields = ['status = ?', 'updated_at = datetime("now")']
    const params = [status]

    if (status === 'sent') {
      updateFields.push('sent_at = datetime("now")')
    } else if (status === 'failed') {
      updateFields.push('error_message = ?')
      params.push(metadata.error || 'Unknown error')
    }

    await this.db.prepare(`
      UPDATE email_sends 
      SET ${updateFields.join(', ')}
      WHERE id = ?
    `).bind(...params, sendId).run()
  }

  // Email analytics
  async getEmailAnalytics(campaignId = null, days = 30) {
    let query = `
      SELECT 
        COUNT(*) as total_sends,
        COUNT(CASE WHEN status = 'sent' THEN 1 END) as successful_sends,
        COUNT(CASE WHEN opened_at IS NOT NULL THEN 1 END) as opens,
        COUNT(CASE WHEN clicked_at IS NOT NULL THEN 1 END) as clicks,
        COUNT(CASE WHEN status = 'failed' THEN 1 END) as failures
      FROM email_sends
      WHERE created_at >= datetime('now', '-${days} days')
    `

    if (campaignId) {
      query += ` AND campaign_id = ?`
      return await this.db.prepare(query).bind(campaignId).first()
    }

    return await this.db.prepare(query).first()
  }
}

// Email Marketing API Endpoints
app.get('/api/email-marketing/templates', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const emailEngine = new EmailMarketingEngine(DB)
    const templates = await emailEngine.getEmailTemplates()
    
    return c.json({
      success: true,
      templates: templates.results || templates
    })
  } catch (error) {
    console.error('Get email templates error:', error)
    return c.json({ error: 'Email template listesi alınamadı' }, 500)
  }
})

app.post('/api/email-marketing/templates', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const templateData = await c.req.json()
    const emailEngine = new EmailMarketingEngine(DB)
    const template = await emailEngine.createEmailTemplate(templateData)
    
    return c.json({
      success: true,
      template,
      message: 'Email template başarıyla oluşturuldu'
    })
  } catch (error) {
    console.error('Create email template error:', error)
    return c.json({ error: 'Email template oluşturulamadı' }, 500)
  }
})

app.get('/api/email-marketing/templates/:id', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  const templateId = c.req.param('id')
  
  try {
    const emailEngine = new EmailMarketingEngine(DB)
    const template = await emailEngine.getEmailTemplate(templateId)
    
    if (!template) {
      return c.json({ error: 'Email template bulunamadı' }, 404)
    }
    
    return c.json({
      success: true,
      template
    })
  } catch (error) {
    console.error('Get email template error:', error)
    return c.json({ error: 'Email template alınamadı' }, 500)
  }
})

app.put('/api/email-marketing/templates/:id', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  const templateId = c.req.param('id')
  
  try {
    const templateData = await c.req.json()
    const emailEngine = new EmailMarketingEngine(DB)
    const template = await emailEngine.updateEmailTemplate(templateId, templateData)
    
    return c.json({
      success: true,
      template,
      message: 'Email template başarıyla güncellendi'
    })
  } catch (error) {
    console.error('Update email template error:', error)
    return c.json({ error: 'Email template güncellenemedi' }, 500)
  }
})

app.get('/api/email-marketing/campaigns', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const limit = parseInt(c.req.query('limit')) || 50
    const offset = parseInt(c.req.query('offset')) || 0
    
    const emailEngine = new EmailMarketingEngine(DB)
    const campaigns = await emailEngine.getEmailCampaigns(limit, offset)
    
    return c.json({
      success: true,
      campaigns: campaigns.results || campaigns,
      pagination: { limit, offset }
    })
  } catch (error) {
    console.error('Get email campaigns error:', error)
    return c.json({ error: 'Email campaign listesi alınamadı' }, 500)
  }
})

app.post('/api/email-marketing/campaigns', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const campaignData = await c.req.json()
    campaignData.created_by = 'admin' // Set from auth context
    
    const emailEngine = new EmailMarketingEngine(DB)
    const campaign = await emailEngine.createEmailCampaign(campaignData)
    
    return c.json({
      success: true,
      campaign,
      message: 'Email campaign başarıyla oluşturuldu'
    })
  } catch (error) {
    console.error('Create email campaign error:', error)
    return c.json({ error: 'Email campaign oluşturulamadı' }, 500)
  }
})

app.get('/api/email-marketing/subscribers', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const limit = parseInt(c.req.query('limit')) || 50
    const offset = parseInt(c.req.query('offset')) || 0
    const tags = c.req.query('tags') ? c.req.query('tags').split(',') : []
    const source = c.req.query('source')
    
    const emailEngine = new EmailMarketingEngine(DB)
    const subscribers = await emailEngine.getEmailSubscribers(
      { tags, source }, limit, offset
    )
    
    return c.json({
      success: true,
      subscribers: subscribers.results || subscribers,
      pagination: { limit, offset }
    })
  } catch (error) {
    console.error('Get email subscribers error:', error)
    return c.json({ error: 'Email subscriber listesi alınamadı' }, 500)
  }
})

app.post('/api/email-marketing/subscribers', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const subscriberData = await c.req.json()
    const emailEngine = new EmailMarketingEngine(DB)
    const subscriber = await emailEngine.addEmailSubscriber(subscriberData)
    
    return c.json({
      success: true,
      subscriber,
      message: 'Email subscriber başarıyla eklendi'
    })
  } catch (error) {
    console.error('Add email subscriber error:', error)
    return c.json({ error: 'Email subscriber eklenemedi' }, 500)
  }
})

app.get('/api/email-marketing/analytics', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const campaignId = c.req.query('campaign_id')
    const days = parseInt(c.req.query('days')) || 30
    
    const emailEngine = new EmailMarketingEngine(DB)
    const analytics = await emailEngine.getEmailAnalytics(campaignId, days)
    
    // Calculate rates
    const totalSends = analytics.total_sends || 0
    const successRate = totalSends > 0 ? (analytics.successful_sends / totalSends * 100) : 0
    const openRate = totalSends > 0 ? (analytics.opens / totalSends * 100) : 0
    const clickRate = totalSends > 0 ? (analytics.clicks / totalSends * 100) : 0
    
    return c.json({
      success: true,
      analytics: {
        ...analytics,
        success_rate: successRate.toFixed(2),
        open_rate: openRate.toFixed(2),
        click_rate: clickRate.toFixed(2)
      }
    })
  } catch (error) {
    console.error('Get email analytics error:', error)
    return c.json({ error: 'Email analytics alınamadı' }, 500)
  }
})

app.post('/api/email-marketing/automations', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const automationData = await c.req.json()
    automationData.created_by = 'admin'
    
    const emailEngine = new EmailMarketingEngine(DB)
    const automation = await emailEngine.createEmailAutomation(automationData)
    
    return c.json({
      success: true,
      automation,
      message: 'Email automation başarıyla oluşturuldu'
    })
  } catch (error) {
    console.error('Create email automation error:', error)
    return c.json({ error: 'Email automation oluşturulamadı' }, 500)
  }
})

app.post('/api/email-marketing/trigger-automation', async (c) => {
  const { DB } = c.env
  
  try {
    const { trigger_type, trigger_data } = await c.req.json()
    
    const emailEngine = new EmailMarketingEngine(DB)
    const results = await emailEngine.triggerEmailAutomation(trigger_type, trigger_data)
    
    return c.json({
      success: true,
      triggered_automations: results,
      message: `${results.length} automation triggered`
    })
  } catch (error) {
    console.error('Trigger email automation error:', error)
    return c.json({ error: 'Email automation tetiklenemedi' }, 500)
  }
})

// =============================================================================
// CUSTOMER SEGMENTATION ENGINE
// =============================================================================

class CustomerSegmentationEngine {
  constructor(db) {
    this.db = db
  }

  // Get all customer segments
  async getSegments() {
    return await this.db.prepare(`
      SELECT 
        s.*,
        COUNT(DISTINCT csa.customer_identifier) as customer_count,
        AVG(spm.metric_value) as avg_performance
      FROM customer_segments s
      LEFT JOIN customer_segment_assignments csa ON s.id = csa.segment_id AND csa.is_active = 1
      LEFT JOIN segment_performance_metrics spm ON s.id = spm.segment_id 
        AND spm.metric_type = 'engagement_score' 
        AND spm.calculation_date >= date('now', '-30 days')
      WHERE s.is_active = 1
      GROUP BY s.id
      ORDER BY s.priority_score DESC, s.created_at ASC
    `).all()
  }

  // Get segment by ID with detailed info
  async getSegmentDetails(segmentId) {
    const segment = await this.db.prepare(`
      SELECT * FROM customer_segments WHERE id = ? AND is_active = 1
    `).bind(segmentId).first()

    if (!segment) return null

    // Get segment customers
    const customers = await this.db.prepare(`
      SELECT 
        csa.*,
        cbd.behavior_type,
        cbd.behavior_category,
        COUNT(cbd.id) as behavior_count
      FROM customer_segment_assignments csa
      LEFT JOIN customer_behavioral_data cbd ON csa.customer_identifier = cbd.customer_identifier
        AND cbd.timestamp >= date('now', '-30 days')
      WHERE csa.segment_id = ? AND csa.is_active = 1
      GROUP BY csa.customer_identifier
      ORDER BY csa.assigned_at DESC
      LIMIT 100
    `).bind(segmentId).all()

    // Get segment rules
    const rules = await this.db.prepare(`
      SELECT * FROM segment_rules 
      WHERE segment_id = ? AND is_active = 1
      ORDER BY rule_weight DESC
    `).bind(segmentId).all()

    return {
      segment,
      customers: customers.results || customers,
      rules: rules.results || rules
    }
  }

  // Assign customer to segment
  async assignCustomerToSegment(customerIdentifier, segmentId, source = 'automatic', reason = '') {
    // Check if customer already in this segment
    const existing = await this.db.prepare(`
      SELECT id FROM customer_segment_assignments 
      WHERE customer_identifier = ? AND segment_id = ? AND is_active = 1
    `).bind(customerIdentifier, segmentId).first()

    if (existing) {
      return { success: false, message: 'Customer already in this segment' }
    }

    // Get customer's current segments for history
    const currentSegments = await this.db.prepare(`
      SELECT segment_id FROM customer_segment_assignments 
      WHERE customer_identifier = ? AND is_active = 1
    `).bind(customerIdentifier).all()

    // Assign to new segment
    const result = await this.db.prepare(`
      INSERT INTO customer_segment_assignments (
        customer_identifier, segment_id, assignment_source, assignment_reason, assigned_at
      ) VALUES (?, ?, ?, ?, datetime('now'))
    `).bind(customerIdentifier, segmentId, source, reason).run()

    // Record segment history
    for (const currentSeg of (currentSegments.results || currentSegments)) {
      await this.db.prepare(`
        INSERT INTO segment_history (
          customer_identifier, old_segment_id, new_segment_id, change_reason, change_source
        ) VALUES (?, ?, ?, ?, ?)
      `).bind(customerIdentifier, currentSeg.segment_id, segmentId, reason, source).run()
    }

    return { 
      success: true, 
      assignmentId: result.meta.last_row_id,
      message: 'Customer assigned to segment successfully' 
    }
  }

  // Automatic segmentation based on rules
  async runAutomaticSegmentation(customerIdentifier) {
    // Get customer data for evaluation
    const customerData = await this.getCustomerDataForSegmentation(customerIdentifier)
    
    if (!customerData) {
      return { success: false, message: 'Customer data not found' }
    }

    // Get all active automated segments with rules
    const segments = await this.db.prepare(`
      SELECT 
        s.id, s.segment_name, s.segment_criteria, s.priority_score,
        GROUP_CONCAT(sr.rule_conditions) as rule_conditions,
        GROUP_CONCAT(sr.rule_weight) as rule_weights
      FROM customer_segments s
      LEFT JOIN segment_rules sr ON s.id = sr.segment_id AND sr.is_active = 1
      WHERE s.is_active = 1 AND s.is_automated = 1
      GROUP BY s.id
      ORDER BY s.priority_score DESC
    `).all()

    const segmentScores = []

    // Evaluate each segment
    for (const segment of (segments.results || segments)) {
      const score = this.calculateSegmentScore(customerData, segment)
      if (score > 0.5) { // Threshold for segment assignment
        segmentScores.push({
          segmentId: segment.id,
          segmentName: segment.segment_name,
          score: score
        })
      }
    }

    // Sort by score and assign to best matching segment
    segmentScores.sort((a, b) => b.score - a.score)

    const assignmentResults = []
    
    // Assign to top matching segments (max 3)
    for (let i = 0; i < Math.min(segmentScores.length, 3); i++) {
      const segmentScore = segmentScores[i]
      const assignment = await this.assignCustomerToSegment(
        customerIdentifier, 
        segmentScore.segmentId, 
        'automatic', 
        `Auto-assigned with score ${segmentScore.score.toFixed(2)}`
      )
      assignmentResults.push({
        ...segmentScore,
        assignment
      })
    }

    return {
      success: true,
      assignmentResults,
      message: `Assigned to ${assignmentResults.length} segments`
    }
  }

  // Get customer data for segmentation
  async getCustomerDataForSegmentation(customerIdentifier) {
    // Get basic customer info
    const customer = await this.db.prepare(`
      SELECT * FROM email_subscribers 
      WHERE email = ? OR phone = ?
      ORDER BY subscribed_at DESC LIMIT 1
    `).bind(customerIdentifier, customerIdentifier).first()

    if (!customer) return null

    // Get behavioral data
    const behaviorData = await this.db.prepare(`
      SELECT 
        behavior_type,
        behavior_category,
        COUNT(*) as occurrence_count,
        AVG(behavior_value) as avg_value,
        MAX(timestamp) as last_occurrence
      FROM customer_behavioral_data 
      WHERE customer_identifier = ?
      GROUP BY behavior_type, behavior_category
    `).bind(customerIdentifier).all()

    // Get lead scoring data if available
    const leadScore = await this.db.prepare(`
      SELECT current_score FROM lead_scores 
      WHERE lead_identifier = ?
      ORDER BY updated_at DESC LIMIT 1
    `).bind(customerIdentifier).first()

    // Get service history (if customer has services)
    const serviceHistory = await this.db.prepare(`
      SELECT 
        COUNT(*) as service_count,
        SUM(CASE WHEN hizmet_durumu = 'tamamlandi' THEN 1 ELSE 0 END) as completed_services,
        MAX(created_at) as last_service_date,
        AVG(CASE WHEN musteri_puani IS NOT NULL THEN musteri_puani ELSE 0 END) as avg_rating
      FROM hizmet_talepleri 
      WHERE musteri_telefon = ? OR musteri_email = ?
    `).bind(customerIdentifier, customerIdentifier).first()

    return {
      customer,
      behaviors: behaviorData.results || behaviorData,
      leadScore: leadScore?.current_score || 0,
      serviceHistory: serviceHistory || {},
      calculatedMetrics: this.calculateCustomerMetrics(behaviorData.results || behaviorData, serviceHistory)
    }
  }

  // Calculate customer metrics for segmentation
  calculateCustomerMetrics(behaviors, serviceHistory) {
    const metrics = {
      engagement_score: 0,
      website_visits: 0,
      email_engagement: 0,
      service_frequency: 0,
      last_activity_days: 999
    }

    // Calculate engagement metrics from behavior data
    behaviors.forEach(behavior => {
      switch (behavior.behavior_type) {
        case 'page_visit':
          metrics.website_visits += behavior.occurrence_count
          break
        case 'email_open':
        case 'email_click':
          metrics.email_engagement += behavior.occurrence_count * 0.1
          break
      }
      
      // Update last activity
      const daysSinceActivity = Math.floor((new Date() - new Date(behavior.last_occurrence)) / (1000 * 60 * 60 * 24))
      if (daysSinceActivity < metrics.last_activity_days) {
        metrics.last_activity_days = daysSinceActivity
      }
    })

    // Calculate service frequency
    if (serviceHistory.service_count > 0) {
      metrics.service_frequency = serviceHistory.service_count / 12 // services per month
    }

    // Calculate overall engagement score
    metrics.engagement_score = (
      Math.min(metrics.website_visits * 0.1, 1) * 0.3 +
      Math.min(metrics.email_engagement, 1) * 0.4 +
      Math.min(metrics.service_frequency * 2, 1) * 0.3
    )

    return metrics
  }

  // Calculate segment score for customer
  calculateSegmentScore(customerData, segment) {
    let totalScore = 0
    let totalWeight = 0

    try {
      // Parse segment criteria
      const criteria = JSON.parse(segment.segment_criteria || '{}')
      const ruleConditions = segment.rule_conditions ? segment.rule_conditions.split(',') : []
      const ruleWeights = segment.rule_weights ? segment.rule_weights.split(',').map(w => parseFloat(w)) : []

      // Evaluate main criteria
      for (const [field, condition] of Object.entries(criteria)) {
        const fieldValue = this.getCustomerFieldValue(customerData, field)
        const conditionScore = this.evaluateCondition(fieldValue, condition)
        totalScore += conditionScore * 0.5 // Base weight for main criteria
        totalWeight += 0.5
      }

      // Evaluate individual rules
      ruleConditions.forEach((ruleCondition, index) => {
        try {
          const rule = JSON.parse(ruleCondition)
          const fieldValue = this.getCustomerFieldValue(customerData, rule.field)
          const conditionScore = this.evaluateCondition(fieldValue, {
            operator: rule.operator,
            value: rule.value
          })
          const weight = ruleWeights[index] || 0.5
          totalScore += conditionScore * weight
          totalWeight += weight
        } catch (e) {
          console.warn('Invalid rule condition:', ruleCondition)
        }
      })

    } catch (error) {
      console.error('Segment scoring error:', error)
      return 0
    }

    return totalWeight > 0 ? totalScore / totalWeight : 0
  }

  // Get customer field value for evaluation
  getCustomerFieldValue(customerData, field) {
    const { customer, behaviors, leadScore, serviceHistory, calculatedMetrics } = customerData

    // Service history fields
    if (field === 'service_count') return serviceHistory.service_count || 0
    if (field === 'total_spent') return serviceHistory.total_spent || 0
    if (field === 'satisfaction_score') return serviceHistory.avg_rating || 0
    
    // Calculated metrics
    if (calculatedMetrics[field] !== undefined) return calculatedMetrics[field]
    
    // Lead scoring
    if (field === 'lead_score') return leadScore
    
    // Customer fields
    if (customer && customer[field] !== undefined) return customer[field]
    
    // Time-based calculations
    if (field === 'registration_days') {
      return customer ? Math.floor((new Date() - new Date(customer.created_at)) / (1000 * 60 * 60 * 24)) : 999
    }
    
    if (field === 'last_service_days') {
      return serviceHistory.last_service_date ? 
        Math.floor((new Date() - new Date(serviceHistory.last_service_date)) / (1000 * 60 * 60 * 24)) : 999
    }

    return 0
  }

  // Evaluate condition
  evaluateCondition(fieldValue, condition) {
    const { operator, value, min, max } = condition

    if (min !== undefined && max !== undefined) {
      return (fieldValue >= min && fieldValue <= max) ? 1 : 0
    }

    if (min !== undefined) {
      return fieldValue >= min ? 1 : 0
    }

    if (max !== undefined) {
      return fieldValue <= max ? 1 : 0
    }

    switch (operator) {
      case '>=': return fieldValue >= value ? 1 : 0
      case '>': return fieldValue > value ? 1 : 0
      case '<=': return fieldValue <= value ? 1 : 0
      case '<': return fieldValue < value ? 1 : 0
      case '==': return fieldValue === value ? 1 : 0
      case '!=': return fieldValue !== value ? 1 : 0
      case 'between': 
        return (fieldValue >= value[0] && fieldValue <= value[1]) ? 1 : 0
      case 'includes':
        return Array.isArray(value) && value.some(v => String(fieldValue).includes(v)) ? 1 : 0
      default: return 0
    }
  }

  // Track customer behavior
  async trackCustomerBehavior(behaviorData) {
    const {
      customer_identifier,
      customer_type = 'email',
      behavior_type,
      behavior_data = {},
      behavior_value = null,
      behavior_category = 'engagement',
      session_id = null,
      page_url = null,
      referrer_url = null,
      user_agent = null,
      ip_address = null
    } = behaviorData

    await this.db.prepare(`
      INSERT INTO customer_behavioral_data (
        customer_identifier, customer_type, behavior_type, behavior_data,
        behavior_value, behavior_category, session_id, page_url,
        referrer_url, user_agent, ip_address, timestamp
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, datetime('now'))
    `).bind(
      customer_identifier, customer_type, behavior_type, JSON.stringify(behavior_data),
      behavior_value, behavior_category, session_id, page_url,
      referrer_url, user_agent, ip_address
    ).run()

    // Trigger automatic segmentation after behavior tracking
    if (['form_submit', 'email_open', 'service_request'].includes(behavior_type)) {
      await this.runAutomaticSegmentation(customer_identifier)
    }
  }

  // Get segment performance analytics
  async getSegmentAnalytics(segmentId = null, days = 30) {
    let whereClause = ''
    const params = [days]
    
    if (segmentId) {
      whereClause = 'AND s.id = ?'
      params.push(segmentId)
    }

    return await this.db.prepare(`
      SELECT 
        s.id,
        s.segment_name,
        COUNT(DISTINCT csa.customer_identifier) as total_customers,
        COUNT(DISTINCT CASE WHEN csa.assigned_at >= date('now', '-? days') THEN csa.customer_identifier END) as new_customers,
        AVG(spm.metric_value) as avg_engagement_score,
        COUNT(DISTINCT cbd.customer_identifier) as active_customers
      FROM customer_segments s
      LEFT JOIN customer_segment_assignments csa ON s.id = csa.segment_id AND csa.is_active = 1
      LEFT JOIN segment_performance_metrics spm ON s.id = spm.segment_id 
        AND spm.metric_type = 'engagement_score'
        AND spm.calculation_date >= date('now', '-? days')
      LEFT JOIN customer_behavioral_data cbd ON csa.customer_identifier = cbd.customer_identifier
        AND cbd.timestamp >= date('now', '-? days')
      WHERE s.is_active = 1 ${whereClause}
      GROUP BY s.id
      ORDER BY total_customers DESC
    `).bind(...params, days, days).all()
  }
}

// Customer Segmentation API Endpoints
app.get('/api/customer-segmentation/segments', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const segmentEngine = new CustomerSegmentationEngine(DB)
    const segments = await segmentEngine.getSegments()
    
    return c.json({
      success: true,
      segments: segments.results || segments
    })
  } catch (error) {
    console.error('Get segments error:', error)
    return c.json({ error: 'Segment listesi alınamadı' }, 500)
  }
})

app.get('/api/customer-segmentation/segments/:id', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  const segmentId = c.req.param('id')
  
  try {
    const segmentEngine = new CustomerSegmentationEngine(DB)
    const segmentDetails = await segmentEngine.getSegmentDetails(segmentId)
    
    if (!segmentDetails) {
      return c.json({ error: 'Segment bulunamadı' }, 404)
    }
    
    return c.json({
      success: true,
      ...segmentDetails
    })
  } catch (error) {
    console.error('Get segment details error:', error)
    return c.json({ error: 'Segment detayları alınamadı' }, 500)
  }
})

app.post('/api/customer-segmentation/assign', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { customer_identifier, segment_id, reason } = await c.req.json()
    
    const segmentEngine = new CustomerSegmentationEngine(DB)
    const result = await segmentEngine.assignCustomerToSegment(
      customer_identifier, segment_id, 'manual', reason || 'Manual assignment'
    )
    
    return c.json(result)
  } catch (error) {
    console.error('Assign customer error:', error)
    return c.json({ error: 'Müşteri atama hatası' }, 500)
  }
})

app.post('/api/customer-segmentation/auto-segment', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { customer_identifier } = await c.req.json()
    
    const segmentEngine = new CustomerSegmentationEngine(DB)
    const result = await segmentEngine.runAutomaticSegmentation(customer_identifier)
    
    return c.json(result)
  } catch (error) {
    console.error('Auto segmentation error:', error)
    return c.json({ error: 'Otomatik segmentasyon hatası' }, 500)
  }
})

app.post('/api/customer-segmentation/track-behavior', async (c) => {
  const { DB } = c.env
  
  try {
    const behaviorData = await c.req.json()
    
    // Get IP and user agent from request
    behaviorData.ip_address = c.req.header('cf-connecting-ip') || 
                               c.req.header('x-forwarded-for') || 
                               c.req.header('x-real-ip') || '127.0.0.1'
    behaviorData.user_agent = c.req.header('user-agent') || ''
    
    const segmentEngine = new CustomerSegmentationEngine(DB)
    await segmentEngine.trackCustomerBehavior(behaviorData)
    
    return c.json({
      success: true,
      message: 'Behavior tracked successfully'
    })
  } catch (error) {
    console.error('Track behavior error:', error)
    return c.json({ error: 'Davranış kaydı hatası' }, 500)
  }
})

app.get('/api/customer-segmentation/analytics', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const segmentId = c.req.query('segment_id')
    const days = parseInt(c.req.query('days')) || 30
    
    const segmentEngine = new CustomerSegmentationEngine(DB)
    const analytics = await segmentEngine.getSegmentAnalytics(segmentId, days)
    
    return c.json({
      success: true,
      analytics: analytics.results || analytics
    })
  } catch (error) {
    console.error('Segment analytics error:', error)
    return c.json({ error: 'Segment analytics alınamadı' }, 500)
  }
})

// Email Marketing Admin Dashboard
app.get('/admin/email-marketing-dashboard', requireAdminAuth(), async (c) => {
  return c.html(`
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Email Marketing Dashboard - GARANTOR360</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    </head>
    <body class="bg-gray-100">
        <div class="min-h-screen">
            <!-- Header -->
            <div class="bg-white shadow-sm border-b">
                <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div class="flex justify-between h-16">
                        <div class="flex items-center">
                            <i class="fas fa-envelope text-blue-600 text-xl mr-2"></i>
                            <h1 class="text-xl font-semibold text-gray-900">Email Marketing Dashboard</h1>
                        </div>
                        <div class="flex items-center space-x-4">
                            <button onclick="showCreateTemplate()" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700">
                                <i class="fas fa-plus mr-2"></i>Template Oluştur
                            </button>
                            <button onclick="showCreateCampaign()" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">
                                <i class="fas fa-rocket mr-2"></i>Kampanya Oluştur
                            </button>
                            <a href="/admin" class="text-gray-600 hover:text-gray-900">
                                <i class="fas fa-arrow-left mr-2"></i>Geri Dön
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
                <!-- Stats Cards -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-blue-100">
                                <i class="fas fa-envelope text-blue-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600">Email Templates</p>
                                <p class="text-2xl font-semibold text-gray-900" id="total-templates">-</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-green-100">
                                <i class="fas fa-users text-green-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600">Subscribers</p>
                                <p class="text-2xl font-semibold text-gray-900" id="total-subscribers">-</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-yellow-100">
                                <i class="fas fa-paper-plane text-yellow-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600">Campaigns</p>
                                <p class="text-2xl font-semibold text-gray-900" id="total-campaigns">-</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-purple-100">
                                <i class="fas fa-chart-line text-purple-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600">Open Rate</p>
                                <p class="text-2xl font-semibold text-gray-900" id="open-rate">-</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Tabs -->
                <div class="bg-white rounded-lg shadow mb-6">
                    <div class="border-b border-gray-200">
                        <nav class="flex space-x-8 px-6">
                            <button onclick="showTab('templates')" class="tab-btn border-b-2 border-blue-500 py-4 px-1 text-blue-600 font-medium">
                                Email Templates
                            </button>
                            <button onclick="showTab('campaigns')" class="tab-btn border-b-2 border-transparent py-4 px-1 text-gray-500 hover:text-gray-700">
                                Campaigns
                            </button>
                            <button onclick="showTab('subscribers')" class="tab-btn border-b-2 border-transparent py-4 px-1 text-gray-500 hover:text-gray-700">
                                Subscribers
                            </button>
                            <button onclick="showTab('analytics')" class="tab-btn border-b-2 border-transparent py-4 px-1 text-gray-500 hover:text-gray-700">
                                Analytics
                            </button>
                        </nav>
                    </div>

                    <!-- Templates Tab -->
                    <div id="templates-tab" class="tab-content p-6">
                        <div class="overflow-x-auto">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Template</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Type</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Created</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="templates-table" class="bg-white divide-y divide-gray-200">
                                    <!-- Templates will be loaded here -->
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Campaigns Tab -->
                    <div id="campaigns-tab" class="tab-content p-6 hidden">
                        <div class="overflow-x-auto">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Campaign</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Template</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Sends</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Opens</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="campaigns-table" class="bg-white divide-y divide-gray-200">
                                    <!-- Campaigns will be loaded here -->
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Subscribers Tab -->
                    <div id="subscribers-tab" class="tab-content p-6 hidden">
                        <div class="mb-4">
                            <button onclick="showAddSubscriber()" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700">
                                <i class="fas fa-plus mr-2"></i>Subscriber Ekle
                            </button>
                        </div>
                        <div class="overflow-x-auto">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Email</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Name</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Tags</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Source</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="subscribers-table" class="bg-white divide-y divide-gray-200">
                                    <!-- Subscribers will be loaded here -->
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Analytics Tab -->
                    <div id="analytics-tab" class="tab-content p-6 hidden">
                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                            <div class="bg-gray-50 rounded-lg p-4">
                                <h3 class="text-lg font-medium text-gray-900 mb-4">Email Performance</h3>
                                <canvas id="performanceChart" width="400" height="200"></canvas>
                            </div>
                            <div class="bg-gray-50 rounded-lg p-4">
                                <h3 class="text-lg font-medium text-gray-900 mb-4">Detailed Stats</h3>
                                <div id="detailed-stats" class="space-y-3">
                                    <!-- Stats will be loaded here -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script>
            let currentTab = 'templates';

            // Initialize dashboard
            document.addEventListener('DOMContentLoaded', function() {
                loadDashboardData();
            });

            async function loadDashboardData() {
                try {
                    // Load templates
                    await loadTemplates();
                    // Load campaigns
                    await loadCampaigns();
                    // Load subscribers
                    await loadSubscribers();
                    // Load analytics
                    await loadAnalytics();
                } catch (error) {
                    console.error('Dashboard loading error:', error);
                }
            }

            async function loadTemplates() {
                try {
                    const response = await fetch('/api/email-marketing/templates', {
                        headers: { 'Authorization': \`Bearer \${getAdminToken()}\` }
                    });
                    
                    if (response.ok) {
                        const data = await response.json();
                        updateTemplatesTable(data.templates || []);
                        document.getElementById('total-templates').textContent = data.templates?.length || 0;
                    }
                } catch (error) {
                    console.error('Load templates error:', error);
                }
            }

            async function loadCampaigns() {
                try {
                    const response = await fetch('/api/email-marketing/campaigns', {
                        headers: { 'Authorization': \`Bearer \${getAdminToken()}\` }
                    });
                    
                    if (response.ok) {
                        const data = await response.json();
                        updateCampaignsTable(data.campaigns || []);
                        document.getElementById('total-campaigns').textContent = data.campaigns?.length || 0;
                    }
                } catch (error) {
                    console.error('Load campaigns error:', error);
                }
            }

            async function loadSubscribers() {
                try {
                    const response = await fetch('/api/email-marketing/subscribers', {
                        headers: { 'Authorization': \`Bearer \${getAdminToken()}\` }
                    });
                    
                    if (response.ok) {
                        const data = await response.json();
                        updateSubscribersTable(data.subscribers || []);
                        document.getElementById('total-subscribers').textContent = data.subscribers?.length || 0;
                    }
                } catch (error) {
                    console.error('Load subscribers error:', error);
                }
            }

            async function loadAnalytics() {
                try {
                    const response = await fetch('/api/email-marketing/analytics', {
                        headers: { 'Authorization': \`Bearer \${getAdminToken()}\` }
                    });
                    
                    if (response.ok) {
                        const data = await response.json();
                        updateAnalytics(data.analytics || {});
                        document.getElementById('open-rate').textContent = \`\${data.analytics?.open_rate || 0}%\`;
                    }
                } catch (error) {
                    console.error('Load analytics error:', error);
                }
            }

            function updateTemplatesTable(templates) {
                const tbody = document.getElementById('templates-table');
                tbody.innerHTML = '';
                
                templates.forEach(template => {
                    const row = tbody.insertRow();
                    row.innerHTML = \`
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm font-medium text-gray-900">\${template.name}</div>
                            <div class="text-sm text-gray-500">\${template.subject}</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                \${template.template_type}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \${template.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}">
                                \${template.is_active ? 'Active' : 'Inactive'}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            \${new Date(template.created_at).toLocaleDateString('tr-TR')}
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                            <button onclick="editTemplate(\${template.id})" class="text-blue-600 hover:text-blue-900 mr-3">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button onclick="previewTemplate(\${template.id})" class="text-green-600 hover:text-green-900">
                                <i class="fas fa-eye"></i>
                            </button>
                        </td>
                    \`;
                });
            }

            function updateCampaignsTable(campaigns) {
                const tbody = document.getElementById('campaigns-table');
                tbody.innerHTML = '';
                
                campaigns.forEach(campaign => {
                    const row = tbody.insertRow();
                    row.innerHTML = \`
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm font-medium text-gray-900">\${campaign.name}</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            \${campaign.template_name || 'N/A'}
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            \${campaign.total_sends || 0}
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            \${campaign.opens || 0}
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \${campaign.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}">
                                \${campaign.is_active ? 'Active' : 'Inactive'}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                            <button onclick="viewCampaign(\${campaign.id})" class="text-blue-600 hover:text-blue-900">
                                <i class="fas fa-eye"></i>
                            </button>
                        </td>
                    \`;
                });
            }

            function updateSubscribersTable(subscribers) {
                const tbody = document.getElementById('subscribers-table');
                tbody.innerHTML = '';
                
                subscribers.forEach(subscriber => {
                    const tags = JSON.parse(subscriber.tags || '[]');
                    const row = tbody.insertRow();
                    row.innerHTML = \`
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm font-medium text-gray-900">\${subscriber.email}</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            \${subscriber.name || 'N/A'}
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex flex-wrap gap-1">
                                \${tags.map(tag => \`<span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800">\${tag}</span>\`).join('')}
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            \${subscriber.source || 'manual'}
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \${subscriber.status === 'subscribed' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}">
                                \${subscriber.status}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                            <button onclick="editSubscriber(\${subscriber.id})" class="text-blue-600 hover:text-blue-900">
                                <i class="fas fa-edit"></i>
                            </button>
                        </td>
                    \`;
                });
            }

            function updateAnalytics(analytics) {
                document.getElementById('detailed-stats').innerHTML = \`
                    <div class="flex justify-between">
                        <span>Total Sends:</span>
                        <span class="font-medium">\${analytics.total_sends || 0}</span>
                    </div>
                    <div class="flex justify-between">
                        <span>Successful Sends:</span>
                        <span class="font-medium">\${analytics.successful_sends || 0}</span>
                    </div>
                    <div class="flex justify-between">
                        <span>Opens:</span>
                        <span class="font-medium">\${analytics.opens || 0}</span>
                    </div>
                    <div class="flex justify-between">
                        <span>Clicks:</span>
                        <span class="font-medium">\${analytics.clicks || 0}</span>
                    </div>
                    <div class="flex justify-between">
                        <span>Success Rate:</span>
                        <span class="font-medium">\${analytics.success_rate || 0}%</span>
                    </div>
                    <div class="flex justify-between">
                        <span>Open Rate:</span>
                        <span class="font-medium">\${analytics.open_rate || 0}%</span>
                    </div>
                    <div class="flex justify-between">
                        <span>Click Rate:</span>
                        <span class="font-medium">\${analytics.click_rate || 0}%</span>
                    </div>
                \`;
            }

            function showTab(tabName) {
                // Hide all tabs
                document.querySelectorAll('.tab-content').forEach(tab => {
                    tab.classList.add('hidden');
                });
                
                // Remove active class from all buttons
                document.querySelectorAll('.tab-btn').forEach(btn => {
                    btn.classList.remove('border-blue-500', 'text-blue-600');
                    btn.classList.add('border-transparent', 'text-gray-500');
                });
                
                // Show selected tab
                document.getElementById(\`\${tabName}-tab\`).classList.remove('hidden');
                
                // Add active class to selected button
                event.target.classList.remove('border-transparent', 'text-gray-500');
                event.target.classList.add('border-blue-500', 'text-blue-600');
                
                currentTab = tabName;
            }

            function showCreateTemplate() {
                alert('Template oluşturma sayfası açılacak');
            }

            function showCreateCampaign() {
                alert('Kampanya oluşturma sayfası açılacak');
            }

            function showAddSubscriber() {
                alert('Subscriber ekleme sayfası açılacak');
            }

            function editTemplate(id) {
                alert(\`Template edit: \${id}\`);
            }

            function previewTemplate(id) {
                alert(\`Template preview: \${id}\`);
            }

            function viewCampaign(id) {
                alert(\`Campaign view: \${id}\`);
            }

            function editSubscriber(id) {
                alert(\`Subscriber edit: \${id}\`);
            }

            function getAdminToken() {
                return localStorage.getItem('admin_token') || '';
            }
        </script>
    </body>
    </html>
  `)
})

// =============================================================================
// MARKETING AUTOMATION WORKFLOWS ENGINE
// =============================================================================

class MarketingAutomationEngine {
  constructor(db) {
    this.db = db
  }

  // Get all marketing workflows
  async getWorkflows() {
    return await this.db.prepare(`
      SELECT 
        w.*,
        COUNT(DISTINCT we.id) as active_executions,
        COUNT(DISTINCT CASE WHEN we.execution_status = 'completed' THEN we.id END) as completed_executions,
        AVG(was.conversion_rate) as avg_conversion_rate,
        MAX(w.last_triggered_at) as last_activity
      FROM marketing_automation_workflows w
      LEFT JOIN workflow_executions we ON w.id = we.workflow_id AND we.execution_status IN ('active', 'paused')
      LEFT JOIN workflow_analytics_summary was ON w.id = was.workflow_id 
        AND was.analytics_date >= date('now', '-30 days')
      WHERE w.is_active = 1
      GROUP BY w.id
      ORDER BY w.priority_level DESC, w.created_at ASC
    `).all()
  }

  // Get workflow details with steps and triggers
  async getWorkflowDetails(workflowId) {
    const workflow = await this.db.prepare(`
      SELECT * FROM marketing_automation_workflows WHERE id = ?
    `).bind(workflowId).first()

    if (!workflow) return null

    // Get workflow steps
    const steps = await this.db.prepare(`
      SELECT * FROM workflow_steps 
      WHERE workflow_id = ? AND is_active = 1
      ORDER BY step_index ASC
    `).bind(workflowId).all()

    // Get workflow triggers
    const triggers = await this.db.prepare(`
      SELECT * FROM workflow_triggers 
      WHERE workflow_id = ? AND is_active = 1
    `).bind(workflowId).all()

    // Get recent executions
    const executions = await this.db.prepare(`
      SELECT 
        we.*,
        COUNT(ecp.id) as email_interactions
      FROM workflow_executions we
      LEFT JOIN email_campaign_performance ecp ON we.id = ecp.workflow_execution_id
      WHERE we.workflow_id = ?
      GROUP BY we.id
      ORDER BY we.started_at DESC
      LIMIT 50
    `).bind(workflowId).all()

    return {
      workflow,
      steps: steps.results || steps,
      triggers: triggers.results || triggers,
      executions: executions.results || executions
    }
  }

  // Trigger workflow for a customer
  async triggerWorkflow(workflowId, customerIdentifier, triggerSource = 'manual', contextData = {}) {
    // Check if workflow exists and is active
    const workflow = await this.db.prepare(`
      SELECT * FROM marketing_automation_workflows 
      WHERE id = ? AND is_active = 1 AND is_paused = 0
    `).bind(workflowId).first()

    if (!workflow) {
      return { success: false, message: 'Workflow not found or inactive' }
    }

    // Check if customer already has active execution
    const existingExecution = await this.db.prepare(`
      SELECT id FROM workflow_executions 
      WHERE workflow_id = ? AND customer_identifier = ? 
        AND execution_status IN ('active', 'paused')
    `).bind(workflowId, customerIdentifier).first()

    if (existingExecution) {
      return { success: false, message: 'Customer already in this workflow' }
    }

    // Get customer data for personalization
    const customerData = await this.getCustomerDataForWorkflow(customerIdentifier)
    
    // Parse workflow steps
    const workflowSteps = JSON.parse(workflow.workflow_steps || '[]')
    if (workflowSteps.length === 0) {
      return { success: false, message: 'Workflow has no steps defined' }
    }

    // Calculate next action time
    const firstStep = workflowSteps[0]
    const delayHours = firstStep.delay_hours || 0
    const nextActionAt = new Date(Date.now() + (delayHours * 60 * 60 * 1000))

    // Create workflow execution
    const executionResult = await this.db.prepare(`
      INSERT INTO workflow_executions (
        workflow_id, customer_identifier, execution_status, current_step_index,
        next_action_at, execution_data, personalization_data, started_at
      ) VALUES (?, ?, 'active', 0, ?, ?, ?, datetime('now'))
    `).bind(
      workflowId, customerIdentifier, nextActionAt.toISOString(),
      JSON.stringify({ customerData, contextData, triggerSource }),
      JSON.stringify(this.generatePersonalizationData(customerData, contextData))
    ).run()

    // Update workflow statistics
    await this.db.prepare(`
      UPDATE marketing_automation_workflows 
      SET total_triggered = total_triggered + 1, last_triggered_at = datetime('now')
      WHERE id = ?
    `).bind(workflowId).run()

    return {
      success: true,
      executionId: executionResult.meta.last_row_id,
      nextActionAt: nextActionAt.toISOString(),
      message: 'Workflow triggered successfully'
    }
  }

  // Execute pending workflow actions
  async executePendingActions(limit = 100) {
    // Get pending workflow executions
    const pendingExecutions = await this.db.prepare(`
      SELECT 
        we.*,
        w.workflow_steps,
        w.workflow_settings
      FROM workflow_executions we
      JOIN marketing_automation_workflows w ON we.workflow_id = w.id
      WHERE we.execution_status = 'active'
        AND we.next_action_at <= datetime('now')
        AND w.is_active = 1 AND w.is_paused = 0
      ORDER BY we.next_action_at ASC
      LIMIT ?
    `).bind(limit).all()

    const executionResults = []

    for (const execution of (pendingExecutions.results || pendingExecutions)) {
      try {
        const result = await this.executeWorkflowStep(execution)
        executionResults.push(result)
      } catch (error) {
        console.error(`Workflow execution error for ${execution.id}:`, error)
        // Mark execution as failed
        await this.db.prepare(`
          UPDATE workflow_executions 
          SET execution_status = 'failed', last_action_at = datetime('now')
          WHERE id = ?
        `).bind(execution.id).run()
      }
    }

    return {
      success: true,
      processed: executionResults.length,
      results: executionResults
    }
  }

  // Execute a single workflow step
  async executeWorkflowStep(execution) {
    const workflowSteps = JSON.parse(execution.workflow_steps || '[]')
    const currentStepIndex = execution.current_step_index
    
    if (currentStepIndex >= workflowSteps.length) {
      // Workflow completed
      await this.completeWorkflowExecution(execution.id)
      return { executionId: execution.id, action: 'completed', success: true }
    }

    const currentStep = workflowSteps[currentStepIndex]
    const executionData = JSON.parse(execution.execution_data || '{}')
    const personalizationData = JSON.parse(execution.personalization_data || '{}')

    let stepResult = { success: true, action: currentStep.step_type }

    // Execute step based on type
    switch (currentStep.step_type) {
      case 'email':
        stepResult = await this.executeEmailStep(execution, currentStep, personalizationData)
        break
      
      case 'delay':
        stepResult = await this.executeDelayStep(execution, currentStep)
        break
      
      case 'condition':
        stepResult = await this.executeConditionStep(execution, currentStep, executionData)
        break
      
      case 'segment_update':
        stepResult = await this.executeSegmentUpdateStep(execution, currentStep)
        break
      
      default:
        stepResult = { success: false, error: `Unknown step type: ${currentStep.step_type}` }
    }

    // Update execution based on step result
    if (stepResult.success) {
      await this.advanceWorkflowExecution(execution.id, stepResult)
    } else {
      await this.handleStepFailure(execution.id, stepResult)
    }

    return { executionId: execution.id, stepIndex: currentStepIndex, ...stepResult }
  }

  // Execute email step
  async executeEmailStep(execution, step, personalizationData) {
    try {
      // Get email template
      const template = await this.db.prepare(`
        SELECT * FROM email_templates WHERE id = ?
      `).bind(step.email_template_id).first()

      if (!template) {
        return { success: false, error: 'Email template not found' }
      }

      // Apply personalization to template
      const personalizedSubject = this.applyPersonalization(template.subject, personalizationData)
      const personalizedContent = this.applyPersonalization(template.html_content, personalizationData)

      // Schedule email sending
      const emailResult = await this.db.prepare(`
        INSERT INTO email_sends (
          template_id, subscriber_email, status, personalization_data,
          scheduled_at, created_at
        ) VALUES (?, ?, 'scheduled', ?, datetime('now'), datetime('now'))
      `).bind(
        template.id, execution.customer_identifier, 
        JSON.stringify(personalizationData)
      ).run()

      // Record email campaign performance tracking
      await this.db.prepare(`
        INSERT INTO email_campaign_performance (
          workflow_execution_id, email_send_id, sent_at
        ) VALUES (?, ?, datetime('now'))
      `).bind(execution.id, emailResult.meta.last_row_id).run()

      return { 
        success: true, 
        emailSendId: emailResult.meta.last_row_id,
        action: 'email_sent'
      }
    } catch (error) {
      return { success: false, error: error.message }
    }
  }

  // Execute delay step
  async executeDelayStep(execution, step) {
    const delayHours = step.delay_hours || 0
    const nextActionAt = new Date(Date.now() + (delayHours * 60 * 60 * 1000))
    
    return { 
      success: true, 
      nextActionAt: nextActionAt.toISOString(),
      action: 'delayed'
    }
  }

  // Execute condition step
  async executeConditionStep(execution, step, executionData) {
    // Evaluate conditions based on step configuration
    const conditions = step.conditions || {}
    let conditionMet = true

    // Example condition checks
    if (conditions.email_opened) {
      // Check if previous email was opened
      const emailOpened = await this.checkEmailOpened(execution.id, conditions.email_opened.step)
      conditionMet = conditionMet && emailOpened
    }

    if (conditions.no_service_booked) {
      // Check if customer has booked a service
      const serviceBooked = await this.checkServiceBooked(execution.customer_identifier)
      conditionMet = conditionMet && !serviceBooked
    }

    return { 
      success: true, 
      conditionMet, 
      action: 'condition_evaluated',
      skipNextStep: !conditionMet
    }
  }

  // Execute segment update step
  async executeSegmentUpdateStep(execution, step) {
    // Update customer segment based on step configuration
    // This would integrate with CustomerSegmentationEngine
    return { success: true, action: 'segment_updated' }
  }

  // Advance workflow execution to next step
  async advanceWorkflowExecution(executionId, stepResult) {
    const nextStepIndex = stepResult.skipNextStep ? 'skip' : 'advance'
    const nextActionAt = stepResult.nextActionAt || new Date().toISOString()

    if (nextStepIndex === 'skip') {
      // Skip to step after next
      await this.db.prepare(`
        UPDATE workflow_executions 
        SET current_step_index = current_step_index + 2,
            last_action_at = datetime('now'),
            next_action_at = ?
        WHERE id = ?
      `).bind(nextActionAt, executionId).run()
    } else {
      // Advance to next step
      await this.db.prepare(`
        UPDATE workflow_executions 
        SET current_step_index = current_step_index + 1,
            last_action_at = datetime('now'),
            next_action_at = ?
        WHERE id = ?
      `).bind(nextActionAt, executionId).run()
    }

    // Update step history
    await this.updateStepHistory(executionId, stepResult)
  }

  // Complete workflow execution
  async completeWorkflowExecution(executionId) {
    await this.db.prepare(`
      UPDATE workflow_executions 
      SET execution_status = 'completed', 
          completed_at = datetime('now'),
          last_action_at = datetime('now')
      WHERE id = ?
    `).bind(executionId).run()

    // Update workflow completion statistics
    const execution = await this.db.prepare(`
      SELECT workflow_id FROM workflow_executions WHERE id = ?
    `).bind(executionId).first()

    if (execution) {
      await this.db.prepare(`
        UPDATE marketing_automation_workflows 
        SET total_completed = total_completed + 1
        WHERE id = ?
      `).bind(execution.workflow_id).run()
    }
  }

  // Handle step failure
  async handleStepFailure(executionId, stepResult) {
    await this.db.prepare(`
      UPDATE workflow_executions 
      SET execution_status = 'failed',
          last_action_at = datetime('now')
      WHERE id = ?
    `).bind(executionId).run()
  }

  // Get customer data for workflow personalization
  async getCustomerDataForWorkflow(customerIdentifier) {
    // Get basic customer info
    const customer = await this.db.prepare(`
      SELECT * FROM email_subscribers 
      WHERE email = ? OR phone = ?
      ORDER BY subscribed_at DESC LIMIT 1
    `).bind(customerIdentifier, customerIdentifier).first()

    // Get customer segments
    const segments = await this.db.prepare(`
      SELECT cs.segment_name, csa.assigned_at
      FROM customer_segment_assignments csa
      JOIN customer_segments cs ON csa.segment_id = cs.id
      WHERE csa.customer_identifier = ? AND csa.is_active = 1
    `).bind(customerIdentifier).all()

    // Get recent behavior
    const recentBehavior = await this.db.prepare(`
      SELECT behavior_type, behavior_category, timestamp
      FROM customer_behavioral_data 
      WHERE customer_identifier = ?
        AND timestamp >= date('now', '-30 days')
      ORDER BY timestamp DESC LIMIT 10
    `).bind(customerIdentifier).all()

    return {
      customer: customer || {},
      segments: segments.results || segments,
      recentBehavior: recentBehavior.results || recentBehavior
    }
  }

  // Generate personalization data
  generatePersonalizationData(customerData, contextData) {
    return {
      customer_name: customerData.customer?.name || 'Değerli Müşteri',
      customer_email: customerData.customer?.email || '',
      customer_segments: customerData.segments?.map(s => s.segment_name) || [],
      service_interest: contextData.service_type || 'genel hizmet',
      ...contextData
    }
  }

  // Apply personalization to content
  applyPersonalization(content, personalizationData) {
    let personalizedContent = content
    
    Object.entries(personalizationData).forEach(([key, value]) => {
      const placeholder = `{{${key}}}`
      personalizedContent = personalizedContent.replace(new RegExp(placeholder, 'g'), value)
    })
    
    return personalizedContent
  }

  // Helper methods for condition checking
  async checkEmailOpened(executionId, stepIndex) {
    const opened = await this.db.prepare(`
      SELECT id FROM email_campaign_performance 
      WHERE workflow_execution_id = ? AND opened_at IS NOT NULL
    `).bind(executionId).first()
    
    return !!opened
  }

  async checkServiceBooked(customerIdentifier) {
    const service = await this.db.prepare(`
      SELECT id FROM hizmet_talepleri 
      WHERE (musteri_email = ? OR musteri_telefon = ?)
        AND created_at >= date('now', '-30 days')
    `).bind(customerIdentifier, customerIdentifier).first()
    
    return !!service
  }

  // Update step history
  async updateStepHistory(executionId, stepResult) {
    const execution = await this.db.prepare(`
      SELECT step_history FROM workflow_executions WHERE id = ?
    `).bind(executionId).first()
    
    const stepHistory = JSON.parse(execution?.step_history || '[]')
    stepHistory.push({
      timestamp: new Date().toISOString(),
      ...stepResult
    })
    
    await this.db.prepare(`
      UPDATE workflow_executions 
      SET step_history = ?
      WHERE id = ?
    `).bind(JSON.stringify(stepHistory), executionId).run()
  }

  // Get workflow analytics
  async getWorkflowAnalytics(workflowId = null, days = 30) {
    let whereClause = ''
    const params = [days]
    
    if (workflowId) {
      whereClause = 'AND w.id = ?'
      params.push(workflowId)
    }

    return await this.db.prepare(`
      SELECT 
        w.id,
        w.workflow_name,
        COUNT(DISTINCT we.id) as total_executions,
        COUNT(DISTINCT CASE WHEN we.execution_status = 'completed' THEN we.id END) as completed_executions,
        COUNT(DISTINCT CASE WHEN we.execution_status = 'active' THEN we.id END) as active_executions,
        COUNT(DISTINCT ecp.id) as total_emails_sent,
        COUNT(DISTINCT CASE WHEN ecp.opened_at IS NOT NULL THEN ecp.id END) as emails_opened,
        COUNT(DISTINCT CASE WHEN ecp.clicked_at IS NOT NULL THEN ecp.id END) as emails_clicked,
        AVG(was.conversion_rate) as avg_conversion_rate
      FROM marketing_automation_workflows w
      LEFT JOIN workflow_executions we ON w.id = we.workflow_id 
        AND we.started_at >= date('now', '-? days')
      LEFT JOIN email_campaign_performance ecp ON we.id = ecp.workflow_execution_id
      LEFT JOIN workflow_analytics_summary was ON w.id = was.workflow_id
        AND was.analytics_date >= date('now', '-? days')
      WHERE w.is_active = 1 ${whereClause}
      GROUP BY w.id
      ORDER BY total_executions DESC
    `).bind(days, days, ...params.slice(1)).all()
  }

  // Process workflow triggers (should be called periodically)
  async processWorkflowTriggers() {
    // This method would check for trigger conditions and start workflows
    // Implementation would depend on specific trigger types
    console.log('Processing workflow triggers...')
  }
}

// Marketing Automation API Endpoints
app.get('/api/marketing-automation/workflows', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const automationEngine = new MarketingAutomationEngine(DB)
    const workflows = await automationEngine.getWorkflows()
    
    return c.json({
      success: true,
      workflows: workflows.results || workflows
    })
  } catch (error) {
    console.error('Get workflows error:', error)
    return c.json({ error: 'Workflow listesi alınamadı' }, 500)
  }
})

app.get('/api/marketing-automation/workflows/:id', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  const workflowId = c.req.param('id')
  
  try {
    const automationEngine = new MarketingAutomationEngine(DB)
    const workflowDetails = await automationEngine.getWorkflowDetails(workflowId)
    
    if (!workflowDetails) {
      return c.json({ error: 'Workflow bulunamadı' }, 404)
    }
    
    return c.json({
      success: true,
      ...workflowDetails
    })
  } catch (error) {
    console.error('Get workflow details error:', error)
    return c.json({ error: 'Workflow detayları alınamadı' }, 500)
  }
})

app.post('/api/marketing-automation/trigger-workflow', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const { workflow_id, customer_identifier, context_data } = await c.req.json()
    
    const automationEngine = new MarketingAutomationEngine(DB)
    const result = await automationEngine.triggerWorkflow(
      workflow_id, customer_identifier, 'manual', context_data || {}
    )
    
    return c.json(result)
  } catch (error) {
    console.error('Trigger workflow error:', error)
    return c.json({ error: 'Workflow tetikleme hatası' }, 500)
  }
})

app.post('/api/marketing-automation/execute-pending', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const limit = parseInt(c.req.query('limit')) || 100
    
    const automationEngine = new MarketingAutomationEngine(DB)
    const result = await automationEngine.executePendingActions(limit)
    
    return c.json(result)
  } catch (error) {
    console.error('Execute pending actions error:', error)
    return c.json({ error: 'Bekleyen aksiyonlar çalıştırılamadı' }, 500)
  }
})

app.get('/api/marketing-automation/analytics', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const workflowId = c.req.query('workflow_id')
    const days = parseInt(c.req.query('days')) || 30
    
    const automationEngine = new MarketingAutomationEngine(DB)
    const analytics = await automationEngine.getWorkflowAnalytics(workflowId, days)
    
    return c.json({
      success: true,
      analytics: analytics.results || analytics
    })
  } catch (error) {
    console.error('Workflow analytics error:', error)
    return c.json({ error: 'Workflow analytics alınamadı' }, 500)
  }
})

// Customer Segmentation Admin Dashboard
app.get('/admin/customer-segmentation-dashboard', requireAdminAuth(), async (c) => {
  return c.html(`
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Customer Segmentation Dashboard - GARANTOR360</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    </head>
    <body class="bg-gray-100">
        <div class="min-h-screen">
            <!-- Header -->
            <div class="bg-white shadow-sm border-b">
                <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div class="flex justify-between h-16">
                        <div class="flex items-center">
                            <i class="fas fa-users-cog text-blue-600 text-xl mr-2"></i>
                            <h1 class="text-xl font-semibold text-gray-900">Customer Segmentation Dashboard</h1>
                        </div>
                        <div class="flex items-center space-x-4">
                            <button onclick="runBulkSegmentation()" class="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700">
                                <i class="fas fa-magic mr-2"></i>Bulk Segmentation
                            </button>
                            <button onclick="refreshDashboard()" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">
                                <i class="fas fa-sync mr-2"></i>Refresh
                            </button>
                            <a href="/admin" class="text-gray-600 hover:text-gray-900">
                                <i class="fas fa-arrow-left mr-2"></i>Back
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
                
                <!-- Stats Overview -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-blue-100">
                                <i class="fas fa-layer-group text-blue-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600">Total Segments</p>
                                <p class="text-2xl font-semibold text-gray-900" id="total-segments">-</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-green-100">
                                <i class="fas fa-users text-green-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600">Segmented Customers</p>
                                <p class="text-2xl font-semibold text-gray-900" id="segmented-customers">-</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-yellow-100">
                                <i class="fas fa-star text-yellow-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600">VIP Customers</p>
                                <p class="text-2xl font-semibold text-gray-900" id="vip-customers">-</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-purple-100">
                                <i class="fas fa-chart-line text-purple-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600">Avg Engagement</p>
                                <p class="text-2xl font-semibold text-gray-900" id="avg-engagement">-</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Charts Section -->
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                    <!-- Segment Distribution Chart -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">Segment Distribution</h3>
                        <canvas id="segmentChart" width="400" height="300"></canvas>
                    </div>

                    <!-- Engagement Trends -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">Engagement Trends</h3>
                        <canvas id="engagementChart" width="400" height="300"></canvas>
                    </div>
                </div>

                <!-- Segments Table -->
                <div class="bg-white rounded-lg shadow">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex justify-between items-center">
                            <h3 class="text-lg font-medium text-gray-900">Customer Segments</h3>
                            <div class="flex space-x-2">
                                <select id="segment-filter" class="rounded-md border-gray-300 text-sm">
                                    <option value="">All Segments</option>
                                    <option value="vip">VIP Only</option>
                                    <option value="active">Active Only</option>
                                    <option value="at-risk">At-Risk Only</option>
                                </select>
                                <button onclick="exportSegments()" class="bg-gray-600 text-white px-3 py-2 rounded-md text-sm hover:bg-gray-700">
                                    <i class="fas fa-download"></i> Export
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Segment
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Customers
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Performance
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Priority
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Status
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Actions
                                    </th>
                                </tr>
                            </thead>
                            <tbody id="segments-table" class="bg-white divide-y divide-gray-200">
                                <!-- Segments will be populated here -->
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Customer Assignment Modal -->
                <div id="assignmentModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
                    <div class="flex items-center justify-center min-h-screen p-4">
                        <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
                            <div class="p-6">
                                <h3 class="text-lg font-medium text-gray-900 mb-4">Assign Customer to Segment</h3>
                                <div class="space-y-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Customer Identifier</label>
                                        <input type="text" id="customerIdentifier" placeholder="Email or phone" 
                                               class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Segment</label>
                                        <select id="assignmentSegment" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                                            <option value="">Select Segment</option>
                                        </select>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Reason</label>
                                        <textarea id="assignmentReason" rows="3" placeholder="Assignment reason..."
                                                  class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"></textarea>
                                    </div>
                                </div>
                                <div class="mt-6 flex justify-end space-x-3">
                                    <button onclick="closeAssignmentModal()" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200">
                                        Cancel
                                    </button>
                                    <button onclick="assignCustomer()" class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700">
                                        Assign
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script>
            let segmentChart, engagementChart;
            let allSegments = [];

            // Initialize dashboard
            document.addEventListener('DOMContentLoaded', function() {
                loadDashboard();
            });

            async function loadDashboard() {
                try {
                    await loadSegments();
                    await loadAnalytics();
                    updateCharts();
                } catch (error) {
                    console.error('Dashboard loading error:', error);
                    showNotification('Dashboard loading failed', 'error');
                }
            }

            async function loadSegments() {
                try {
                    const response = await fetch('/api/customer-segmentation/segments', {
                        headers: { 'Authorization': \`Bearer \${getAdminToken()}\` }
                    });
                    
                    if (response.ok) {
                        const data = await response.json();
                        allSegments = data.segments || [];
                        updateSegmentsTable(allSegments);
                        updateSegmentSelector(allSegments);
                        
                        // Update stats
                        document.getElementById('total-segments').textContent = allSegments.length;
                        const totalCustomers = allSegments.reduce((sum, seg) => sum + (seg.customer_count || 0), 0);
                        document.getElementById('segmented-customers').textContent = totalCustomers;
                        
                        const vipSegment = allSegments.find(seg => seg.segment_name === 'VIP Customers');
                        document.getElementById('vip-customers').textContent = vipSegment ? vipSegment.customer_count : 0;
                    }
                } catch (error) {
                    console.error('Load segments error:', error);
                }
            }

            async function loadAnalytics() {
                try {
                    const response = await fetch('/api/customer-segmentation/analytics', {
                        headers: { 'Authorization': \`Bearer \${getAdminToken()}\` }
                    });
                    
                    if (response.ok) {
                        const data = await response.json();
                        const analytics = data.analytics || [];
                        
                        // Calculate average engagement
                        const avgEngagement = analytics.reduce((sum, a) => sum + (a.avg_engagement_score || 0), 0) / analytics.length || 0;
                        document.getElementById('avg-engagement').textContent = \`\${(avgEngagement * 100).toFixed(1)}%\`;
                    }
                } catch (error) {
                    console.error('Load analytics error:', error);
                }
            }

            function updateSegmentsTable(segments) {
                const tbody = document.getElementById('segments-table');
                tbody.innerHTML = '';
                
                segments.forEach(segment => {
                    const row = tbody.insertRow();
                    row.innerHTML = \`
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="w-4 h-4 rounded-full mr-3" style="background-color: \${segment.segment_color}"></div>
                                <div>
                                    <div class="text-sm font-medium text-gray-900">\${segment.segment_name}</div>
                                    <div class="text-sm text-gray-500">\${segment.segment_description || 'No description'}</div>
                                </div>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm text-gray-900">\${segment.customer_count || 0}</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="w-16 bg-gray-200 rounded-full h-2 mr-2">
                                    <div class="bg-blue-600 h-2 rounded-full" style="width: \${(segment.avg_performance || 0) * 100}%"></div>
                                </div>
                                <span class="text-sm text-gray-600">\${((segment.avg_performance || 0) * 100).toFixed(0)}%</span>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \${
                                segment.priority_score >= 90 ? 'bg-red-100 text-red-800' :
                                segment.priority_score >= 80 ? 'bg-yellow-100 text-yellow-800' :
                                'bg-green-100 text-green-800'
                            }">
                                \${segment.priority_score}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \${
                                segment.is_active ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'
                            }">
                                \${segment.is_active ? 'Active' : 'Inactive'}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                            <button onclick="viewSegment(\${segment.id})" class="text-blue-600 hover:text-blue-900 mr-3">
                                <i class="fas fa-eye"></i>
                            </button>
                            <button onclick="showAssignmentModal(\${segment.id})" class="text-green-600 hover:text-green-900 mr-3">
                                <i class="fas fa-user-plus"></i>
                            </button>
                            <button onclick="analyzeSegment(\${segment.id})" class="text-purple-600 hover:text-purple-900">
                                <i class="fas fa-chart-bar"></i>
                            </button>
                        </td>
                    \`;
                });
            }

            function updateSegmentSelector(segments) {
                const selector = document.getElementById('assignmentSegment');
                selector.innerHTML = '<option value="">Select Segment</option>';
                
                segments.forEach(segment => {
                    const option = document.createElement('option');
                    option.value = segment.id;
                    option.textContent = segment.segment_name;
                    selector.appendChild(option);
                });
            }

            function updateCharts() {
                updateSegmentChart();
                updateEngagementChart();
            }

            function updateSegmentChart() {
                const ctx = document.getElementById('segmentChart').getContext('2d');
                
                if (segmentChart) {
                    segmentChart.destroy();
                }
                
                const labels = allSegments.map(s => s.segment_name);
                const data = allSegments.map(s => s.customer_count || 0);
                const colors = allSegments.map(s => s.segment_color || '#3B82F6');
                
                segmentChart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: labels,
                        datasets: [{
                            data: data,
                            backgroundColor: colors,
                            borderWidth: 2,
                            borderColor: '#fff'
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    usePointStyle: true,
                                    padding: 15
                                }
                            }
                        }
                    }
                });
            }

            function updateEngagementChart() {
                const ctx = document.getElementById('engagementChart').getContext('2d');
                
                if (engagementChart) {
                    engagementChart.destroy();
                }
                
                // Mock engagement trend data
                const labels = ['Week 1', 'Week 2', 'Week 3', 'Week 4'];
                const vipData = [85, 87, 89, 92];
                const regularData = [65, 68, 70, 72];
                const atRiskData = [25, 22, 28, 30];
                
                engagementChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: labels,
                        datasets: [
                            {
                                label: 'VIP Customers',
                                data: vipData,
                                borderColor: '#FFD700',
                                backgroundColor: 'rgba(255, 215, 0, 0.1)',
                                tension: 0.3
                            },
                            {
                                label: 'Regular Customers',
                                data: regularData,
                                borderColor: '#4CAF50',
                                backgroundColor: 'rgba(76, 175, 80, 0.1)',
                                tension: 0.3
                            },
                            {
                                label: 'At-Risk Customers',
                                data: atRiskData,
                                borderColor: '#FF9800',
                                backgroundColor: 'rgba(255, 152, 0, 0.1)',
                                tension: 0.3
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 100,
                                ticks: {
                                    callback: function(value) {
                                        return value + '%';
                                    }
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                position: 'bottom'
                            }
                        }
                    }
                });
            }

            function showAssignmentModal(segmentId = null) {
                if (segmentId) {
                    document.getElementById('assignmentSegment').value = segmentId;
                }
                document.getElementById('assignmentModal').classList.remove('hidden');
            }

            function closeAssignmentModal() {
                document.getElementById('assignmentModal').classList.add('hidden');
                document.getElementById('customerIdentifier').value = '';
                document.getElementById('assignmentSegment').value = '';
                document.getElementById('assignmentReason').value = '';
            }

            async function assignCustomer() {
                const customerIdentifier = document.getElementById('customerIdentifier').value;
                const segmentId = document.getElementById('assignmentSegment').value;
                const reason = document.getElementById('assignmentReason').value;

                if (!customerIdentifier || !segmentId) {
                    showNotification('Please fill in all required fields', 'error');
                    return;
                }

                try {
                    const response = await fetch('/api/customer-segmentation/assign', {
                        method: 'POST',
                        headers: {
                            'Authorization': \`Bearer \${getAdminToken()}\`,
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            customer_identifier: customerIdentifier,
                            segment_id: parseInt(segmentId),
                            reason: reason
                        })
                    });

                    const result = await response.json();
                    if (result.success) {
                        showNotification('Customer assigned successfully', 'success');
                        closeAssignmentModal();
                        loadDashboard();
                    } else {
                        showNotification(result.message || 'Assignment failed', 'error');
                    }
                } catch (error) {
                    console.error('Assignment error:', error);
                    showNotification('Assignment failed', 'error');
                }
            }

            async function runBulkSegmentation() {
                // This would run automatic segmentation for all customers
                showNotification('Bulk segmentation started. This may take a while...', 'info');
                
                // Here you would call an endpoint that processes all customers
                // For now, just show a success message
                setTimeout(() => {
                    showNotification('Bulk segmentation completed!', 'success');
                    loadDashboard();
                }, 3000);
            }

            function refreshDashboard() {
                loadDashboard();
                showNotification('Dashboard refreshed', 'success');
            }

            function viewSegment(segmentId) {
                window.open(\`/api/customer-segmentation/segments/\${segmentId}\`, '_blank');
            }

            function analyzeSegment(segmentId) {
                // Open detailed analytics for this segment
                alert(\`Analyze segment: \${segmentId}\`);
            }

            function exportSegments() {
                // Export segment data
                alert('Export functionality would be implemented here');
            }

            function getAdminToken() {
                return localStorage.getItem('admin_token') || 'test-token-123';
            }

            function showNotification(message, type = 'info') {
                // Simple notification - in production use a proper notification library
                console.log(\`[\${type.toUpperCase()}] \${message}\`);
                
                const notification = document.createElement('div');
                notification.className = \`fixed top-4 right-4 p-4 rounded-md shadow-lg z-50 \${
                    type === 'error' ? 'bg-red-500 text-white' :
                    type === 'success' ? 'bg-green-500 text-white' :
                    type === 'warning' ? 'bg-yellow-500 text-white' :
                    'bg-blue-500 text-white'
                }\`;
                notification.textContent = message;
                
                document.body.appendChild(notification);
                
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 3000);
            }
        </script>
    </body>
    </html>
  `)
})

// Marketing Automation Admin Dashboard
app.get('/admin/marketing-automation-dashboard', requireAdminAuth(), async (c) => {
  return c.html(`
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Marketing Automation Dashboard - GARANTOR360</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    </head>
    <body class="bg-gray-100">
        <div class="min-h-screen">
            <!-- Header -->
            <div class="bg-white shadow-sm border-b">
                <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div class="flex justify-between h-16">
                        <div class="flex items-center">
                            <i class="fas fa-magic text-purple-600 text-xl mr-2"></i>
                            <h1 class="text-xl font-semibold text-gray-900">Marketing Automation Dashboard</h1>
                        </div>
                        <div class="flex items-center space-x-4">
                            <button onclick="executePendingActions()" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700">
                                <i class="fas fa-play mr-2"></i>Execute Pending
                            </button>
                            <button onclick="showTriggerModal()" class="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700">
                                <i class="fas fa-rocket mr-2"></i>Trigger Workflow
                            </button>
                            <button onclick="refreshDashboard()" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">
                                <i class="fas fa-sync mr-2"></i>Refresh
                            </button>
                            <a href="/admin" class="text-gray-600 hover:text-gray-900">
                                <i class="fas fa-arrow-left mr-2"></i>Back
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
                
                <!-- Stats Overview -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-purple-100">
                                <i class="fas fa-sitemap text-purple-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600">Active Workflows</p>
                                <p class="text-2xl font-semibold text-gray-900" id="active-workflows">-</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-blue-100">
                                <i class="fas fa-running text-blue-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600">Active Executions</p>
                                <p class="text-2xl font-semibold text-gray-900" id="active-executions">-</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-green-100">
                                <i class="fas fa-check-circle text-green-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600">Completed Today</p>
                                <p class="text-2xl font-semibold text-gray-900" id="completed-today">-</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-yellow-100">
                                <i class="fas fa-percentage text-yellow-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600">Avg Conversion</p>
                                <p class="text-2xl font-semibold text-gray-900" id="avg-conversion">-</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Charts Section -->
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                    <!-- Workflow Performance Chart -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">Workflow Performance</h3>
                        <canvas id="performanceChart" width="400" height="300"></canvas>
                    </div>

                    <!-- Execution Status Chart -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">Execution Status</h3>
                        <canvas id="statusChart" width="400" height="300"></canvas>
                    </div>
                </div>

                <!-- Workflows Table -->
                <div class="bg-white rounded-lg shadow">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex justify-between items-center">
                            <h3 class="text-lg font-medium text-gray-900">Marketing Workflows</h3>
                            <div class="flex space-x-2">
                                <select id="workflow-filter" class="rounded-md border-gray-300 text-sm">
                                    <option value="">All Workflows</option>
                                    <option value="lifecycle">Lifecycle</option>
                                    <option value="behavioral_trigger">Behavioral</option>
                                    <option value="event_based">Event-based</option>
                                </select>
                                <button onclick="exportWorkflows()" class="bg-gray-600 text-white px-3 py-2 rounded-md text-sm hover:bg-gray-700">
                                    <i class="fas fa-download"></i> Export
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Workflow
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Type
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Active Executions
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Completion Rate
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Priority
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Status
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Actions
                                    </th>
                                </tr>
                            </thead>
                            <tbody id="workflows-table" class="bg-white divide-y divide-gray-200">
                                <!-- Workflows will be populated here -->
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Trigger Workflow Modal -->
                <div id="triggerModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
                    <div class="flex items-center justify-center min-h-screen p-4">
                        <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
                            <div class="p-6">
                                <h3 class="text-lg font-medium text-gray-900 mb-4">Trigger Marketing Workflow</h3>
                                <div class="space-y-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Workflow</label>
                                        <select id="triggerWorkflow" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring-purple-500">
                                            <option value="">Select Workflow</option>
                                        </select>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Customer Identifier</label>
                                        <input type="text" id="triggerCustomer" placeholder="Email or phone" 
                                               class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring-purple-500">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Context Data (JSON)</label>
                                        <textarea id="triggerContext" rows="3" placeholder='{"service_type": "kombi", "source": "manual"}'
                                                  class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring-purple-500"></textarea>
                                    </div>
                                </div>
                                <div class="mt-6 flex justify-end space-x-3">
                                    <button onclick="closeTriggerModal()" class="px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200">
                                        Cancel
                                    </button>
                                    <button onclick="triggerWorkflow()" class="px-4 py-2 text-sm font-medium text-white bg-purple-600 rounded-md hover:bg-purple-700">
                                        Trigger
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script>
            let performanceChart, statusChart;
            let allWorkflows = [];

            // Initialize dashboard
            document.addEventListener('DOMContentLoaded', function() {
                loadDashboard();
            });

            async function loadDashboard() {
                try {
                    await loadWorkflows();
                    await loadAnalytics();
                    updateCharts();
                } catch (error) {
                    console.error('Dashboard loading error:', error);
                    showNotification('Dashboard loading failed', 'error');
                }
            }

            async function loadWorkflows() {
                try {
                    const response = await fetch('/api/marketing-automation/workflows', {
                        headers: { 'Authorization': \`Bearer \${getAdminToken()}\` }
                    });
                    
                    if (response.ok) {
                        const data = await response.json();
                        allWorkflows = data.workflows || [];
                        updateWorkflowsTable(allWorkflows);
                        updateWorkflowSelector(allWorkflows);
                        
                        // Update stats
                        const activeWorkflows = allWorkflows.filter(w => w.is_active && !w.is_paused).length;
                        document.getElementById('active-workflows').textContent = activeWorkflows;
                        
                        const totalActiveExecs = allWorkflows.reduce((sum, w) => sum + (w.active_executions || 0), 0);
                        document.getElementById('active-executions').textContent = totalActiveExecs;
                        
                        const totalCompleted = allWorkflows.reduce((sum, w) => sum + (w.completed_executions || 0), 0);
                        document.getElementById('completed-today').textContent = totalCompleted;
                    }
                } catch (error) {
                    console.error('Load workflows error:', error);
                }
            }

            async function loadAnalytics() {
                try {
                    const response = await fetch('/api/marketing-automation/analytics', {
                        headers: { 'Authorization': \`Bearer \${getAdminToken()}\` }
                    });
                    
                    if (response.ok) {
                        const data = await response.json();
                        const analytics = data.analytics || [];
                        
                        // Calculate average conversion rate
                        const avgConversion = analytics.reduce((sum, a) => sum + (a.avg_conversion_rate || 0), 0) / analytics.length || 0;
                        document.getElementById('avg-conversion').textContent = \`\${(avgConversion * 100).toFixed(1)}%\`;
                    }
                } catch (error) {
                    console.error('Load analytics error:', error);
                }
            }

            function updateWorkflowsTable(workflows) {
                const tbody = document.getElementById('workflows-table');
                tbody.innerHTML = '';
                
                workflows.forEach(workflow => {
                    const completionRate = workflow.total_triggered > 0 
                        ? ((workflow.completed_executions || 0) / workflow.total_triggered * 100) 
                        : 0;
                    
                    const row = tbody.insertRow();
                    row.innerHTML = \`
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div>
                                <div class="text-sm font-medium text-gray-900">\${workflow.workflow_name}</div>
                                <div class="text-sm text-gray-500">\${workflow.workflow_description || 'No description'}</div>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                \${workflow.workflow_type}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="text-sm text-gray-900">\${workflow.active_executions || 0}</div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="w-16 bg-gray-200 rounded-full h-2 mr-2">
                                    <div class="bg-green-600 h-2 rounded-full" style="width: \${completionRate}%"></div>
                                </div>
                                <span class="text-sm text-gray-600">\${completionRate.toFixed(0)}%</span>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \${
                                workflow.priority_level >= 80 ? 'bg-red-100 text-red-800' :
                                workflow.priority_level >= 50 ? 'bg-yellow-100 text-yellow-800' :
                                'bg-green-100 text-green-800'
                            }">
                                \${workflow.priority_level}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium \${
                                workflow.is_active && !workflow.is_paused ? 'bg-green-100 text-green-800' : 
                                workflow.is_paused ? 'bg-yellow-100 text-yellow-800' :
                                'bg-gray-100 text-gray-800'
                            }">
                                \${workflow.is_active && !workflow.is_paused ? 'Active' : 
                                  workflow.is_paused ? 'Paused' : 'Inactive'}
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                            <button onclick="viewWorkflow(\${workflow.id})" class="text-blue-600 hover:text-blue-900 mr-3">
                                <i class="fas fa-eye"></i>
                            </button>
                            <button onclick="showTriggerModal(\${workflow.id})" class="text-purple-600 hover:text-purple-900 mr-3">
                                <i class="fas fa-rocket"></i>
                            </button>
                            <button onclick="analyzeWorkflow(\${workflow.id})" class="text-green-600 hover:text-green-900">
                                <i class="fas fa-chart-line"></i>
                            </button>
                        </td>
                    \`;
                });
            }

            function updateWorkflowSelector(workflows) {
                const selector = document.getElementById('triggerWorkflow');
                selector.innerHTML = '<option value="">Select Workflow</option>';
                
                workflows.forEach(workflow => {
                    if (workflow.is_active && !workflow.is_paused) {
                        const option = document.createElement('option');
                        option.value = workflow.id;
                        option.textContent = workflow.workflow_name;
                        selector.appendChild(option);
                    }
                });
            }

            function updateCharts() {
                updatePerformanceChart();
                updateStatusChart();
            }

            function updatePerformanceChart() {
                const ctx = document.getElementById('performanceChart').getContext('2d');
                
                if (performanceChart) {
                    performanceChart.destroy();
                }
                
                const labels = allWorkflows.map(w => w.workflow_name.substring(0, 20));
                const executionData = allWorkflows.map(w => w.total_triggered || 0);
                const completionData = allWorkflows.map(w => w.completed_executions || 0);
                
                performanceChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: labels,
                        datasets: [
                            {
                                label: 'Total Triggered',
                                data: executionData,
                                backgroundColor: 'rgba(147, 51, 234, 0.6)',
                                borderColor: 'rgba(147, 51, 234, 1)',
                                borderWidth: 1
                            },
                            {
                                label: 'Completed',
                                data: completionData,
                                backgroundColor: 'rgba(34, 197, 94, 0.6)',
                                borderColor: 'rgba(34, 197, 94, 1)',
                                borderWidth: 1
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'bottom'
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            }

            function updateStatusChart() {
                const ctx = document.getElementById('statusChart').getContext('2d');
                
                if (statusChart) {
                    statusChart.destroy();
                }
                
                // Calculate status distribution
                let activeCount = 0, pausedCount = 0, inactiveCount = 0;
                allWorkflows.forEach(w => {
                    if (w.is_active && !w.is_paused) activeCount++;
                    else if (w.is_paused) pausedCount++;
                    else inactiveCount++;
                });
                
                statusChart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Active', 'Paused', 'Inactive'],
                        datasets: [{
                            data: [activeCount, pausedCount, inactiveCount],
                            backgroundColor: [
                                '#10B981', // Green
                                '#F59E0B', // Yellow
                                '#6B7280'  // Gray
                            ],
                            borderWidth: 2,
                            borderColor: '#fff'
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'bottom'
                            }
                        }
                    }
                });
            }

            function showTriggerModal(workflowId = null) {
                if (workflowId) {
                    document.getElementById('triggerWorkflow').value = workflowId;
                }
                document.getElementById('triggerModal').classList.remove('hidden');
            }

            function closeTriggerModal() {
                document.getElementById('triggerModal').classList.add('hidden');
                document.getElementById('triggerWorkflow').value = '';
                document.getElementById('triggerCustomer').value = '';
                document.getElementById('triggerContext').value = '';
            }

            async function triggerWorkflow() {
                const workflowId = document.getElementById('triggerWorkflow').value;
                const customerIdentifier = document.getElementById('triggerCustomer').value;
                const contextText = document.getElementById('triggerContext').value;

                if (!workflowId || !customerIdentifier) {
                    showNotification('Please select workflow and enter customer identifier', 'error');
                    return;
                }

                let contextData = {};
                if (contextText) {
                    try {
                        contextData = JSON.parse(contextText);
                    } catch (e) {
                        showNotification('Invalid JSON in context data', 'error');
                        return;
                    }
                }

                try {
                    const response = await fetch('/api/marketing-automation/trigger-workflow', {
                        method: 'POST',
                        headers: {
                            'Authorization': \`Bearer \${getAdminToken()}\`,
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            workflow_id: parseInt(workflowId),
                            customer_identifier: customerIdentifier,
                            context_data: contextData
                        })
                    });

                    const result = await response.json();
                    if (result.success) {
                        showNotification('Workflow triggered successfully', 'success');
                        closeTriggerModal();
                        loadDashboard();
                    } else {
                        showNotification(result.message || 'Workflow trigger failed', 'error');
                    }
                } catch (error) {
                    console.error('Trigger workflow error:', error);
                    showNotification('Workflow trigger failed', 'error');
                }
            }

            async function executePendingActions() {
                showNotification('Executing pending workflow actions...', 'info');
                
                try {
                    const response = await fetch('/api/marketing-automation/execute-pending', {
                        method: 'POST',
                        headers: {
                            'Authorization': \`Bearer \${getAdminToken()}\`,
                            'Content-Type': 'application/json'
                        }
                    });

                    const result = await response.json();
                    if (result.success) {
                        showNotification(\`Processed \${result.processed} actions successfully\`, 'success');
                        loadDashboard();
                    } else {
                        showNotification('Failed to execute pending actions', 'error');
                    }
                } catch (error) {
                    console.error('Execute pending error:', error);
                    showNotification('Failed to execute pending actions', 'error');
                }
            }

            function refreshDashboard() {
                loadDashboard();
                showNotification('Dashboard refreshed', 'success');
            }

            function viewWorkflow(workflowId) {
                window.open(\`/api/marketing-automation/workflows/\${workflowId}\`, '_blank');
            }

            function analyzeWorkflow(workflowId) {
                // Open detailed analytics for this workflow
                alert(\`Analyze workflow: \${workflowId}\`);
            }

            function exportWorkflows() {
                // Export workflow data
                alert('Export functionality would be implemented here');
            }

            function getAdminToken() {
                return localStorage.getItem('admin_token') || 'test-token-123';
            }

            function showNotification(message, type = 'info') {
                console.log(\`[\${type.toUpperCase()}] \${message}\`);
                
                const notification = document.createElement('div');
                notification.className = \`fixed top-4 right-4 p-4 rounded-md shadow-lg z-50 \${
                    type === 'error' ? 'bg-red-500 text-white' :
                    type === 'success' ? 'bg-green-500 text-white' :
                    type === 'warning' ? 'bg-yellow-500 text-white' :
                    'bg-blue-500 text-white'
                }\`;
                notification.textContent = message;
                
                document.body.appendChild(notification);
                
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 3000);
            }
        </script>
    </body>
    </html>
  `)
})

// ====================================
// KVKV COOKIE CONSENT DASHBOARD
// ====================================

// Real-time Analytics Dashboard (Demo version - no auth for testing)
app.get('/demo/realtime-analytics', async (c) => {
  return c.html(`
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Real-time Analytics Dashboard - GARANTOR360 DEMO</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <style>
            .animate-fade-in {
                animation: fadeIn 0.5s ease-in-out;
            }
            
            @keyframes fadeIn {
                from { opacity: 0; transform: translateY(-10px); }
                to { opacity: 1; transform: translateY(0); }
            }
            
            .card-hover:hover {
                transform: translateY(-2px);
                transition: all 0.3s ease;
            }
            
            .pulse-dot {
                animation: pulse 2s infinite;
            }
            
            @keyframes pulse {
                0%, 100% { opacity: 1; }
                50% { opacity: 0.5; }
            }
            
            .gradient-bg {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            }
            
            .animate-number {
                transition: all 0.3s ease;
            }
            
            .shadow-glow {
                box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
            }
        </style>
    </head>
    <body class="bg-gray-100">
        <!-- Demo Banner -->
        <div class="bg-gradient-to-r from-blue-600 to-purple-600 text-white p-3 text-center">
            <i class="fas fa-flask mr-2"></i>
            <strong>DEMO VERSION</strong> - Real-time Analytics Dashboard Preview
        </div>
        
        <div class="min-h-screen">
            <!-- Header -->
            <div class="bg-white shadow-sm border-b">
                <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div class="flex justify-between h-16">
                        <div class="flex items-center">
                            <i class="fas fa-chart-line text-blue-600 text-xl mr-2"></i>
                            <h1 class="text-xl font-semibold text-gray-900">Real-time Analytics Dashboard</h1>
                            <div class="ml-4 flex items-center">
                                <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse mr-2"></div>
                                <span class="text-sm text-gray-600">Live Demo</span>
                            </div>
                        </div>
                        <div class="flex items-center space-x-4">
                            <div class="bg-yellow-100 text-yellow-800 px-3 py-1 rounded-full text-sm">
                                <i class="fas fa-info-circle mr-1"></i>Demo Mode
                            </div>
                            <a href="/" class="text-gray-600 hover:text-gray-900">
                                <i class="fas fa-home mr-2"></i>Ana Sayfa
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Demo Content with Mock Data -->
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
                
                <!-- Enhanced Filters Bar -->
                <div class="bg-white rounded-lg shadow p-4 mb-6">
                    <div class="flex flex-wrap items-center justify-between gap-4">
                        <div class="flex items-center space-x-4">
                            <div class="flex items-center">
                                <label class="text-sm font-medium text-gray-700 mr-2">Time Range:</label>
                                <select class="border border-gray-300 rounded-lg px-3 py-2">
                                    <option value="24h" selected>Last 24 Hours</option>
                                    <option value="7d">Last 7 Days</option>
                                </select>
                            </div>
                        </div>
                        <div class="flex items-center space-x-2">
                            <button class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center">
                                <i class="fas fa-sync mr-2"></i>Refresh
                            </button>
                        </div>
                    </div>
                </div>
                
                <!-- Enhanced Overview Cards -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                    <div class="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 border-l-4 border-blue-500">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="p-3 rounded-full bg-blue-100 animate-pulse">
                                    <i class="fas fa-eye text-blue-600 text-xl"></i>
                                </div>
                                <div class="ml-4">
                                    <p class="text-sm font-medium text-gray-600">Active Users</p>
                                    <p class="text-3xl font-bold text-gray-900">142</p>
                                    <p class="text-xs text-gray-500">Right now</p>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="w-12 h-12 bg-blue-50 rounded-full flex items-center justify-center">
                                    <span class="text-xs font-semibold text-blue-600">+8</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 border-l-4 border-green-500">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="p-3 rounded-full bg-green-100">
                                    <i class="fas fa-mouse-pointer text-green-600 text-xl"></i>
                                </div>
                                <div class="ml-4">
                                    <p class="text-sm font-medium text-gray-600">Events (1h)</p>
                                    <p class="text-3xl font-bold text-gray-900">2,847</p>
                                    <p class="text-xs text-gray-500 flex items-center">
                                        <span class="mr-1 font-semibold text-green-600">+12%</span>
                                        <span>vs prev hour</span>
                                    </p>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="text-xs text-gray-500">Events/min</div>
                                <div class="text-lg font-bold text-green-600">47.5</div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 border-l-4 border-purple-500">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="p-3 rounded-full bg-purple-100">
                                    <i class="fas fa-bullseye text-purple-600 text-xl"></i>
                                </div>
                                <div class="ml-4">
                                    <p class="text-sm font-medium text-gray-600">Conversions</p>
                                    <p class="text-3xl font-bold text-gray-900">23</p>
                                    <p class="text-xs text-gray-500">
                                        <span class="font-semibold text-purple-600">3.2%</span> rate
                                    </p>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="w-16 h-8 bg-gradient-to-r from-purple-400 to-purple-600 rounded-full flex items-center justify-center">
                                    <span class="text-xs font-bold text-white">8</span>
                                </div>
                                <div class="text-xs text-gray-500 mt-1">Today</div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 border-l-4 border-yellow-500">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="p-3 rounded-full bg-yellow-100">
                                    <i class="fas fa-coins text-yellow-600 text-xl"></i>
                                </div>
                                <div class="ml-4">
                                    <p class="text-sm font-medium text-gray-600">Conv. Value</p>
                                    <p class="text-3xl font-bold text-gray-900">₺1,275</p>
                                    <p class="text-xs text-gray-500">Total TRY</p>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="text-xs text-gray-500">Avg. Value</div>
                                <div class="text-lg font-bold text-yellow-600">₺55</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Live Event Stream Demo -->
                <div class="bg-white shadow-lg rounded-lg mb-8">
                    <div class="px-6 py-4 border-b border-gray-200 bg-gradient-to-r from-indigo-500 to-purple-600 text-white rounded-t-lg">
                        <div class="flex items-center justify-between">
                            <div>
                                <h3 class="text-lg font-medium flex items-center">
                                    <i class="fas fa-stream mr-2"></i>
                                    Live Event Stream
                                    <div class="ml-3 w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                                </h3>
                                <p class="text-sm text-indigo-100 mt-1">Real-time user interactions (Demo Mode)</p>
                            </div>
                            <div class="text-right">
                                <div class="text-sm font-semibold">Events/sec: <span>2.3</span></div>
                                <div class="text-xs text-indigo-100">Auto-refresh: ON</div>
                            </div>
                        </div>
                    </div>
                    <div class="p-6">
                        <div class="space-y-3">
                            <div class="flex items-center justify-between p-3 bg-yellow-50 rounded-lg border-l-4 border-yellow-400 animate-fade-in">
                                <div class="flex items-center">
                                    <i class="fas fa-star text-yellow-500 mr-3"></i>
                                    <div>
                                        <div class="font-semibold text-gray-900 text-sm">contact_form_submit</div>
                                        <div class="text-xs text-gray-500">/</div>
                                    </div>
                                </div>
                                <div class="text-right">
                                    <div class="text-xs font-mono text-gray-600">14:23:15</div>
                                    <div class="text-xs text-gray-500">user_abc123</div>
                                </div>
                            </div>
                            
                            <div class="flex items-center justify-between p-3 bg-green-50 rounded-lg border-l-4 border-green-400">
                                <div class="flex items-center">
                                    <i class="fas fa-shopping-cart text-green-500 mr-3"></i>
                                    <div>
                                        <div class="font-semibold text-gray-900 text-sm">service_request_submit</div>
                                        <div class="text-xs text-gray-500">/</div>
                                    </div>
                                </div>
                                <div class="text-right">
                                    <div class="text-xs font-mono text-gray-600">14:22:48</div>
                                    <div class="text-xs text-gray-500">user_def456</div>
                                </div>
                            </div>
                            
                            <div class="flex items-center justify-between p-3 bg-purple-50 rounded-lg border-l-4 border-purple-400">
                                <div class="flex items-center">
                                    <i class="fas fa-mouse-pointer text-purple-500 mr-3"></i>
                                    <div>
                                        <div class="font-semibold text-gray-900 text-sm">cta_button_click</div>
                                        <div class="text-xs text-gray-500">/</div>
                                    </div>
                                </div>
                                <div class="text-right">
                                    <div class="text-xs font-mono text-gray-600">14:22:31</div>
                                    <div class="text-xs text-gray-500">user_ghi789</div>
                                </div>
                            </div>
                            
                            <div class="flex items-center justify-between p-3 bg-blue-50 rounded-lg border-l-4 border-blue-400">
                                <div class="flex items-center">
                                    <i class="fas fa-circle text-blue-500 mr-3"></i>
                                    <div>
                                        <div class="font-semibold text-gray-900 text-sm">page_view</div>
                                        <div class="text-xs text-gray-500">/hizmetler/tv-tamiri</div>
                                    </div>
                                </div>
                                <div class="text-right">
                                    <div class="text-xs font-mono text-gray-600">14:22:15</div>
                                    <div class="text-xs text-gray-500">user_jkl012</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Demo Info -->
                <div class="bg-blue-50 border border-blue-200 rounded-lg p-6">
                    <div class="flex items-start">
                        <i class="fas fa-info-circle text-blue-600 text-xl mr-4 mt-1"></i>
                        <div>
                            <h3 class="text-lg font-semibold text-blue-900 mb-2">Demo Modu Aktif</h3>
                            <p class="text-blue-800 mb-4">
                                Bu Real-time Analytics Dashboard'ın demo versiyonudur. Gerçek veriler yerine örnek veriler gösterilmektedir.
                            </p>
                            <div class="space-y-2">
                                <div class="flex items-center text-sm text-blue-700">
                                    <i class="fas fa-check-circle mr-2"></i>
                                    Enhanced Event Tracking System: ✅ Tamamlandı
                                </div>
                                <div class="flex items-center text-sm text-blue-700">
                                    <i class="fas fa-check-circle mr-2"></i>
                                    Real-time Analytics Dashboard: ✅ Tamamlandı  
                                </div>
                                <div class="flex items-center text-sm text-blue-700">
                                    <i class="fas fa-chart-line mr-2"></i>
                                    Live Event Streaming: ✅ Aktif
                                </div>
                                <div class="flex items-center text-sm text-blue-700">
                                    <i class="fas fa-download mr-2"></i>
                                    CSV Export Functionality: ✅ Hazır
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </body>
    </html>
  `)
})

// Real-time Analytics Dashboard (Authenticated version)
app.get('/admin/realtime-analytics', requireAdminAuth(), async (c) => {
  return c.html(`
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Real-time Analytics Dashboard - GARANTOR360</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <style>
            .animate-fade-in {
                animation: fadeIn 0.5s ease-in-out;
            }
            
            @keyframes fadeIn {
                from { opacity: 0; transform: translateY(-10px); }
                to { opacity: 1; transform: translateY(0); }
            }
            
            .card-hover:hover {
                transform: translateY(-2px);
                transition: all 0.3s ease;
            }
            
            .pulse-dot {
                animation: pulse 2s infinite;
            }
            
            @keyframes pulse {
                0%, 100% { opacity: 1; }
                50% { opacity: 0.5; }
            }
            
            .gradient-bg {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            }
            
            .animate-number {
                transition: all 0.3s ease;
            }
            
            .shadow-glow {
                box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
            }
        </style>
    </head>
    <body class="bg-gray-100">
        <div class="min-h-screen">
            <!-- Header -->
            <div class="bg-white shadow-sm border-b">
                <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div class="flex justify-between h-16">
                        <div class="flex items-center">
                            <i class="fas fa-chart-line text-blue-600 text-xl mr-2"></i>
                            <h1 class="text-xl font-semibold text-gray-900">Real-time Analytics Dashboard</h1>
                            <div class="ml-4 flex items-center">
                                <div class="w-2 h-2 bg-green-500 rounded-full animate-pulse mr-2"></div>
                                <span class="text-sm text-gray-600">Live</span>
                            </div>
                        </div>
                        <div class="flex items-center space-x-4">
                            <select id="timeframe-select" class="border border-gray-300 rounded-lg px-3 py-1">
                                <option value="1h">Last Hour</option>
                                <option value="24h" selected>Last 24 Hours</option>
                                <option value="7d">Last 7 Days</option>
                                <option value="30d">Last 30 Days</option>
                            </select>
                            <button onclick="refreshDashboard()" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">
                                <i class="fas fa-sync mr-2"></i>Refresh
                            </button>
                            <a href="/admin" class="text-gray-600 hover:text-gray-900">
                                <i class="fas fa-arrow-left mr-2"></i>Back
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
                
                <!-- Enhanced Filters Bar -->
                <div class="bg-white rounded-lg shadow p-4 mb-6">
                    <div class="flex flex-wrap items-center justify-between gap-4">
                        <div class="flex items-center space-x-4">
                            <div class="flex items-center">
                                <label class="text-sm font-medium text-gray-700 mr-2">Time Range:</label>
                                <select id="timeframe-select" class="border border-gray-300 rounded-lg px-3 py-2">
                                    <option value="15m">Last 15 Minutes</option>
                                    <option value="1h">Last Hour</option>
                                    <option value="6h">Last 6 Hours</option>
                                    <option value="24h" selected>Last 24 Hours</option>
                                    <option value="7d">Last 7 Days</option>
                                    <option value="30d">Last 30 Days</option>
                                </select>
                            </div>
                            <div class="flex items-center">
                                <label class="text-sm font-medium text-gray-700 mr-2">Event Type:</label>
                                <select id="event-type-filter" class="border border-gray-300 rounded-lg px-3 py-2">
                                    <option value="all">All Events</option>
                                    <option value="conversion">Conversions Only</option>
                                    <option value="engagement">Engagement</option>
                                    <option value="ecommerce">E-commerce</option>
                                    <option value="technical">Technical</option>
                                </select>
                            </div>
                        </div>
                        <div class="flex items-center space-x-2">
                            <button onclick="exportReport()" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center">
                                <i class="fas fa-download mr-2"></i>Export CSV
                            </button>
                            <button onclick="refreshDashboard()" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center">
                                <i class="fas fa-sync mr-2"></i>Refresh
                            </button>
                            <a href="/admin" class="text-gray-600 hover:text-gray-900 flex items-center">
                                <i class="fas fa-arrow-left mr-2"></i>Back
                            </a>
                        </div>
                    </div>
                </div>
                
                <!-- Real-time Overview with Enhanced Cards -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                    <div class="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 border-l-4 border-blue-500">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="p-3 rounded-full bg-blue-100 animate-pulse">
                                    <i class="fas fa-eye text-blue-600 text-xl"></i>
                                </div>
                                <div class="ml-4">
                                    <p class="text-sm font-medium text-gray-600">Active Users</p>
                                    <p class="text-3xl font-bold text-gray-900" id="active-users">-</p>
                                    <p class="text-xs text-gray-500">Right now</p>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="w-12 h-12 bg-blue-50 rounded-full flex items-center justify-center">
                                    <span class="text-xs font-semibold text-blue-600" id="users-change">-</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 border-l-4 border-green-500">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="p-3 rounded-full bg-green-100">
                                    <i class="fas fa-mouse-pointer text-green-600 text-xl"></i>
                                </div>
                                <div class="ml-4">
                                    <p class="text-sm font-medium text-gray-600">Events (1h)</p>
                                    <p class="text-3xl font-bold text-gray-900" id="events-hour">-</p>
                                    <p class="text-xs text-gray-500 flex items-center">
                                        <span id="events-trend" class="mr-1 font-semibold">-</span>
                                        <span>vs prev hour</span>
                                    </p>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="text-xs text-gray-500">Events/min</div>
                                <div class="text-lg font-bold text-green-600" id="events-per-minute">-</div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 border-l-4 border-purple-500">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="p-3 rounded-full bg-purple-100">
                                    <i class="fas fa-bullseye text-purple-600 text-xl"></i>
                                </div>
                                <div class="ml-4">
                                    <p class="text-sm font-medium text-gray-600">Conversions</p>
                                    <p class="text-3xl font-bold text-gray-900" id="conversions-total">-</p>
                                    <p class="text-xs text-gray-500">
                                        <span id="conversion-rate" class="font-semibold text-purple-600">-</span>% rate
                                    </p>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="w-16 h-8 bg-gradient-to-r from-purple-400 to-purple-600 rounded-full flex items-center justify-center">
                                    <span class="text-xs font-bold text-white" id="conv-today">0</span>
                                </div>
                                <div class="text-xs text-gray-500 mt-1">Today</div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow duration-300 border-l-4 border-yellow-500">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="p-3 rounded-full bg-yellow-100">
                                    <i class="fas fa-coins text-yellow-600 text-xl"></i>
                                </div>
                                <div class="ml-4">
                                    <p class="text-sm font-medium text-gray-600">Conv. Value</p>
                                    <p class="text-3xl font-bold text-gray-900" id="conversion-value">-</p>
                                    <p class="text-xs text-gray-500">Total TRY</p>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="text-xs text-gray-500">Avg. Value</div>
                                <div class="text-lg font-bold text-yellow-600" id="avg-conv-value">-</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Charts Section -->
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                    <!-- Real-time Activity Chart -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">
                            <i class="fas fa-chart-area text-blue-600 mr-2"></i>
                            Real-time Activity
                        </h3>
                        <div class="relative h-64">
                            <canvas id="realtimeChart"></canvas>
                        </div>
                    </div>

                    <!-- Top Events -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">
                            <i class="fas fa-fire text-red-600 mr-2"></i>
                            Top Events (Last Hour)
                        </h3>
                        <div id="top-events-list" class="space-y-2 max-h-64 overflow-y-auto">
                            <div class="text-center text-gray-500 py-8">Loading events...</div>
                        </div>
                    </div>
                </div>

                <!-- Detailed Analytics -->
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
                    <!-- Recent Conversions -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">
                            <i class="fas fa-trophy text-green-600 mr-2"></i>
                            Recent Conversions
                        </h3>
                        <div id="recent-conversions-list" class="space-y-3 max-h-80 overflow-y-auto">
                            <div class="text-center text-gray-500 py-8">Loading conversions...</div>
                        </div>
                    </div>

                    <!-- Top Pages -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">
                            <i class="fas fa-file-alt text-blue-600 mr-2"></i>
                            Top Pages
                        </h3>
                        <div id="top-pages-list" class="space-y-3 max-h-80 overflow-y-auto">
                            <div class="text-center text-gray-500 py-8">Loading pages...</div>
                        </div>
                    </div>

                    <!-- Traffic Sources -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">
                            <i class="fas fa-share-alt text-purple-600 mr-2"></i>
                            Traffic Sources
                        </h3>
                        <div id="traffic-sources-list" class="space-y-3 max-h-80 overflow-y-auto">
                            <div class="text-center text-gray-500 py-8">Loading sources...</div>
                        </div>
                    </div>
                </div>

                <!-- Enhanced Event Stream -->
                <div class="bg-white shadow-lg rounded-lg">
                    <div class="px-6 py-4 border-b border-gray-200 bg-gradient-to-r from-indigo-500 to-purple-600 text-white rounded-t-lg">
                        <div class="flex items-center justify-between">
                            <div>
                                <h3 class="text-lg font-medium flex items-center">
                                    <i class="fas fa-stream mr-2"></i>
                                    Live Event Stream
                                    <div class="ml-3 w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                                </h3>
                                <p class="text-sm text-indigo-100 mt-1">Real-time user interactions</p>
                            </div>
                            <div class="text-right">
                                <div class="text-sm font-semibold">Events/sec: <span id="events-per-sec">0</span></div>
                                <div class="text-xs text-indigo-100">Auto-refresh: ON</div>
                            </div>
                        </div>
                    </div>
                    <div class="p-6">
                        <!-- Event Stream Controls -->
                        <div class="flex items-center justify-between mb-4 pb-4 border-b border-gray-200">
                            <div class="flex items-center space-x-4">
                                <button id="pause-stream" class="bg-yellow-500 text-white px-3 py-1 rounded text-sm hover:bg-yellow-600">
                                    <i class="fas fa-pause mr-1"></i>Pause
                                </button>
                                <button id="clear-stream" class="bg-red-500 text-white px-3 py-1 rounded text-sm hover:bg-red-600">
                                    <i class="fas fa-trash mr-1"></i>Clear
                                </button>
                            </div>
                            <div class="flex items-center space-x-2">
                                <label class="text-sm text-gray-600">Filter:</label>
                                <select id="stream-filter" class="border border-gray-300 rounded px-2 py-1 text-sm">
                                    <option value="all">All Events</option>
                                    <option value="conversion">Conversions</option>
                                    <option value="form_submit">Form Submissions</option>
                                    <option value="button_click">Button Clicks</option>
                                    <option value="page_view">Page Views</option>
                                </select>
                            </div>
                        </div>
                        
                        <!-- Event Stream -->
                        <div id="event-stream" class="space-y-2 max-h-80 overflow-y-auto">
                            <div class="text-center text-gray-500 py-8 flex items-center justify-center">
                                <i class="fas fa-satellite-dish mr-2 animate-spin"></i>
                                Connecting to live stream...
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Performance Metrics Section -->
                <div class="mt-8 grid grid-cols-1 lg:grid-cols-2 gap-6">
                    <div class="bg-white rounded-lg shadow-lg p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4 flex items-center">
                            <i class="fas fa-tachometer-alt text-green-600 mr-2"></i>
                            Core Web Vitals
                        </h3>
                        <div class="space-y-4">
                            <div class="flex items-center justify-between">
                                <span class="text-sm font-medium text-gray-600">LCP (Largest Contentful Paint)</span>
                                <div class="flex items-center">
                                    <div class="w-24 h-2 bg-gray-200 rounded-full mr-2">
                                        <div id="lcp-bar" class="h-2 bg-green-500 rounded-full" style="width: 0%"></div>
                                    </div>
                                    <span id="lcp-value" class="text-sm font-semibold text-gray-900">-</span>
                                </div>
                            </div>
                            <div class="flex items-center justify-between">
                                <span class="text-sm font-medium text-gray-600">FID (First Input Delay)</span>
                                <div class="flex items-center">
                                    <div class="w-24 h-2 bg-gray-200 rounded-full mr-2">
                                        <div id="fid-bar" class="h-2 bg-blue-500 rounded-full" style="width: 0%"></div>
                                    </div>
                                    <span id="fid-value" class="text-sm font-semibold text-gray-900">-</span>
                                </div>
                            </div>
                            <div class="flex items-center justify-between">
                                <span class="text-sm font-medium text-gray-600">CLS (Cumulative Layout Shift)</span>
                                <div class="flex items-center">
                                    <div class="w-24 h-2 bg-gray-200 rounded-full mr-2">
                                        <div id="cls-bar" class="h-2 bg-purple-500 rounded-full" style="width: 0%"></div>
                                    </div>
                                    <span id="cls-value" class="text-sm font-semibold text-gray-900">-</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow-lg p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4 flex items-center">
                            <i class="fas fa-chart-pie text-blue-600 mr-2"></i>
                            Event Categories
                        </h3>
                        <div class="relative h-48">
                            <canvas id="categoryChart"></canvas>
                        </div>
                    </div>
                </div>

                <!-- Footer Info -->
                <div class="mt-8 text-center text-sm text-gray-500">
                    <p>
                        <i class="fas fa-clock mr-1"></i>
                        Auto-refresh every 30 seconds | 
                        Last updated: <span id="last-update-time">-</span>
                    </p>
                </div>
            </div>
        </div>

        <!-- Real-time Analytics JavaScript -->
        <script>
            class RealtimeAnalyticsDashboard {
                constructor() {
                    this.refreshInterval = null;
                    this.isLoading = false;
                    this.eventStreamQueue = [];
                    this.charts = {};
                    this.streamPaused = false;
                    this.currentFilter = 'all';
                    this.eventsPerSecond = 0;
                    this.eventBuffer = [];
                    this.lastEventTime = Date.now();
                    
                    this.init();
                }
                
                async init() {
                    await this.loadDashboardData();
                    this.setupEventListeners();
                    this.startAutoRefresh();
                    this.simulateEventStream();
                    
                    console.log('Enhanced Real-time Analytics Dashboard initialized');
                }
                
                async loadDashboardData() {
                    if (this.isLoading) return;
                    this.isLoading = true;
                    
                    try {
                        const token = localStorage.getItem('adminToken');
                        const response = await fetch('/api/events/realtime-dashboard', {
                            headers: { 'Authorization': 'Bearer ' + token }
                        });
                        
                        const data = await response.json();
                        if (data.success) {
                            this.updateDashboard(data.data);
                        }
                        
                    } catch (error) {
                        console.error('Dashboard load error:', error);
                    } finally {
                        this.isLoading = false;
                    }
                }
                
                updateDashboard(data) {
                    // Update overview metrics
                    this.updateOverviewMetrics(data.journeyStats);
                    
                    // Update charts
                    this.updateRealtimeChart(data.realtimeMetrics);
                    
                    // Update lists
                    this.updateTopEvents(data.recentEvents);
                    this.updateRecentConversions(data.conversions);
                    this.updateTopPages(data.topPages);
                    
                    // Update last refresh time
                    document.getElementById('last-update-time').textContent = 
                        new Date().toLocaleTimeString('tr-TR');
                }
                
                updateOverviewMetrics(stats) {
                    document.getElementById('active-users').textContent = 
                        stats.total_users || '0';
                    document.getElementById('events-hour').textContent = 
                        stats.total_events || '0';
                    document.getElementById('conversions-total').textContent = 
                        '0'; // Will be calculated from conversions data
                    document.getElementById('conversion-value').textContent = 
                        'TL 0'; // Will be calculated from conversions data
                    document.getElementById('conversion-rate').textContent = 
                        '0';
                }
                
                updateRealtimeChart(metrics) {
                    const ctx = document.getElementById('realtimeChart');
                    if (!ctx) return;
                    
                    const labels = metrics.map(m => m.time_label);
                    const events = metrics.map(m => m.events || 0);
                    const users = metrics.map(m => m.users || 0);
                    const conversions = metrics.map(m => m.conversions || 0);
                    
                    if (this.charts.realtime) {
                        this.charts.realtime.destroy();
                    }
                    
                    this.charts.realtime = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [
                                {
                                    label: 'Events',
                                    data: events,
                                    borderColor: '#3b82f6',
                                    backgroundColor: '#3b82f6',
                                    tension: 0.4,
                                    fill: false
                                },
                                {
                                    label: 'Users',
                                    data: users,
                                    borderColor: '#10b981',
                                    backgroundColor: '#10b981',
                                    tension: 0.4,
                                    fill: false
                                },
                                {
                                    label: 'Conversions',
                                    data: conversions,
                                    borderColor: '#8b5cf6',
                                    backgroundColor: '#8b5cf6',
                                    tension: 0.4,
                                    fill: false
                                }
                            ]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: {
                                    position: 'bottom'
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                }
                
                updateTopEvents(events) {
                    const container = document.getElementById('top-events-list');
                    if (!events || events.length === 0) {
                        container.innerHTML = '<div class="text-center text-gray-500 py-4">No events found</div>';
                        return;
                    }
                    
                    container.innerHTML = events.map((event, index) => 
                        '<div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">' +
                            '<div class="flex items-center">' +
                                '<div class="w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center text-xs font-semibold text-blue-800 mr-3">' +
                                    (index + 1) +
                                '</div>' +
                                '<div>' +
                                    '<div class="font-medium text-gray-900">' + event.event_name + '</div>' +
                                    '<div class="text-xs text-gray-500">' + event.event_category + '</div>' +
                                '</div>' +
                            '</div>' +
                            '<div class="text-right">' +
                                '<div class="font-semibold text-gray-900">' + event.count + '</div>' +
                                '<div class="text-xs text-gray-500">' + event.unique_users + ' users</div>' +
                            '</div>' +
                        '</div>'
                    ).join('');
                }
                
                updateRecentConversions(conversions) {
                    const container = document.getElementById('recent-conversions-list');
                    if (!conversions || conversions.length === 0) {
                        container.innerHTML = '<div class="text-center text-gray-500 py-4">No conversions found</div>';
                        return;
                    }
                    
                    container.innerHTML = conversions.slice(0, 10).map(conv => {
                        const time = new Date(conv.server_timestamp).toLocaleTimeString('tr-TR');
                        return '<div class="border-l-4 border-green-400 pl-3 py-2">' +
                                '<div class="flex items-center justify-between">' +
                                    '<div class="font-medium text-gray-900">' + (conv.conversion_type || conv.event_name) + '</div>' +
                                    '<div class="text-sm font-semibold text-green-600">TL ' + (conv.conversion_value || 0) + '</div>' +
                                '</div>' +
                                '<div class="text-xs text-gray-500 mt-1">' +
                                    time + ' • ' + (conv.utm_source || 'direct') +
                                '</div>' +
                            '</div>';
                    }).join('');
                }
                
                updateTopPages(pages) {
                    const container = document.getElementById('top-pages-list');
                    if (!pages || pages.length === 0) {
                        container.innerHTML = '<div class="text-center text-gray-500 py-4">No pages found</div>';
                        return;
                    }
                    
                    container.innerHTML = pages.slice(0, 10).map(page => 
                        '<div class="border-b border-gray-100 pb-2">' +
                            '<div class="font-medium text-gray-900 text-sm truncate" title="' + page.page_url + '">' +
                                (page.page_title || page.page_url) +
                            '</div>' +
                            '<div class="flex justify-between text-xs text-gray-500 mt-1">' +
                                '<span>' + page.pageviews + ' views • ' + page.unique_visitors + ' visitors</span>' +
                                '<span>' + Math.round(page.avg_time_on_page || 0) + 's avg</span>' +
                            '</div>' +
                        '</div>'
                    ).join('');
                }
                
                setupEventListeners() {
                    // Timeframe selection
                    document.getElementById('timeframe-select').addEventListener('change', (e) => {
                        this.loadAnalyticsData(e.target.value);
                    });
                    
                    // Event type filter
                    document.getElementById('event-type-filter').addEventListener('change', (e) => {
                        this.currentFilter = e.target.value;
                        this.loadDashboardData();
                    });
                    
                    // Stream controls
                    document.getElementById('pause-stream').addEventListener('click', () => {
                        this.toggleStreamPause();
                    });
                    
                    document.getElementById('clear-stream').addEventListener('click', () => {
                        this.clearEventStream();
                    });
                    
                    document.getElementById('stream-filter').addEventListener('change', (e) => {
                        this.filterEventStream(e.target.value);
                    });
                }
                
                toggleStreamPause() {
                    this.streamPaused = !this.streamPaused;
                    const btn = document.getElementById('pause-stream');
                    if (this.streamPaused) {
                        btn.innerHTML = '<i class="fas fa-play mr-1"></i>Resume';
                        btn.className = 'bg-green-500 text-white px-3 py-1 rounded text-sm hover:bg-green-600';
                        this.stopAutoRefresh();
                    } else {
                        btn.innerHTML = '<i class="fas fa-pause mr-1"></i>Pause';
                        btn.className = 'bg-yellow-500 text-white px-3 py-1 rounded text-sm hover:bg-yellow-600';
                        this.startAutoRefresh();
                    }
                }
                
                clearEventStream() {
                    document.getElementById('event-stream').innerHTML = 
                        '<div class="text-center text-gray-500 py-8">Event stream cleared. Waiting for new events...</div>';
                    this.eventBuffer = [];
                }
                
                filterEventStream(filter) {
                    // Implement real-time stream filtering
                    const events = document.querySelectorAll('#event-stream .event-item');
                    events.forEach(event => {
                        const eventType = event.dataset.eventType;
                        if (filter === 'all' || eventType === filter) {
                            event.style.display = 'block';
                        } else {
                            event.style.display = 'none';
                        }
                    });
                }
                
                async loadAnalyticsData(timeframe) {
                    try {
                        const token = localStorage.getItem('adminToken');
                        const response = await fetch('/api/events/analytics?timeframe=' + timeframe, {
                            headers: { 'Authorization': 'Bearer ' + token }
                        });
                        
                        const data = await response.json();
                        if (data.success) {
                            // Update traffic sources
                            this.updateTrafficSources(data.data.traffic);
                        }
                        
                    } catch (error) {
                        console.error('Analytics load error:', error);
                    }
                }
                
                updateTrafficSources(traffic) {
                    const container = document.getElementById('traffic-sources-list');
                    if (!traffic || traffic.length === 0) {
                        container.innerHTML = '<div class="text-center text-gray-500 py-4">No traffic data</div>';
                        return;
                    }
                    
                    container.innerHTML = traffic.slice(0, 10).map(source => 
                        '<div class="flex items-center justify-between p-2 hover:bg-gray-50 rounded">' +
                            '<div>' +
                                '<div class="font-medium text-gray-900">' + source.source + '</div>' +
                                '<div class="text-xs text-gray-500">' + source.medium + '</div>' +
                            '</div>' +
                            '<div class="text-right">' +
                                '<div class="font-semibold text-gray-900">' + source.users + '</div>' +
                                '<div class="text-xs text-gray-500">' + source.conversions + ' conv</div>' +
                            '</div>' +
                        '</div>'
                    ).join('');
                }
                
                startAutoRefresh() {
                    this.refreshInterval = setInterval(() => {
                        this.loadDashboardData();
                    }, 30000); // 30 seconds
                }
                
                stopAutoRefresh() {
                    if (this.refreshInterval) {
                        clearInterval(this.refreshInterval);
                        this.refreshInterval = null;
                    }
                }
            }
            
                addEventToStream(event) {
                    if (this.streamPaused) return;
                    
                    const streamContainer = document.getElementById('event-stream');
                    const time = new Date().toLocaleTimeString('tr-TR');
                    
                    // Create event item with enhanced styling
                    const eventItem = document.createElement('div');
                    eventItem.className = 'event-item flex items-center justify-between p-3 bg-gray-50 rounded-lg border-l-4 border-blue-400 animate-fade-in';
                    eventItem.dataset.eventType = event.event_name;
                    
                    // Event type icon and color
                    let iconClass = 'fas fa-circle';
                    let iconColor = 'text-blue-500';
                    
                    if (event.is_conversion) {
                        iconClass = 'fas fa-star';
                        iconColor = 'text-yellow-500';
                        eventItem.className += ' border-yellow-400 bg-yellow-50';
                    } else if (event.event_category === 'ecommerce') {
                        iconClass = 'fas fa-shopping-cart';
                        iconColor = 'text-green-500';
                        eventItem.className += ' border-green-400 bg-green-50';
                    } else if (event.event_category === 'engagement') {
                        iconClass = 'fas fa-mouse-pointer';
                        iconColor = 'text-purple-500';
                        eventItem.className += ' border-purple-400 bg-purple-50';
                    }
                    
                    eventItem.innerHTML = 
                        '<div class="flex items-center">' +
                            '<i class="' + iconClass + ' ' + iconColor + ' mr-3"></i>' +
                            '<div>' +
                                '<div class="font-semibold text-gray-900 text-sm">' + event.event_name + '</div>' +
                                '<div class="text-xs text-gray-500">' + event.page_url + '</div>' +
                            '</div>' +
                        '</div>' +
                        '<div class="text-right">' +
                            '<div class="text-xs font-mono text-gray-600">' + time + '</div>' +
                            '<div class="text-xs text-gray-500">' + (event.user_identifier || 'anonymous') + '</div>' +
                        '</div>';
                    
                    // Insert at beginning
                    if (streamContainer.firstChild.className && streamContainer.firstChild.className.includes('text-center')) {
                        streamContainer.innerHTML = '';
                    }
                    
                    streamContainer.insertBefore(eventItem, streamContainer.firstChild);
                    
                    // Keep only last 50 events
                    const events = streamContainer.querySelectorAll('.event-item');
                    if (events.length > 50) {
                        events[events.length - 1].remove();
                    }
                    
                    // Update events per second
                    this.updateEventsPerSecond();
                }
                
                updateEventsPerSecond() {
                    const now = Date.now();
                    this.eventBuffer.push(now);
                    
                    // Keep only events from last 10 seconds
                    this.eventBuffer = this.eventBuffer.filter(time => now - time < 10000);
                    
                    // Calculate events per second
                    this.eventsPerSecond = (this.eventBuffer.length / 10).toFixed(1);
                    document.getElementById('events-per-sec').textContent = this.eventsPerSecond;
                }
                
                simulateEventStream() {
                    // Simulate incoming events for demonstration
                    const sampleEvents = [
                        { event_name: 'page_view', event_category: 'engagement', page_url: '/', user_identifier: 'user_' + Math.random().toString(36).substr(2, 5) },
                        { event_name: 'contact_form_submit', event_category: 'conversion', page_url: '/', is_conversion: true, user_identifier: 'user_' + Math.random().toString(36).substr(2, 5) },
                        { event_name: 'service_request_submit', event_category: 'conversion', page_url: '/', is_conversion: true, user_identifier: 'user_' + Math.random().toString(36).substr(2, 5) },
                        { event_name: 'cta_button_click', event_category: 'engagement', page_url: '/', user_identifier: 'user_' + Math.random().toString(36).substr(2, 5) },
                        { event_name: 'phone_click', event_category: 'engagement', page_url: '/', user_identifier: 'user_' + Math.random().toString(36).substr(2, 5) }
                    ];
                    
                    setInterval(() => {
                        if (!this.streamPaused && Math.random() > 0.7) { // 30% chance every 3 seconds
                            const event = sampleEvents[Math.floor(Math.random() * sampleEvents.length)];
                            this.addEventToStream(event);
                        }
                    }, 3000);
                }
            }
            
            // Global functions
            function refreshDashboard() {
                if (window.realtimeDashboard) {
                    window.realtimeDashboard.loadDashboardData();
                }
            }
            
            function exportReport() {
                // Create and download CSV report
                const data = {
                    timestamp: new Date().toISOString(),
                    metrics: {
                        activeUsers: document.getElementById('active-users').textContent,
                        eventsHour: document.getElementById('events-hour').textContent,
                        conversionsTotal: document.getElementById('conversions-total').textContent,
                        conversionValue: document.getElementById('conversion-value').textContent
                    }
                };
                
                const csvContent = "data:text/csv;charset=utf-8," 
                    + "Metric,Value,Timestamp\\n"
                    + "Active Users," + data.metrics.activeUsers + "," + data.timestamp + "\\n"
                    + "Events (1h)," + data.metrics.eventsHour + "," + data.timestamp + "\\n"
                    + "Conversions," + data.metrics.conversionsTotal + "," + data.timestamp + "\\n"
                    + "Conversion Value," + data.metrics.conversionValue + "," + data.timestamp + "\\n";
                
                const encodedUri = encodeURI(csvContent);
                const link = document.createElement("a");
                link.setAttribute("href", encodedUri);
                link.setAttribute("download", "analytics-report-" + new Date().toISOString().slice(0,10) + ".csv");
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
                
                // Show success message
                const notification = document.createElement('div');
                notification.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50';
                notification.innerHTML = '<i class="fas fa-check mr-2"></i>Report exported successfully!';
                document.body.appendChild(notification);
                setTimeout(() => {
                    notification.remove();
                }, 3000);
            }
            
            // Initialize dashboard
            document.addEventListener('DOMContentLoaded', function() {
                window.realtimeDashboard = new RealtimeAnalyticsDashboard();
            });
        </script>
    </body>
    </html>
  `)
})

// KVKV Cookie Consent Dashboard
app.get('/admin/kvkv-dashboard', requireAdminAuth(), async (c) => {
  return c.html(`
    <!DOCTYPE html>
    <html lang="tr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>KVKV Cookie Consent Dashboard - GARANTOR360</title>
        <script src="https://cdn.tailwindcss.com"></script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <link href="/static/kvkv-admin-dashboard.css" rel="stylesheet">
    </head>
    <body class="bg-gray-100">
        <div class="min-h-screen">
            <!-- Header -->
            <div class="bg-white shadow-sm border-b">
                <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div class="flex justify-between h-16">
                        <div class="flex items-center">
                            <i class="fas fa-cookie-bite text-orange-600 text-xl mr-2"></i>
                            <h1 class="text-xl font-semibold text-gray-900">KVKV Cookie Consent Dashboard</h1>
                        </div>
                        <div class="flex items-center space-x-4">
                            <div class="flex items-center space-x-2">
                                <label class="text-sm text-gray-600">Auto Refresh:</label>
                                <input type="checkbox" id="auto-refresh-toggle" checked class="toggle">
                            </div>
                            <button id="export-consent-data" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">
                                <i class="fas fa-download mr-2"></i>Export Data
                            </button>
                            <button id="refresh-dashboard" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700">
                                <i class="fas fa-sync mr-2"></i>Refresh
                            </button>
                            <a href="/admin" class="text-gray-600 hover:text-gray-900">
                                <i class="fas fa-arrow-left mr-2"></i>Back
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
                
                <!-- Stats Overview -->
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                    <div class="bg-white rounded-lg shadow p-6" id="total-consents">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-blue-100">
                                <i class="fas fa-users text-blue-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600 stat-label">Toplam Rıza</p>
                                <p class="text-2xl font-semibold text-gray-900 stat-value">-</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow p-6" id="analytics-acceptance">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-purple-100">
                                <i class="fas fa-chart-bar text-purple-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600 stat-label">Analitik Kabul %</p>
                                <p class="text-2xl font-semibold text-gray-900 stat-value">-</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow p-6" id="marketing-acceptance">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-orange-100">
                                <i class="fas fa-bullhorn text-orange-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600 stat-label">Pazarlama Kabul %</p>
                                <p class="text-2xl font-semibold text-gray-900 stat-value">-</p>
                            </div>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg shadow p-6" id="withdrawn-consents">
                        <div class="flex items-center">
                            <div class="p-3 rounded-full bg-red-100">
                                <i class="fas fa-hand-rock text-red-600"></i>
                            </div>
                            <div class="ml-4">
                                <p class="text-sm font-medium text-gray-600 stat-label">Geri Çekilen</p>
                                <p class="text-2xl font-semibold text-gray-900 stat-value">-</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Charts and Tables Section -->
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                    <!-- Consent Distribution Chart -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">
                            <i class="fas fa-pie-chart text-purple-600 mr-2"></i>
                            Consent Distribution
                        </h3>
                        <div class="relative h-64">
                            <canvas id="consent-chart"></canvas>
                        </div>
                    </div>

                    <!-- Recent Activity -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">
                            <i class="fas fa-history text-blue-600 mr-2"></i>
                            Recent Activity
                        </h3>
                        <div class="space-y-3 max-h-64 overflow-y-auto">
                            <div id="recent-activity-list">
                                <div class="text-center text-gray-500 py-4">
                                    Loading recent activity...
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recent Consents Table -->
                <div class="bg-white shadow rounded-lg mb-8">
                    <div class="px-6 py-4 border-b border-gray-200">
                        <h3 class="text-lg font-medium text-gray-900">
                            <i class="fas fa-list text-green-600 mr-2"></i>
                            Recent Consents
                        </h3>
                        <p class="text-sm text-gray-600 mt-1">Latest user consent records (last 20)</p>
                    </div>
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        User ID / IP
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Consent Categories
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Method
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Date/Time
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Actions
                                    </th>
                                </tr>
                            </thead>
                            <tbody id="recent-consents-tbody" class="bg-white divide-y divide-gray-200">
                                <tr>
                                    <td colspan="5" class="px-6 py-4 text-center text-gray-500">
                                        Loading consent data...
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Compliance Logs -->
                <div class="bg-white shadow rounded-lg">
                    <div class="px-6 py-4 border-b border-gray-200">
                        <h3 class="text-lg font-medium text-gray-900">
                            <i class="fas fa-shield-alt text-blue-600 mr-2"></i>
                            KVKV Compliance Logs
                        </h3>
                        <p class="text-sm text-gray-600 mt-1">Legal compliance and audit trail</p>
                    </div>
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Event Type
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Description
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Compliance Status
                                    </th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                        Date/Time
                                    </th>
                                </tr>
                            </thead>
                            <tbody id="compliance-logs-tbody" class="bg-white divide-y divide-gray-200">
                                <tr>
                                    <td colspan="4" class="px-6 py-4 text-center text-gray-500">
                                        Loading compliance logs...
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Footer Info -->
                <div class="mt-8 text-center text-sm text-gray-500">
                    <p>
                        <i class="fas fa-info-circle mr-1"></i>
                        Last refreshed: <span id="last-refresh-time">-</span> | 
                        KVKV (Kişisel Verilerin Korunması Kanunu) Compliance Dashboard
                    </p>
                </div>
            </div>
        </div>

        <!-- Load Dashboard JavaScript -->
        <script src="/static/kvkv-admin-dashboard.js"></script>
        
        <style>
            .consent-badge {
                display: inline-block;
                padding: 2px 8px;
                border-radius: 12px;
                font-size: 12px;
                font-weight: 500;
                margin-right: 4px;
                margin-bottom: 2px;
            }
            
            .consent-badge-accepted {
                background-color: #d1fae5;
                color: #065f46;
            }
            
            .consent-badge-rejected {
                background-color: #fee2e2;
                color: #991b1b;
            }
            
            .user-id {
                display: block;
                font-family: monospace;
                font-size: 12px;
                color: #374151;
            }
            
            .ip-address {
                display: block;
                font-size: 11px;
                color: #6b7280;
                margin-top: 2px;
            }
            
            .consent-method {
                display: flex;
                align-items: center;
                gap: 4px;
                font-size: 13px;
                color: #4b5563;
            }
            
            .consent-date {
                font-size: 13px;
            }
            
            .consent-date small {
                color: #6b7280;
            }
            
            .log-event {
                display: flex;
                align-items: center;
                gap: 8px;
                font-size: 13px;
            }
            
            .log-description {
                font-size: 13px;
                color: #4b5563;
                max-width: 300px;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }
            
            .compliance-status {
                padding: 2px 8px;
                border-radius: 12px;
                font-size: 12px;
                font-weight: 500;
                text-transform: capitalize;
            }
            
            .compliance-status-compliant {
                background-color: #d1fae5;
                color: #065f46;
            }
            
            .compliance-status-pending {
                background-color: #fef3c7;
                color: #92400e;
            }
            
            .compliance-status-violation {
                background-color: #fee2e2;
                color: #991b1b;
            }
            
            .log-date {
                font-size: 13px;
            }
            
            .log-date small {
                color: #6b7280;
            }
            
            .btn {
                display: inline-flex;
                align-items: center;
                padding: 6px 12px;
                border: 1px solid transparent;
                border-radius: 6px;
                font-size: 14px;
                font-weight: 500;
                cursor: pointer;
                transition: all 0.2s;
            }
            
            .btn-sm {
                padding: 4px 8px;
                font-size: 12px;
            }
            
            .btn-outline {
                border-color: #d1d5db;
                color: #374151;
                background-color: #ffffff;
            }
            
            .btn-outline:hover {
                border-color: #9ca3af;
                color: #111827;
            }
            
            .toggle {
                width: 40px;
                height: 20px;
                -webkit-appearance: none;
                appearance: none;
                background-color: #e5e7eb;
                border-radius: 10px;
                position: relative;
                cursor: pointer;
                transition: background-color 0.3s;
            }
            
            .toggle:checked {
                background-color: #10b981;
            }
            
            .toggle:before {
                content: '';
                position: absolute;
                width: 16px;
                height: 16px;
                border-radius: 50%;
                background-color: white;
                top: 2px;
                left: 2px;
                transition: transform 0.3s;
            }
            
            .toggle:checked:before {
                transform: translateX(20px);
            }
            
            .kvkv-modal {
                position: fixed;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: rgba(0,0,0,0.5);
                display: flex;
                align-items: center;
                justify-content: center;
                z-index: 1000;
                opacity: 0;
                visibility: hidden;
                transition: all 0.3s;
                padding: 20px;
            }
            
            .kvkv-modal.show {
                opacity: 1;
                visibility: visible;
            }
            
            .kvkv-modal-content {
                background: white;
                border-radius: 12px;
                max-width: 600px;
                width: 100%;
                max-height: 90vh;
                overflow-y: auto;
            }
            
            .kvkv-modal-header {
                padding: 20px 20px 0;
                display: flex;
                justify-content: space-between;
                align-items: center;
            }
            
            .modal-close {
                background: none;
                border: none;
                font-size: 20px;
                cursor: pointer;
                color: #6b7280;
            }
            
            .kvkv-modal-body {
                padding: 20px;
            }
            
            .kvkv-modal-footer {
                padding: 0 20px 20px;
                display: flex;
                justify-content: flex-end;
            }
            
            .consent-details .detail-group {
                margin-bottom: 15px;
            }
            
            .consent-details label {
                display: block;
                font-weight: 500;
                margin-bottom: 5px;
                color: #374151;
            }
            
            .user-id-full {
                font-family: monospace;
                background: #f3f4f6;
                padding: 4px 8px;
                border-radius: 4px;
                font-size: 12px;
            }
            
            .consent-categories-detail {
                margin-top: 20px;
            }
            
            .categories-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 10px;
                margin-top: 10px;
            }
            
            .category-item {
                display: flex;
                align-items: center;
                gap: 8px;
                padding: 12px;
                border: 1px solid #e5e7eb;
                border-radius: 8px;
                transition: all 0.2s;
            }
            
            .category-item.enabled {
                border-color: #10b981;
                background-color: #f0fdf4;
            }
            
            .category-item.disabled {
                border-color: #ef4444;
                background-color: #fef2f2;
            }
            
            .category-item i {
                font-size: 16px;
            }
            
            .category-item.enabled i {
                color: #10b981;
            }
            
            .category-item.disabled i {
                color: #ef4444;
            }
            
            .category-item span {
                flex: 1;
                font-size: 14px;
                font-weight: 500;
            }
            
            .category-item .status {
                font-size: 12px;
                padding: 2px 6px;
                border-radius: 4px;
                font-weight: 500;
            }
            
            .category-item.enabled .status {
                background-color: #dcfce7;
                color: #166534;
            }
            
            .category-item.disabled .status {
                background-color: #fee2e2;
                color: #991b1b;
            }
            
            .notification {
                position: fixed;
                top: 20px;
                right: 20px;
                background: white;
                padding: 15px 20px;
                border-radius: 8px;
                box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                transform: translateX(100%);
                transition: transform 0.3s;
                z-index: 1001;
                display: flex;
                align-items: center;
                gap: 10px;
                min-width: 250px;
            }
            
            .notification.show {
                transform: translateX(0);
            }
            
            .notification-success {
                border-left: 4px solid #10b981;
            }
            
            .notification-error {
                border-left: 4px solid #ef4444;
            }
            
            .notification i {
                font-size: 16px;
            }
            
            .notification-success i {
                color: #10b981;
            }
            
            .notification-error i {
                color: #ef4444;
            }
        </style>
    </body>
    </html>
  `)
})

// ====================================
// ENHANCED EVENT TRACKING API ENDPOINTS
// ====================================

// Event Batch Processing Endpoint
app.post('/api/events/batch', async (c) => {
  const { DB } = c.env
  
  try {
    const { events, meta } = await c.req.json()
    
    if (!events || !Array.isArray(events)) {
      return c.json({ error: 'Events array is required' }, 400)
    }
    
    const ipAddress = c.req.header('CF-Connecting-IP') || c.req.header('X-Forwarded-For') || 'Unknown'
    const userAgent = c.req.header('User-Agent') || 'Unknown'
    const currentTime = new Date().toISOString()
    
    let successCount = 0
    let errorCount = 0
    
    // Process each event in the batch
    for (const event of events) {
      try {
        // Insert event into database
        await DB.prepare(`
          INSERT INTO user_event_logs (
            event_id, event_name, event_category, user_identifier, session_id, visitor_id,
            event_label, event_value, event_data, page_url, page_title, page_referrer,
            element_id, element_class, element_text, element_type, user_agent, ip_address,
            page_load_time, time_on_page, scroll_depth, is_conversion, conversion_type,
            conversion_value, utm_source, utm_medium, utm_campaign, utm_term, utm_content,
            client_timestamp, server_timestamp, created_at
          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        `).bind(
          event.event_id || `evt_${Date.now()}_${Math.random().toString(36).substring(7)}`,
          event.event_name || 'unknown',
          event.event_category || 'custom',
          event.user_identifier || 'anonymous',
          event.session_id || 'unknown',
          event.visitor_id || 'unknown',
          event.event_label || '',
          event.event_value || 0,
          event.event_data || '{}',
          event.page_url || '',
          event.page_title || '',
          event.page_referrer || '',
          event.element_id || '',
          event.element_class || '',
          event.element_text || '',
          event.element_type || '',
          userAgent,
          ipAddress,
          event.page_load_time || 0,
          event.time_on_page || 0,
          event.scroll_depth || 0,
          event.is_conversion ? 1 : 0,
          event.conversion_type || null,
          event.conversion_value || 0,
          event.utm_source || null,
          event.utm_medium || null,
          event.utm_campaign || null,
          event.utm_term || null,
          event.utm_content || null,
          event.client_timestamp || currentTime,
          currentTime,
          currentTime
        ).run()
        
        successCount++
        
        // Update real-time metrics if it's a significant event
        if (event.is_conversion || ['form_submit', 'button_click', 'page_view'].includes(event.event_name)) {
          await this.updateRealtimeMetrics(DB, event, currentTime)
        }
        
      } catch (eventError) {
        console.error(`Error processing event ${event.event_id}:`, eventError)
        errorCount++
      }
    }
    
    return c.json({
      success: true,
      processed: events.length,
      successful: successCount,
      errors: errorCount,
      message: `Processed ${successCount}/${events.length} events successfully`
    })
    
  } catch (error) {
    console.error('Event batch processing error:', error)
    return c.json({ error: 'Event batch processing failed' }, 500)
  }
})

// Event Beacon Endpoint (for page unload)
app.post('/api/events/beacon', async (c) => {
  const { DB } = c.env
  
  try {
    const { events } = await c.req.json()
    
    if (!events || !Array.isArray(events)) {
      return new Response('OK', { status: 200 }) // Always return OK for beacon
    }
    
    const ipAddress = c.req.header('CF-Connecting-IP') || 'Unknown'
    const userAgent = c.req.header('User-Agent') || 'Unknown'
    const currentTime = new Date().toISOString()
    
    // Process beacon events quickly (simpler processing)
    for (const event of events.slice(0, 10)) { // Limit to 10 events for beacon
      try {
        await DB.prepare(`
          INSERT INTO user_event_logs (
            event_id, event_name, event_category, user_identifier, session_id,
            event_data, page_url, user_agent, ip_address, server_timestamp, created_at
          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        `).bind(
          event.event_id || `evt_${Date.now()}_${Math.random().toString(36).substring(7)}`,
          event.event_name || 'beacon_event',
          event.event_category || 'technical',
          event.user_identifier || 'anonymous',
          event.session_id || 'unknown',
          JSON.stringify(event),
          event.page_url || '',
          userAgent,
          ipAddress,
          currentTime,
          currentTime
        ).run()
      } catch (eventError) {
        console.error('Beacon event error:', eventError)
      }
    }
    
    return new Response('OK', { status: 200 })
    
  } catch (error) {
    console.error('Event beacon error:', error)
    return new Response('OK', { status: 200 }) // Always return OK for beacon
  }
})

// Get Event Tracking Configuration
app.get('/api/events/config', async (c) => {
  const { DB } = c.env
  
  try {
    const { results: config } = await DB.prepare(`
      SELECT 
        event_name, event_category, ga4_enabled, ga4_event_name, ga4_parameters,
        fb_enabled, fb_event_name, fb_parameters, is_conversion, conversion_value, description
      FROM event_tracking_config 
      WHERE is_active = 1
      ORDER BY event_category, event_name
    `).all()
    
    return c.json({
      success: true,
      config: config,
      message: 'Event tracking configuration retrieved'
    })
    
  } catch (error) {
    console.error('Event config error:', error)
    return c.json({ error: 'Failed to get event configuration' }, 500)
  }
})

// Get Real-time Analytics Dashboard Data  
app.get('/api/events/realtime-dashboard', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    // Get recent events (last hour)
    const { results: recentEvents } = await DB.prepare(`
      SELECT 
        event_name, event_category, COUNT(*) as count,
        COUNT(DISTINCT user_identifier) as unique_users,
        SUM(CASE WHEN is_conversion = 1 THEN 1 ELSE 0 END) as conversions,
        AVG(time_on_page) as avg_time_on_page,
        AVG(scroll_depth) as avg_scroll_depth
      FROM user_event_logs 
      WHERE server_timestamp >= datetime('now', '-1 hour')
      GROUP BY event_name, event_category
      ORDER BY count DESC
      LIMIT 20
    `).all()
    
    // Get conversion events (last 24 hours)
    const { results: conversions } = await DB.prepare(`
      SELECT 
        event_name, conversion_type, conversion_value, page_url, user_identifier,
        server_timestamp, utm_source, utm_medium, utm_campaign
      FROM user_event_logs 
      WHERE is_conversion = 1 
      AND server_timestamp >= datetime('now', '-24 hours')
      ORDER BY server_timestamp DESC
      LIMIT 50
    `).all()
    
    // Get top pages (last 24 hours)
    const { results: topPages } = await DB.prepare(`
      SELECT 
        page_url, page_title, COUNT(*) as pageviews,
        COUNT(DISTINCT user_identifier) as unique_visitors,
        AVG(time_on_page) as avg_time_on_page,
        AVG(scroll_depth) as avg_scroll_depth,
        SUM(CASE WHEN is_conversion = 1 THEN 1 ELSE 0 END) as conversions
      FROM user_event_logs 
      WHERE server_timestamp >= datetime('now', '-24 hours')
      AND event_name = 'page_view'
      GROUP BY page_url, page_title
      ORDER BY pageviews DESC
      LIMIT 20
    `).all()
    
    // Get user journey overview
    const { results: journeyStats } = await DB.prepare(`
      SELECT 
        COUNT(DISTINCT user_identifier) as total_users,
        COUNT(DISTINCT session_id) as total_sessions,
        AVG(time_on_page) as avg_session_duration,
        COUNT(*) as total_events
      FROM user_event_logs 
      WHERE server_timestamp >= datetime('now', '-24 hours')
    `).all()
    
    // Get real-time metrics (last hour by minute)
    const { results: realtimeMetrics } = await DB.prepare(`
      SELECT 
        strftime('%H:%M', time_bucket) as time_label,
        SUM(event_count) as events,
        SUM(unique_users) as users,
        SUM(conversion_count) as conversions
      FROM realtime_event_metrics 
      WHERE time_bucket >= datetime('now', '-1 hour')
      AND bucket_type = 'minute'
      GROUP BY time_bucket
      ORDER BY time_bucket ASC
    `).all()
    
    return c.json({
      success: true,
      data: {
        recentEvents: recentEvents,
        conversions: conversions,
        topPages: topPages,
        journeyStats: journeyStats[0] || {},
        realtimeMetrics: realtimeMetrics
      },
      timestamp: new Date().toISOString()
    })
    
  } catch (error) {
    console.error('Realtime dashboard error:', error)
    return c.json({ error: 'Failed to get realtime dashboard data' }, 500)
  }
})

// Get Event Analytics (detailed analytics)
app.get('/api/events/analytics', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  const { timeframe = '7d', event_category = 'all' } = c.req.query()
  
  try {
    let timeFilter = ''
    switch(timeframe) {
      case '1h': timeFilter = "datetime('now', '-1 hour')"; break
      case '24h': timeFilter = "datetime('now', '-24 hours')"; break
      case '7d': timeFilter = "datetime('now', '-7 days')"; break
      case '30d': timeFilter = "datetime('now', '-30 days')"; break
      default: timeFilter = "datetime('now', '-7 days')"
    }
    
    let categoryFilter = ''
    if (event_category !== 'all') {
      categoryFilter = `AND event_category = '${event_category}'`
    }
    
    // Event summary
    const { results: eventSummary } = await DB.prepare(`
      SELECT 
        event_name, event_category, COUNT(*) as total_events,
        COUNT(DISTINCT user_identifier) as unique_users,
        COUNT(DISTINCT session_id) as unique_sessions,
        SUM(CASE WHEN is_conversion = 1 THEN 1 ELSE 0 END) as conversions,
        SUM(conversion_value) as total_conversion_value,
        AVG(time_on_page) as avg_time_on_page,
        AVG(scroll_depth) as avg_scroll_depth
      FROM user_event_logs 
      WHERE server_timestamp >= ${timeFilter} ${categoryFilter}
      GROUP BY event_name, event_category
      ORDER BY total_events DESC
    `).all()
    
    // Daily trends
    const { results: dailyTrends } = await DB.prepare(`
      SELECT 
        DATE(server_timestamp) as date,
        COUNT(*) as events,
        COUNT(DISTINCT user_identifier) as users,
        COUNT(DISTINCT session_id) as sessions,
        SUM(CASE WHEN is_conversion = 1 THEN 1 ELSE 0 END) as conversions
      FROM user_event_logs 
      WHERE server_timestamp >= ${timeFilter} ${categoryFilter}
      GROUP BY DATE(server_timestamp)
      ORDER BY date ASC
    `).all()
    
    // Traffic sources
    const { results: trafficSources } = await DB.prepare(`
      SELECT 
        COALESCE(utm_source, 'direct') as source,
        COALESCE(utm_medium, 'none') as medium,
        COUNT(*) as events,
        COUNT(DISTINCT user_identifier) as users,
        SUM(CASE WHEN is_conversion = 1 THEN 1 ELSE 0 END) as conversions
      FROM user_event_logs 
      WHERE server_timestamp >= ${timeFilter} ${categoryFilter}
      GROUP BY utm_source, utm_medium
      ORDER BY events DESC
    `).all()
    
    return c.json({
      success: true,
      data: {
        summary: eventSummary,
        trends: dailyTrends,
        traffic: trafficSources
      },
      filters: {
        timeframe: timeframe,
        category: event_category
      }
    })
    
  } catch (error) {
    console.error('Event analytics error:', error)
    return c.json({ error: 'Failed to get event analytics' }, 500)
  }
})

// Helper function to update real-time metrics
async function updateRealtimeMetrics(DB, event, timestamp) {
  try {
    const hourBucket = timestamp.substring(0, 13) + ':00:00' // Round to hour
    const minuteBucket = timestamp.substring(0, 16) + ':00' // Round to minute
    
    // Update hourly metrics
    await DB.prepare(`
      INSERT INTO realtime_event_metrics (
        time_bucket, bucket_type, event_name, event_category, 
        event_count, unique_users, conversion_count, total_conversion_value
      ) VALUES (?, ?, ?, ?, 1, 1, ?, ?)
      ON CONFLICT(time_bucket, bucket_type, event_name) 
      DO UPDATE SET 
        event_count = event_count + 1,
        unique_users = unique_users + 1,
        conversion_count = conversion_count + ?,
        total_conversion_value = total_conversion_value + ?
    `).bind(
      hourBucket, 'hour', event.event_name, event.event_category,
      event.is_conversion ? 1 : 0, event.conversion_value || 0,
      event.is_conversion ? 1 : 0, event.conversion_value || 0
    ).run()
    
    // Update minute metrics  
    await DB.prepare(`
      INSERT INTO realtime_event_metrics (
        time_bucket, bucket_type, event_name, event_category,
        event_count, unique_users, conversion_count, total_conversion_value
      ) VALUES (?, ?, ?, ?, 1, 1, ?, ?)
      ON CONFLICT(time_bucket, bucket_type, event_name)
      DO UPDATE SET 
        event_count = event_count + 1,
        unique_users = unique_users + 1,
        conversion_count = conversion_count + ?,
        total_conversion_value = total_conversion_value + ?
    `).bind(
      minuteBucket, 'minute', event.event_name, event.event_category,
      event.is_conversion ? 1 : 0, event.conversion_value || 0,
      event.is_conversion ? 1 : 0, event.conversion_value || 0
    ).run()
    
  } catch (error) {
    console.error('Error updating realtime metrics:', error)
  }
}

// ====================================
// KVKV COOKIE CONSENT API ENDPOINTS  
// ====================================

// KVKV Cookie Consent - Get Cookie Categories
app.get('/api/kvkv/cookie-categories', async (c) => {
  const { DB } = c.env
  
  try {
    const { results: categories } = await DB.prepare(`
      SELECT 
        category_key,
        category_name_tr,
        category_name_en,
        description_tr,
        description_en,
        is_required,
        default_state,
        legal_basis_tr,
        icon_class,
        color_class
      FROM cookie_categories 
      WHERE is_enabled = 1
      ORDER BY display_order
    `).all()
    
    return c.json({
      success: true,
      categories: categories,
      message: 'Cookie kategorileri getirildi'
    })
    
  } catch (error) {
    console.error('Cookie categories error:', error)
    return c.json({ error: 'Cookie kategorileri getirilemedi' }, 500)
  }
})

// KVKV Cookie Consent - Get Cookie Details
app.get('/api/kvkv/cookie-details/:category', async (c) => {
  const { DB } = c.env
  const category = c.req.param('category')
  
  try {
    const { results: cookies } = await DB.prepare(`
      SELECT 
        cd.cookie_name,
        cd.purpose_tr,
        cd.purpose_en,
        cd.provider,
        cd.domain,
        cd.expiry_duration,
        cd.cookie_type,
        cd.is_essential,
        cd.is_third_party,
        cd.data_collected,
        cc.category_name_tr,
        cc.category_name_en
      FROM cookie_definitions cd
      JOIN cookie_categories cc ON cd.category_id = cc.id
      WHERE cc.category_key = ? AND cd.is_active = 1
      ORDER BY cd.cookie_name
    `).bind(category).all()
    
    return c.json({
      success: true,
      cookies: cookies,
      category: category
    })
    
  } catch (error) {
    console.error('Cookie details error:', error)
    return c.json({ error: 'Cookie detayları getirilemedi' }, 500)
  }
})

// KVKV Cookie Consent - Save User Consent
app.post('/api/kvkv/consent', async (c) => {
  const { DB } = c.env
  
  try {
    const {
      userIdentifier,
      necessaryCookies = true, // Always true
      functionalCookies = false,
      analyticsCookies = false,
      marketingCookies = false,
      consentMethod = 'banner',
      pageUrl,
      privacyPolicyVersion = '1.0'
    } = await c.req.json()
    
    if (!userIdentifier) {
      return c.json({ error: 'Kullanıcı tanımlayıcı gerekli' }, 400)
    }
    
    const ipAddress = c.req.header('CF-Connecting-IP') || c.req.header('X-Forwarded-For') || 'Unknown'
    const userAgent = c.req.header('User-Agent') || 'Unknown'
    const currentTime = new Date().toISOString()
    
    // First, check if user has existing consent
    const { results: existingConsents } = await DB.prepare(`
      SELECT id, necessary_cookies, functional_cookies, analytics_cookies, marketing_cookies
      FROM cookie_consents 
      WHERE user_identifier = ? AND consent_withdrawn = 0
      ORDER BY consent_date DESC 
      LIMIT 1
    `).bind(userIdentifier).all()
    
    const previousConsent = existingConsents[0] || null
    
    // Insert new consent record
    const consentResult = await DB.prepare(`
      INSERT INTO cookie_consents (
        user_identifier, ip_address, user_agent,
        necessary_cookies, functional_cookies, analytics_cookies, marketing_cookies,
        consent_version, consent_date, consent_method, consent_language,
        privacy_policy_version, cookie_policy_version, page_url,
        session_id, created_at, updated_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      userIdentifier, ipAddress, userAgent,
      necessaryCookies ? 1 : 0, functionalCookies ? 1 : 0, 
      analyticsCookies ? 1 : 0, marketingCookies ? 1 : 0,
      '1.0', currentTime, consentMethod, 'tr',
      privacyPolicyVersion, '1.0', pageUrl,
      userIdentifier, currentTime, currentTime
    ).run()
    
    // Log consent history if this is a change
    if (previousConsent) {
      const changedCategories = []
      if (previousConsent.functional_cookies !== (functionalCookies ? 1 : 0)) changedCategories.push('functional')
      if (previousConsent.analytics_cookies !== (analyticsCookies ? 1 : 0)) changedCategories.push('analytics')  
      if (previousConsent.marketing_cookies !== (marketingCookies ? 1 : 0)) changedCategories.push('marketing')
      
      if (changedCategories.length > 0) {
        await DB.prepare(`
          INSERT INTO consent_history (
            user_identifier, consent_id, action_type,
            changed_categories, previous_state, new_state,
            change_reason, ip_address, user_agent, page_url, created_at
          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        `).bind(
          userIdentifier, consentResult.meta.last_row_id, 'update',
          JSON.stringify(changedCategories),
          JSON.stringify({
            functional: previousConsent.functional_cookies,
            analytics: previousConsent.analytics_cookies, 
            marketing: previousConsent.marketing_cookies
          }),
          JSON.stringify({
            functional: functionalCookies,
            analytics: analyticsCookies,
            marketing: marketingCookies
          }),
          'user_action', ipAddress, userAgent, pageUrl, currentTime
        ).run()
      }
    } else {
      // First time consent
      await DB.prepare(`
        INSERT INTO consent_history (
          user_identifier, consent_id, action_type,
          changed_categories, new_state, change_reason,
          ip_address, user_agent, page_url, created_at
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
      `).bind(
        userIdentifier, consentResult.meta.last_row_id, 'grant',
        JSON.stringify(['initial']),
        JSON.stringify({
          functional: functionalCookies,
          analytics: analyticsCookies,
          marketing: marketingCookies
        }),
        'user_action', ipAddress, userAgent, pageUrl, currentTime
      ).run()
    }
    
    // Log KVKV compliance event
    await DB.prepare(`
      INSERT INTO kvkv_compliance_logs (
        event_type, user_identifier, event_description,
        legal_basis, compliance_status, ip_address, user_agent,
        request_details, created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      'consent_request', userIdentifier, 
      `Cookie consent ${previousConsent ? 'updated' : 'granted'}: Analytics=${analyticsCookies}, Marketing=${marketingCookies}`,
      'KVKV Madde 5/1 - Açık rıza', 'compliant',
      ipAddress, userAgent,
      JSON.stringify({
        method: consentMethod,
        categories: { functional: functionalCookies, analytics: analyticsCookies, marketing: marketingCookies },
        page: pageUrl
      }), currentTime
    ).run()
    
    return c.json({
      success: true,
      consentId: consentResult.meta.last_row_id,
      message: 'Cookie tercihleri kaydedildi',
      settings: {
        necessary: necessaryCookies,
        functional: functionalCookies,
        analytics: analyticsCookies,
        marketing: marketingCookies
      }
    })
    
  } catch (error) {
    console.error('Cookie consent error:', error)
    return c.json({ error: 'Cookie tercihleri kaydedilemedi' }, 500)
  }
})

// KVKV Cookie Consent - Get User Consent Status  
app.get('/api/kvkv/consent-status/:userIdentifier', async (c) => {
  const { DB } = c.env
  const userIdentifier = c.req.param('userIdentifier')
  
  try {
    const { results: consents } = await DB.prepare(`
      SELECT 
        necessary_cookies,
        functional_cookies,
        analytics_cookies, 
        marketing_cookies,
        consent_date,
        consent_version,
        consent_method
      FROM cookie_consents
      WHERE user_identifier = ? AND consent_withdrawn = 0
      ORDER BY consent_date DESC
      LIMIT 1
    `).bind(userIdentifier).all()
    
    if (consents.length === 0) {
      return c.json({
        success: true,
        hasConsent: false,
        message: 'Kullanıcı henüz cookie tercihlerini belirtmemiş'
      })
    }
    
    const consent = consents[0]
    return c.json({
      success: true,
      hasConsent: true,
      settings: {
        necessary: consent.necessary_cookies === 1,
        functional: consent.functional_cookies === 1,
        analytics: consent.analytics_cookies === 1,
        marketing: consent.marketing_cookies === 1
      },
      consentDate: consent.consent_date,
      consentVersion: consent.consent_version,
      consentMethod: consent.consent_method
    })
    
  } catch (error) {
    console.error('Consent status error:', error)
    return c.json({ error: 'Cookie tercihleri getirilemedi' }, 500)
  }
})

// KVKV Cookie Consent - Withdraw Consent
app.post('/api/kvkv/withdraw-consent', async (c) => {
  const { DB } = c.env
  
  try {
    const { userIdentifier, withdrawalReason } = await c.req.json()
    
    if (!userIdentifier) {
      return c.json({ error: 'Kullanıcı tanımlayıcı gerekli' }, 400)
    }
    
    const ipAddress = c.req.header('CF-Connecting-IP') || 'Unknown'
    const userAgent = c.req.header('User-Agent') || 'Unknown'
    const currentTime = new Date().toISOString()
    
    // Mark existing consent as withdrawn
    await DB.prepare(`
      UPDATE cookie_consents 
      SET consent_withdrawn = 1, 
          withdrawal_date = ?,
          withdrawal_reason = ?,
          updated_at = ?
      WHERE user_identifier = ? AND consent_withdrawn = 0
    `).bind(currentTime, withdrawalReason || 'User request', currentTime, userIdentifier).run()
    
    // Log withdrawal in history
    await DB.prepare(`
      INSERT INTO consent_history (
        user_identifier, action_type, change_reason,
        ip_address, user_agent, created_at
      ) VALUES (?, ?, ?, ?, ?, ?)
    `).bind(
      userIdentifier, 'withdraw', withdrawalReason || 'User withdrawal',
      ipAddress, userAgent, currentTime
    ).run()
    
    // Log KVKV compliance event
    await DB.prepare(`
      INSERT INTO kvkv_compliance_logs (
        event_type, user_identifier, event_description,
        legal_basis, compliance_status, ip_address, user_agent, created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      'consent_withdrawal', userIdentifier,
      `Cookie consent withdrawn: ${withdrawalReason || 'User request'}`,
      'KVKV Madde 11 - Rızanın geri alınması', 'compliant',
      ipAddress, userAgent, currentTime
    ).run()
    
    return c.json({
      success: true,
      message: 'Cookie rızası başarıyla geri çekildi'
    })
    
  } catch (error) {
    console.error('Withdraw consent error:', error)
    return c.json({ error: 'Cookie rızası geri çekilemedi' }, 500)
  }
})

// KVKV Admin - Cookie Consent Dashboard
app.get('/api/admin/kvkv/consent-dashboard', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    // Get consent statistics
    const { results: stats } = await DB.prepare(`
      SELECT 
        COUNT(*) as total_consents,
        SUM(CASE WHEN analytics_cookies = 1 THEN 1 ELSE 0 END) as analytics_accepted,
        SUM(CASE WHEN marketing_cookies = 1 THEN 1 ELSE 0 END) as marketing_accepted,
        SUM(CASE WHEN functional_cookies = 1 THEN 1 ELSE 0 END) as functional_accepted,
        SUM(CASE WHEN consent_withdrawn = 1 THEN 1 ELSE 0 END) as withdrawn_consents
      FROM cookie_consents
      WHERE consent_date >= datetime('now', '-30 days')
    `).all()
    
    // Get recent consents
    const { results: recentConsents } = await DB.prepare(`
      SELECT 
        user_identifier,
        analytics_cookies,
        marketing_cookies, 
        functional_cookies,
        consent_date,
        consent_method,
        ip_address
      FROM cookie_consents
      WHERE consent_withdrawn = 0
      ORDER BY consent_date DESC
      LIMIT 20
    `).all()
    
    // Get compliance logs
    const { results: complianceLogs } = await DB.prepare(`
      SELECT 
        event_type,
        event_description,
        compliance_status,
        created_at
      FROM kvkv_compliance_logs
      ORDER BY created_at DESC
      LIMIT 10
    `).all()
    
    return c.json({
      success: true,
      statistics: stats[0],
      recentConsents: recentConsents,
      complianceLogs: complianceLogs
    })
    
  } catch (error) {
    console.error('KVKV dashboard error:', error)
    return c.json({ error: 'KVKV dashboard verisi getirilemedi' }, 500)
  }
})

// KVKV Admin - Cookie Policy Management
app.post('/api/admin/kvkv/cookie-policy', requireAdminAuth(), async (c) => {
  const { DB } = c.env
  
  try {
    const {
      version,
      policyTitleTr,
      policyTitleEn,
      policyContentTr,
      policyContentEn,
      effectiveDate,
      changeSummaryTr,
      changeSummaryEn
    } = await c.req.json()
    
    if (!version || !policyTitleTr || !policyContentTr) {
      return c.json({ error: 'Gerekli alanlar eksik' }, 400)
    }
    
    // Deactivate previous policies
    await DB.prepare(`
      UPDATE cookie_policies SET is_active = 0 WHERE is_active = 1
    `).run()
    
    // Insert new policy
    const result = await DB.prepare(`
      INSERT INTO cookie_policies (
        version, policy_title_tr, policy_title_en,
        policy_content_tr, policy_content_en, effective_date,
        change_summary_tr, change_summary_en, is_active, created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(
      version, policyTitleTr, policyTitleEn || policyTitleTr,
      policyContentTr, policyContentEn || policyContentTr,
      effectiveDate || new Date().toISOString(),
      changeSummaryTr, changeSummaryEn, 1, new Date().toISOString()
    ).run()
    
    return c.json({
      success: true,
      policyId: result.meta.last_row_id,
      message: 'Cookie politikası başarıyla güncellendi'
    })
    
  } catch (error) {
    console.error('Cookie policy error:', error)
    return c.json({ error: 'Cookie politikası güncellenemedi' }, 500)
  }
})

export default app
